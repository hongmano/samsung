#include "pat_def_PS.h"
#include "pat_def_magnum6.h"
#include "HEADER.h"

#undef IDXI8
#define IDXI8(myrep)							\n \
	%   STI(8, myrep)			Ca(CYP8_DD_)	\n \
	%   IDXI(8, BranchSelf)  	Ca(CYP8_DD_)

#undef D5_
#undef D6_
#define D5_		1		//see void DRegSet(CString D_set, DWORD d_value)
#define D6_		1		//see void DRegSet(CString D_set, DWORD d_value)

#define XXXX	0
#define OOOO	1
#define SetJamramPtr0			\n \
	datgen1 jamramptrload		\n \
	jamramptr1commonudataval 0		//0 base
#define SetJamramToDmain	\n \
	datgen1 sjam,dmain
#define IncJamramPtr		\n \
	datgen1 jamramincr
#undef SetJamram
#define SetJamram(my1st_X, my1st)																							\n \
	if ((JamramPtr%2)==0)		{																							\n \
		X_addr = (my1st & 0xFFF000) >> 12;																					\n \
		Y_addr = my1st & 0x0000FFF;																							\n \
		for (int idx = 0; idx < 12; idx++) {																				\n \
			iX[idx] = (X_addr >> idx) & 1;																					\n \
			iY[idx] = (Y_addr >> idx) & 1;																					\n \
		}																													\n \
		iEven = iX[8] << 1 | iX[10] << 2 | iX[4] << 3 | iX[6] << 4  | iX[0] << 5  | iX[2] << 6  |							\n \
				iY[8] << 7 | iY[10] << 8 | iY[4] << 9 | iY[6] << 10 | iY[0] << 11 | iY[2] << 12 | my1st_X<<13;				\n \
		iOdd  = iX[9] << 1 | iX[11] << 2 | iX[5] << 3 | iX[7] << 4  | iX[1] << 5  | iX[3] << 6  |							\n \
				iY[9] << 7 | iY[11] << 8 | iY[5] << 9 | iY[7] << 10 | iY[1] << 11 | iY[3] << 12 | my1st_X<<13;;				\n \
	}																														\n \
	if ((JamramPtr%2)==1)		{																							\n \
		X_addr = (my1st & 0xFFF000) >> 12;																					\n \
		Y_addr = my1st & 0x0000FFF;																							\n \
		for (int idx = 0; idx < 12; idx++) {																				\n \
				iX[idx] = (X_addr >> idx) & 1;																				\n \
				iY[idx] = (Y_addr >> idx) & 1;																				\n \
		}																													\n \
		iEven = iEven | iX[8] << 14 | iX[10] << 15 | iX[4] << 16 | iX[6] << 17 | iX[0] << 18 | iX[2] << 19 |				\n \
						iY[8] << 20 | iY[10] << 21 | iY[4] << 22 | iY[6] << 23 | iY[0] << 24 | iY[2] << 25 | my1st_X << 26;	\n \
		iOdd =   iOdd | iX[9] << 14 | iX[11] << 15 | iX[5] << 16 | iX[7] << 17 | iX[1] << 18 | iX[3] << 19 |				\n \
						iY[9] << 20 | iY[11] << 21 | iY[5] << 22 | iY[7] << 23 | iY[1] << 24 | iY[3] << 25 | my1st_X << 26;	\n \
		apg_jam_ram_set((int)(JamramPtr/2), 1, 0, iEven);																	\n \
		apg_jam_ram_set((int)(JamramPtr/2), 1, 1, iOdd);																	\n \
	}																														\n \
	JamramPtr++;																											


PATTERN(PDCSPRCATA2, memory) //20190926 TOF_DDR
	@{

//TOF_DDR + t_d1
#if 1
		//SDR_DRV									//CPE
		CLOCK_PS_ram_set(10, 0,0xffff,0x0);		CLOCK_PS_ram_set(10, 1, 0,	0xffffffff);		//CLK rising		PS_CLOCK11
		CLOCK_PS_ram_set(11, 0, 0,		0x0);		CLOCK_PS_ram_set(11, 1, 0,	0x0);				//CLK falling		PS_CLOCK12

		//DDR_DRV									//CPE
		CLOCK_PS_ram_set(20, 0,0x55555555,0x0);	//CLOCK_PS_ram_set(20, 1, 0,	0xffffffff);	//CLK		PS_CLOCK21
													//CLOCK_PS_ram_set(20, 1, 0,	0xffffffff); is moved to main(set D5,D6) from PDBSPRC10B3.pat
		CLOCK_PS_ram_set(21, 0, 0, 0);				CLOCK_PS_ram_set(21, 1, 0, 0);					//CLK		PS_CLOCK22

////t_CLK1
#undef CLK_NOP
#define		CLK_NOP		\n \
	pinfunc PS_CLOCK22

#if 1
#define X8_		\n \
			datgen1	odmain
#define X10_	\n \
			datgen1 sdmain,shrdr,dmain,odmain
#define X4_		\n \
			datgen1 sdmain,shrdr,dmain,odmain
#define X6_		\n \
			datgen1 sdmain,shrdr,dmain,odmain
#define X0_		\n \
			datgen1 sdmain,shrdr,dmain,odmain
#define X2_		\n \
			datgen1 sdmain,shrdr,dmain,odmain
//
#define Y8_		\n \
			datgen1 sdmain,shrdr,dmain,odmain
#define Y10_		\n \
			datgen1 sdmain,shrdr,dmain,odmain
#define Y4_		\n \
			datgen1 sdmain,shrdr,dmain,odmain
#define Y6_		\n \
			datgen1 sdmain,shrdr,dmain,odmain
#define Y0_		\n \
			datgen1 sdmain,shrdr,dmain,odmain
#define Y2_		\n \
			datgen1 sdmain,shrdr,dmain,odmain
#define ShiftRightDmain_		\n \
			datgen1 sdmain,shrdr,dmain,odmain
#endif

//SDR
#define		NOP1_M1_	 421
#define		NOP1_M2_	 422
#define		MRW1_M1_	 423
#define		MRW1_M2_	 424
#define		MRW2_M1_	 425
#define		MRW2_M2_	 426
#define		MRW1R1_M1_	 427
#define		MRW1R1_M2_	 428
#define		MRW2R1_M1_	 429
#define		MRW2R1_M2_	 430
#define		MRW1A_M1_	 431
#define		MRW1A_M2_	 432
#define		MRW2A_M1_	 433
#define		MRW2A_M2_	 434
#define		MPCA_M1_	 435
#define		MPCA_M2_	 436
#define		PDNT_M1_	 437
#define		PDNT_M2_	 438
#define		MRW_M1_		 439
#define		MRW_M2_		 440
#define		MRWS1_M1_	 441
#define		MRWS1_M2_	 442
#define		MRWS2_M1_	 443
#define		MRWS2_M2_	 444
#define		MRWS3_M1_	 445
#define		MRWS3_M2_	 446
#define		MRWS4_M1_	 447
#define		MRWS4_M2_	 448
#define		MRWS5_M1_	 449
#define		MRWS5_M2_	 450
#define		MRWS6_M1_	 451
#define		MRWS6_M2_	 452
#define		MRWS7_M1_	 453
#define		MRWS7_M2_	 454
#define		MRWS8_M1_	 455
#define		MRWS8_M2_	 456
#define		AACT_M1_	460
#define		AACT_M2_	461
#define		AWR1_M1_	462
#define		AWR1_M2_	463
#define		AWR3_M1_	464
#define		AWR3_M2_	465
#define		AWR5_M1_	466
#define		AWR5_M2_	467
#define		AWR11_M1_	468
#define		AWR11_M2_	469
#define		AWR13_M1_	470
#define		AWR13_M2_	471
#define		AWR15_M1_	472
#define		AWR15_M2_	473
#define		ARD_M1_		474
#define		ARD_M2_		475
#define		APRE_M1_	476
#define		APRE_M2_	477
#define		AREF_M1_	478
#define		AREF_M2_	479
#define		RESET_M1_	480
#define		RESET_M2_	481
#define		MRR_M1_		482
#define		MRR_M2_		483
#define		CYP1_		490
#define		CYP2_      	491
#define		CYP3_      	492
#define		CYP4_      	493
#define		CYP5_      	494
#define		CYP6_      	495
#define		CYP7_      	496
#define		CYP8_      	497		//DES
#define		CYP9_      	498
#define		CYP10_     	499
#define		CYP11_      500
#define		CYP12_     	501
#define		CYP13_      501
#define		CYP14_     	502
#define		CYP15_      503
#define		CYP16_     	504

//DDR
#define		NOP1_DD_	 321
#define		MRW1_DD_	 323
#define		MRW2_DD_	 325
#define		MRW1R1_DD_	 327
#define		MRW2R1_DD_	 329
#define		MRW1A_DD_	 331
#define		MRW2A_DD_	 333
#define		MPCA_DD_	 335
#define		PDNT_DD_	 337
#define		MRW_DD_		 339
#define		MRWS1_DD_	 341
#define		MRWS2_DD_	 343
#define		MRWS3_DD_	 345
#define		MRWS4_DD_	 347
#define		MRWS5_DD_	 349
#define		MRWS6_DD_	 351
#define		MRWS7_DD_	 353
#define		MRWS8_DD_	 355
 
#define		AACT_DD_	360
#define		AWR1_DD_	362
#define		AWR3_DD_	364
#define		AWR5_DD_	366
#define		AWR11_DD_	368
#define		AWR13_DD_	370
#define		AWR15_DD_	372
#define		ARD_DD_		374
#define		APRE_DD_	376
#define		AREF_DD_	378
#define		RESET_DD_	380

#define		MRR_DD_		382

#define		CYP1_DD_	390
#define		CYP2_DD_    391
#define		CYP3_DD_    392
#define		CYP4_DD_    393
#define		CYP5_DD_    394
#define		CYP6_DD_    395
#define		CYP7_DD_    396
#define		CYP8_DD_    397		//DES
#define		CYP9_DD_    398
#define		CYP10_DD_   399
#define		CYP11_DD_   400
#define		CYP12_DD_   401
#define		CYP13_DD_   401
#define		CYP14_DD_   402
#define		CYP15_DD_   403
#define		CYP16_DD_   404


#define concat(a,b) a ## b

#undef CPE
#define	CPE									\n \
	datgen1 uiinvsns 0x00,uistrobemask 0x00 \n \
	mar	read							\n \
	hspinfunc1 ps_data2					\n \
	datgen1 sdmain,shrdr,dmain,odmain	\n \
	hspinfunc1	adhiz

#undef  INIT
#define INIT   														   \n \
				xalu1 xbase, xcare, coff, zero, dxmain, dxbase, dxfield	\n \
				yalu1 ybase, xcare, coff, zero, dymain, dybase, dyfield	\n \
				zalu1 zbase, xcare, coff, zero, dzmain, dzbase, dzfield	\n \
				walu1 wbase, xcare, coff, zero, dwmain, dwbase, dwfield	\n \
				xalu2 xbase, xcare, coff, zero, dxmain, dxbase, dxfield	\n \
				yalu2 ybase, xcare, coff, zero, dymain, dybase, dyfield	\n \
				zalu2 zbase, xcare, coff, zero, dzmain, dzbase, dzfield	\n \
				walu2 wbase, xcare, coff, zero, dwmain, dwbase, dwfield	\n \
				xalu3 xbase, xcare, coff, zero, dxmain, dxbase, dxfield	\n \
				yalu3 ybase, xcare, coff, zero, dymain, dybase, dyfield	\n \
				zalu3 zbase, xcare, coff, zero, dzmain, dzbase, dzfield	\n \
				walu3 wbase, xcare, coff, zero, dwmain, dwbase, dwfield	\n \
				xalu4 xbase, xcare, coff, zero, dxmain, dxbase, dxfield	\n \
				yalu4 ybase, xcare, coff, zero, dymain, dybase, dyfield	\n \
				zalu4 zbase, xcare, coff, zero, dzmain, dzbase, dzfield	\n \
				walu4 wbase, xcare, coff, zero, dwmain, dwbase, dwfield	

//DPAHEAD
#undef NOP
#define NOP

#undef  NOP_
#define NOP_	\n \
	scheduleroffset dat1offset 0 \n \
	hspinfunc1 ps_data2

#undef  XYCLD
#define XYCLD		\n \
	xalu1	oxmain \n  \
	xalu2	oxmain \n  \
	xalu3	oxmain \n  \
	xalu4	oxmain \n  \
	yalu1	oymain \n  \
	yalu2	oymain \n  \
	yalu3	oymain \n  \
	yalu4	oymain

#undef XT
#define XT		    \n \
	xalu1	oxfield \n  \
	xalu2	oxfield \n  \
	xalu3	oxfield \n  \
	xalu4	oxfield

#undef YT
#define YT		    \n \
	yalu1	oyfield \n  \
	yalu2	oyfield \n  \
	yalu3	oyfield \n  \
	yalu4	oyfield

//apg_auxreg_set(1~4, aux1~64, VALUE);	//AddrAux 1-base
#undef  D1_
#define D1_		21
#undef  D2_
#define D2_		22

//apg_dmain_get(1~4,ui0~ui7);
//data_aux_even_set(alpg1~4, aux0~31,0xAAAAA);		//alpg 1-base, DataAux 0-base
#undef	_TPH 
#define _TPH	17
#define _TP 	main

//DDR TSET1 for DRV
#define Ca(myPS_CA)							\n \
	hspinfunc1 concat(PS_CA,myPS_CA)		\n \
	scheduleroffset psa1offset				\n \
	TSET(4)									\n \
	pinfunc PS_CLOCK21
#define Cax(myPS_CA)						\n \
	hspinfunc1 concat(PS_CA,myPS_CA)		\n \
	scheduleroffset psa1offset				\n \
	TSET(4)									\n \
	pinfunc PS_CLOCK22
//
#define Ca_WR(myPS_CA)						\n \
	hspinfunc1 concat(PS_CA,myPS_CA)		\n \
	scheduleroffset psa1offset				\n \
	datgen1 uiinvsns 0x00,uistrobemask 0xff \n \
	TSET(4)									\n \
	pinfunc PS_CLOCK21					//bspark stupid dolt dunce nerd babo retard idiot !!!!

//TSET12 for CPE
#define Ca_CPE(myPS_CA)						\n \
	hspinfunc1 concat(PS_CA,myPS_CA)		\n \
	scheduleroffset psa1offset				\n \
	TSET(5)									\n \
	pinfunc PS_CLOCK21
#endif

	int JamramPtr = 0; //zero bvase
	//int dg = 1; //one base
	//unsigned int FAMAPRCCM,FUSE_X;	

	unsigned int X_addr,Y_addr;	
	unsigned int iEven, iOdd, iX[12], iY[12];


//2001~2500
#if 1
	{
   	SetJamram(XXXX,0x6C3150);  // TMRSF_PCLKWC2_M1	2001
   	SetJamram(XXXX,0x6C3170);  // TMRSF_HOT85_SHIFT_0B<2>	2002
   	SetJamram(XXXX,0x6C3190);  // TMRSF_HOT48_SHIFT_0B<0>	2003
   	SetJamram(XXXX,0x6C31B0);  // TMRSF_WCK_BIAS_OSC_X2_0B	2004
   	//////SetJamram(XXXX,0x6C31D0);  // TMRSF_WCK_BIAS_VREF_DN2_0B	2005
// 	//////SetJamram(XXXX,0x6C31F0);  // TMRSF_PDL_M2_0B	2006
   	SetJamram(XXXX,0x6C3111);  // TMRSF_BURST_ACT_VPP2	2007
   	SetJamram(XXXX,0x6C3131);  // TMRSF_PCURRENT_BUF2_0B	2008
   	SetJamram(XXXX,0x6C3151);  // TMRSF_PU_CONT_C1_DMI0	2009
   	SetJamram(XXXX,0x6C3171);  // TMRSF_VREFDQ_AMPON	2010
   	SetJamram(XXXX,0x6C3191);  // TMRSF_DCC_2_0B	2011
   	SetJamram(XXXX,0x6C31B1);  // TMRSF_ZQ_RXTX_SHORT_DET_EN_L	2012
   	SetJamram(XXXX,0x6C31D1);  // TMRSF_PCLKWC_0B_PULSE_P1	2013
   	//////SetJamram(XXXX,0x6C31F1);  // TMRSF_PCURRENT_BUF0_0B	2014
   	SetJamram(XXXX,0x604111);  // TMRSF_CLK_FF_CUR_DN	2015
   	SetJamram(XXXX,0x604131);  // TMRSF_RCSLEN_DLY_S_G2_M1	2016
   	SetJamram(XXXX,0x604151);  // TMRSF_MRR7_OP1	2017
   	SetJamram(XXXX,0x604171);  // TMRSF_NBTI_LATENCY_TOGGLE_EN	2018
   	SetJamram(XXXX,0x604191);  // TMRSF_FRP_BG3_0B_P1	2019
   	SetJamram(XXXX,0x6041B1);  // TMRSF_RCSLEN_DLY_F_G0_M1	2020
   	SetJamram(XXXX,0x6041D1);  // TMRSF_MR55_PROTECTION	2021
   	SetJamram(XXXX,0x6041F1);  // TMRSF_CLK_BUF_PCURRENT_DN2	2022
   	SetJamram(XXXX,0x644110);  // TMRSF_CS_TCMD2	2023
   	SetJamram(XXXX,0x644130);  // TMRSF_ROWOPEN_M1_DLR_G3C	2024
   	SetJamram(XXXX,0x644150);  // TMRSF_RCSLE_EXT_M1	2025
   	SetJamram(XXXX,0x644170);  // TMRSF_CURRENT_UP1_CS	2026
   	SetJamram(XXXX,0x644190);  // TMRSF_SERAIL_F_DIS	2027
   	SetJamram(XXXX,0x6441B0);  // TMRSF_TCA4_CS	2028
   	SetJamram(XXXX,0x6441D0);  // TMRSF_PRAL_FAST_DIS	2029
   	SetJamram(XXXX,0x6441F0);  // TMRSF_CLK_2	2030
   	SetJamram(XXXX,0x644111);  // TMRSF_WRRPT_SET_ON_X8_P1	2031
   	SetJamram(XXXX,0x644131);  // TMRSF_CBT_CNTLB	2032
   	SetJamram(XXXX,0x644151);  // TMRSF_RT_REFSKIP_OFF	2033
   	SetJamram(XXXX,0x644171);  // TMRSF_TEMP_FLAG_ON	2034
   	SetJamram(XXXX,0x644191);  // TMRSF_ROWOPEN_M2_DLR_G0B	2035
   	SetJamram(XXXX,0x6441B1);  // TMRSF_ROWOPEN_M2_DLR_G1A	2036
   	SetJamram(XXXX,0x6441D1);  // TMRSF_DMI_ON	2037
   	SetJamram(XXXX,0x6441F1);  // TMRSF_RFM_OFF	2038
   	SetJamram(XXXX,0x684110);  // TMRSF_DVFSC_EXT_3200	2039
   	SetJamram(XXXX,0x684130);  // TMRSF_REFRATE_X2_FIX	2040
   	SetJamram(XXXX,0x684150);  // TMRSF_WCKSYNC_WR_FAST_EN	2041
   	SetJamram(XXXX,0x684170);  // TMRSF_DUMMY_BIAS_VSS	2042
   	SetJamram(XXXX,0x684190);  // TMRSF_RAAIMT_DEC1	2043
   	SetJamram(XXXX,0x6841B0);  // TMRSF_RFMSB1	2044
   	SetJamram(XXXX,0x6841D0);  // TMRSF_POSCQ_SRE_ABR_OFF	2045
   	SetJamram(XXXX,0x6841F0);  // TMRSF_SINGLE_DQS_ON_0B	2046
   	SetJamram(XXXX,0x684111);  // TMRSF_ADDCODEDN_PD<3>	2047
// 	//////SetJamram(XXXX,0x684131);  // TMRSF_ABRSKEW_DN	2048
   	SetJamram(XXXX,0x684151);  // TRMSF_VINT_FRP_M2	2049
   	SetJamram(XXXX,0x684171);  // TMRSF_CSL_DIS_DLY_ON	2050
   	SetJamram(XXXX,0x684191);  // TMRSF_RDREP_PAD_ON_M2	2051
   	SetJamram(XXXX,0x6841B1);  // TMRSF_ZQCAL_OFF	2052
   	SetJamram(XXXX,0x6841D1);  // TMRSF_ZQSTOP_START_DIS	2053
   	SetJamram(XXXX,0x6841F1);  // TMRSF_PD_DUTY_UP_0B	2054
   	SetJamram(XXXX,0x6C4110);  // TMRSF_RCSLE_DLY_8500_P2	2055
   	SetJamram(XXXX,0x6C4130);  // TMRSF_RCSLE_DLY_8500_P1	2056
   	SetJamram(XXXX,0x6C4150);  // TMRSF_DEF_PD_CODE_CON<4>	2057
   	SetJamram(XXXX,0x6C4170);  // TMRSF_ZQSTOP_RESET_DISABLE	2058
   	SetJamram(XXXX,0x6C4190);  // TMRSF_DRV_PWR_ON_ZQ_B0_C	2059
   	SetJamram(XXXX,0x6C41B0);  // TMRSF_DEF_PU_CODE_CON<3>	2060
   	SetJamram(XXXX,0x6C41D0);  // TMRSF_ADDCODEDN_CA<3>	2061
   	SetJamram(XXXX,0x6C41F0);  // TMRSF_DINA_1ST_WCK_270_UP_0B	2062
   	SetJamram(XXXX,0x6C4111);  // TMRSF_PREEMP_ON_STEP2_0B	2063
   	SetJamram(XXXX,0x6C4131);  // TMRSF_C2C_RSHORT_OFF_0B	2064
   	SetJamram(XXXX,0x6C4151);  // TMRSF_FREF_28_TO_32_RATIO	2065
   	SetJamram(XXXX,0x6C4171);  // TMRSF_ZQVREFUP_DN2	2066
   	SetJamram(XXXX,0x6C4191);  // TMRSF_MR4_X4_TO_X2	2067
   	SetJamram(XXXX,0x6C41B1);  // TMRSF_WRFF_DMI_EN	2068
   	SetJamram(XXXX,0x6C41D1);  // TMRS_AP2_EN_C	2069
   	SetJamram(XXXX,0x6C41F1);  // TMRSF_DFE_FREQ_CTRL	2070
   	SetJamram(XXXX,0x605110);  // TMRSF_TSHIFT_MRR<2>	2071
   	SetJamram(XXXX,0x605130);  // TMRSF_SELF_FREF_OFF_DIS	2072
   	SetJamram(XXXX,0x605150);  // TMRSF_S7_SRR	2073
   	SetJamram(XXXX,0x605170);  // TMRSF_POSC_ECC_MODE_0	2074
   	SetJamram(XXXX,0x605190);  // TMRSF_MR4_UPPER_SHIFT	2075
   	SetJamram(XXXX,0x6051B0);  // TMRSF_OPTIMIZE_REF2	2076
   	SetJamram(XXXX,0x6051F0);  // TMRSF_SIVC_DD1_SINK_UP_L	2077
   	SetJamram(XXXX,0x605111);  // TMRSF_OFFSET_NDIFF1	2078
   	SetJamram(XXXX,0x605131);  // TMRSF_DS_MODE_IUP	2079
   	SetJamram(XXXX,0x605151);  // TMRSF_VBL_UP3	2080
   	SetJamram(XXXX,0x605171);  // TMRSF_VBL_LEAK1	2081
   	SetJamram(XXXX,0x605191);  // TMRSF_VP_LEAK2	2082
   	SetJamram(XXXX,0x6051B1);  // TMRSF_VP_DN3	2083
   	SetJamram(XXXX,0x6051D1);  // TMRSF_VP_OFFSET_NDIFF8	2084
   	SetJamram(XXXX,0x6051F1);  // TMRSF_VP_OFFSET_PDIFF1	2085
   	SetJamram(XXXX,0x645110);  // TMRSF_ZQ_SEQUENTIAL_PD_CAL_ON	2086
   	SetJamram(XXXX,0x645130);  // TMRSF_DCM_LF_OSC_X2_DIS_B0	2087
   	SetJamram(XXXX,0x645150);  // TMRSF_RD_DCA_OFFSET_B0_R_PHASE180<0>	2088
   	SetJamram(XXXX,0x645170);  // TMRSF_WR_TMMT_B0_R_90	2089
   	SetJamram(XXXX,0x645190);  // TMRSF_DCA_RESOLUTION_DN_0B	2090
   	SetJamram(XXXX,0x6451B0);  // TMRSF_DINA_WCK_BLOCK_DIS	2091
   	SetJamram(XXXX,0x6451D0);  // TMRSF_DCM_BIAS2	2092
   	SetJamram(XXXX,0x6451F0);  // TMRSF_RD_DCA_OFFSET_B0_L_PHASE0<0>	2093
   	SetJamram(XXXX,0x645111);  // TMRSF_TOFFSET_X1_X0P7<2>	2094
   	SetJamram(XXXX,0x645131);  // TMRSF_SIVCBB2_IUP_L	2095
   	SetJamram(XXXX,0x645151);  // TMRSF_PVPPAKDIS_2	2096
   	SetJamram(XXXX,0x645171);  // TMRSF_O123_WIDTH_CTRL0_L	2097
   	SetJamram(XXXX,0x645191);  // TMRSF_WR_TMMT_B0_L_90	2098
   	//////SetJamram(XXXX,0x6451B1);  // TMRSF_TOFFSET_X3P3_X2P5<0>	2099
   	SetJamram(XXXX,0x6451D1);  // TMRSF_DS_MODE_IUP_L	2100
   	SetJamram(XXXX,0x6451F1);  // TMRSF_VGNLA_PCHG_SKIP_L	2101
   	SetJamram(XXXX,0x685110);  // TMRSF_VREFAH_DIS	2102
   	SetJamram(XXXX,0x685130);  // TMRSF_VREFA_DN2	2103
   	SetJamram(XXXX,0x685150);  // TMRSF_EVCDET_TRIM_UP0	2104
   	SetJamram(XXXX,0x685170);  // TMRSF_TOFFSET_X2_X1P7<2>	2105
   	SetJamram(XXXX,0x685190);  // TMRSF_TOFFSET_X0P25_X0P25WD<2>	2106
   	SetJamram(XXXX,0x6851B0);  // TMRSF_TOFFSET_X0P125_X0P125WD<0>	2107
   	SetJamram(XXXX,0x6851D0);  // TMRSF_REVERSE_BIAS_WEAK_EN_0B	2108
   	SetJamram(XXXX,0x6851F0);  // TMRSF_MR4_SUB_X2P5_X2	2109
   	SetJamram(XXXX,0x685111);  // TMRSF_PCURRENT_REP1_0B	2110
   	SetJamram(XXXX,0x685131);  // TMRSF_IO_WR_VDD2L_PG_ALWAYS_TURN_ON_0B	2111
   	SetJamram(XXXX,0x685151);  // TMRSF_EVCDET_TRIM_UP3	2112
   	SetJamram(XXXX,0x685171);  // TMRSF_VREFWCK_CURRENT_SW1	2113
   	SetJamram(XXXX,0x685191);  // TMRSF_HSCI_PATH_CONT_L	2114
   	SetJamram(XXXX,0x6851B1);  // TMRSF_CLKDQ_BLOCKING_OFF_0B	2115
   	SetJamram(XXXX,0x6851D1);  // TMRSF_WR_C2C_PREAMP_CUR_UP2_0B	2116
   	SetJamram(XXXX,0x6851F1);  // TMRSF_CMOSBUF_4266_ON_0B_L	2117
   	SetJamram(XXXX,0x6C5110);  // TMRSF_IVC_PWR_OFF_0B	2118
   	SetJamram(XXXX,0x6C5130);  // TMRSF_VREFWCK_OFFSET1	2119
   	SetJamram(XXXX,0x6C5150);  // TMRSF_WDBI_REPLICA_DLY_P	2120
   	SetJamram(XXXX,0x6C5170);  // TMRSF_HOT85_SHIFT_0B<1>	2121
   	SetJamram(XXXX,0x6C5190);  // TMRSF_HOT48_SHIFT_0B<2>	2122
   	//////SetJamram(XXXX,0x6C51B0);  // TMRSF_WR_C2C_PREAMP0_CUR_UP_0B	2123
   	SetJamram(XXXX,0x6C51D0);  // TMRSF_WCK_BIAS_VREF_UP3_0B	2124
// 	//////SetJamram(XXXX,0x6C51F0);  // TMRSF_PDL_P1_0B	2125
   	SetJamram(XXXX,0x6C5111);  // TMRSF_CURRENT_UP14_L	2126
   	SetJamram(XXXX,0x6C5131);  // TMRSF_LF_DUTY_DN1_0B	2127
   	SetJamram(XXXX,0x6C5151);  // TMRSF_PU_CONT_C2_DQ<0>	2128
   	SetJamram(XXXX,0x6C5171);  // TMRSF_DS_BUF_CURRENT_UP3_0B_L	2129
   	SetJamram(XXXX,0x6C5191);  // TMRSF_SYNC_C2C_DUTY_UP2_0B	2130
   	SetJamram(XXXX,0x6C51B1);  // TMRSF_VREFCAPD_U2	2131
   	SetJamram(XXXX,0x6C51D1);  // TMRSF_IOH_DN_L	2132
   	SetJamram(XXXX,0x6C51F1);  // TMRSF_PREAMP_BUF_CM_DN1_0B	2133
   	SetJamram(XXXX,0x606111);  // TMRSF_RCSL_DIS_DLY_F_G0_P2	2134
   	SetJamram(XXXX,0x606131);  // TMRSF_PCA_G3_REPLICA	2135
   	SetJamram(XXXX,0x606151);  // TMRSF_MRR7_OP0	2136
   	SetJamram(XXXX,0x606171);  // TMRSF_CHIPDIS_REFUSE	2137
   	SetJamram(XXXX,0x606191);  // TMRSF_CA_FF_CUR_DN	2138
   	SetJamram(XXXX,0x6061B1);  // TMRSF_ROWOPEN_M1_DLR_G2D	2139
   	SetJamram(XXXX,0x6061D1);  // TMRSF_IO_TESTMODE_PGON	2140
   	SetJamram(XXXX,0x6061F1);  // TMRSF_CLK_BUF_TCMD3	2141
   	SetJamram(XXXX,0x646110);  // TMRSF_CS_TCMD1	2142
   	SetJamram(XXXX,0x646130);  // TMRSF_PAPB_CON_OFF	2143
   	SetJamram(XXXX,0x646150);  // TMRSF_ROWOPEN_P1_DLR_G3C	2144
   	SetJamram(XXXX,0x646170);  // TMRSF_CURRENT_DN1_CS	2145
   	SetJamram(XXXX,0x646190);  // TMRSF_STAI_ON	2146
   	SetJamram(XXXX,0x6461B0);  // TMRSF_TCA3_CS	2147
   	SetJamram(XXXX,0x6461D0);  // TMRSF_PCLKF_OFF_WR	2148
   	SetJamram(XXXX,0x6461F0);  // TMRSF_CLK_1	2149
   	SetJamram(XXXX,0x646111);  // TMRSF_WRRPT_SET_ON_M1	2150
   	SetJamram(XXXX,0x646131);  // TMRSF_CBT_CNTLD_EN	2151
   	SetJamram(XXXX,0x646151);  // TMRSF_NOR_0P5X_REF	2152
   	SetJamram(XXXX,0x646171);  // TMRSF_DSM_BURST_ON	2153
   	SetJamram(XXXX,0x646191);  // TMRSF_ROWOPEN_M1_DLR_G0B	2154
   	SetJamram(XXXX,0x6461B1);  // TMRSF_ROWOPEN_P1_DLR_G1A	2155
   	SetJamram(XXXX,0x6461D1);  // TMRSF_CLK_UNTERM_BUF_ON	2156
   	SetJamram(XXXX,0x6461F1);  // TMRSF_PRA_ONLY	2157
   	SetJamram(XXXX,0x686110);  // TMRS_MBWL2_CL	2158
   	SetJamram(XXXX,0x686130);  // TMRSF_DVFSC_VDD2L	2159
   	SetJamram(XXXX,0x686150);  // TMRSF_PRTBUF_DIS_FUSE	2160
   	SetJamram(XXXX,0x686170);  // TMRSF_FREF_4_TO_8_RATIO	2161
   	//////SetJamram(XXXX,0x686190);  // TMRSF_RFM_ON	2162
   	SetJamram(XXXX,0x6861B0);  // TMRSF_RFMSB0	2163
   	SetJamram(XXXX,0x6861D0);  // TMRSF_EDGE_BIAS_VINTA	2164
   	SetJamram(XXXX,0x6861F0);  // TMRSF_SELF_BURST_X32	2165
   	SetJamram(XXXX,0x686111);  // TMRSF_FREF_TEMP_SEL	2166
   	SetJamram(XXXX,0x686131);  // TMRSF_ABRSKEW_M1	2167
   	SetJamram(XXXX,0x686151);  // TRMSF_VINT_FRP_M1	2168
   	SetJamram(XXXX,0x686171);  // TRMSF_VINT_FRP_P1	2169
   	SetJamram(XXXX,0x686191);  // TMRSF_ROS_RST_SEL	2170
   	SetJamram(XXXX,0x6861B1);  // TMRSF_ZQUF_3BIT_IGNORE	2171
   	SetJamram(XXXX,0x6861D1);  // TMRSF_PMRWD_M	2172
   	SetJamram(XXXX,0x6861F1);  // TMRSF_FRPD_F_M1	2173
   	SetJamram(XXXX,0x6C6110);  // TMRSF_ZQVREFUP_DN0	2174
   	SetJamram(XXXX,0x6C6130);  // TMRSF_MR4_DIS	2175
   	SetJamram(XXXX,0x6C6150);  // TMRSF_SAFF_OFFSET_DQ_0B	2176
   	SetJamram(XXXX,0x6C6170);  // TMRSF_ZQVREFUP_DN3	2177
   	SetJamram(XXXX,0x6C6190);  // TMRSF_EDGE_GIOPR_CTRL_2	2178
   	SetJamram(XXXX,0x6C61B0);  // TMRSF_DEF_PU_CODE_CON<5>	2179
   	SetJamram(XXXX,0x6C61D0);  // TMRSF_ADDCODEDN_CA<4>	2180
   	//////SetJamram(XXXX,0x6C61F0);  // TMRSF_EQL_EN_0B	2181
   	SetJamram(XXXX,0x6C6111);  // TMRSF_FREF_20_TO_24_RATIO	2182
   	SetJamram(XXXX,0x6C6131);  // TMRSF_PBR_16BANK_EN	2183
   	SetJamram(XXXX,0x6C6151);  // TMRSF_LOW_P_EN	2184
   	SetJamram(XXXX,0x6C6171);  // TMRSF_ZQVREFUP_DN1	2185
   	SetJamram(XXXX,0x6C6191);  // TMRSF_ADDCODEUP_PU<0>	2186
   	SetJamram(XXXX,0x6C61B1);  // TMRSF_EDGE_GIOPR_CTRL_1	2187
   	SetJamram(XXXX,0x6C61D1);  // TMRSF_CHANGE_ODT_CTRL	2188
   	SetJamram(XXXX,0x6C61F1);  // TMRSF_SIVCBB2_EN0	2189
   	SetJamram(XXXX,0x607110);  // TMRSF_TSHIFT_MRR<1>	2190
   	SetJamram(XXXX,0x607130);  // TMRSF_TSHIFT_MRR<0>	2191
   	SetJamram(XXXX,0x607150);  // TMRSF_S6_SRR	2192
   	SetJamram(XXXX,0x607170);  // TMRSF_POSC_ECC_MODE_1	2193
   	SetJamram(XXXX,0x607190);  // TMRSF_MR4_ALL_TEMP_SHIFT	2194
   	SetJamram(XXXX,0x6071B0);  // TMRSF_OPTIMIZE_REF_DIS_PAD	2195
   	SetJamram(XXXX,0x6071D0);  // TMRSF_TOFFSET_X3P3_X2P5<1>	2196
   	SetJamram(XXXX,0x6071F0);  // TMRSF_OCOSC_SPEED_DN_L	2197
   	SetJamram(XXXX,0x607111);  // TMRSF_OFFSET_PDIFF8	2198
   	SetJamram(XXXX,0x607131);  // TMRSF_SR_DZ_CTRL_ON	2199
   	SetJamram(XXXX,0x607151);  // TMRSF_VBL_UPDN_MRS	2200
   	SetJamram(XXXX,0x607171);  // TMRSF_VBL_LEAK3	2201
   	SetJamram(XXXX,0x607191);  // TMRSF_VP_LEAK1	2202
   	SetJamram(XXXX,0x6071B1);  // TMRSF_VP_UP1	2203
   	SetJamram(XXXX,0x6071D1);  // TMRSF_VP_OFFSET_SHIFT4	2204
   	SetJamram(XXXX,0x6071F1);  // TMRSF_VP_OFFSET_PDIFF8	2205
   	SetJamram(XXXX,0x647130);  // TMRSF_DCM_OSC_X2_B0	2206
   	SetJamram(XXXX,0x647150);  // TMRSF_RD_DCA_OFFSET_B0_R_PHASE180<1>	2207
   	SetJamram(XXXX,0x647170);  // TMRSF_WR_TMMT_B0_R_0	2208
   	SetJamram(XXXX,0x647190);  // TMRSF_DCC_0_HALF_0B	2209
   	SetJamram(XXXX,0x6471B0);  // TMRSF_RTT_EN_0B	2210
   	SetJamram(XXXX,0x6471D0);  // TMRSF_DCM_BIAS0	2211
   	SetJamram(XXXX,0x6471F0);  // TMRSF_RD_DCA_OFFSET_B0_L_PHASE0<1>	2212
   	SetJamram(XXXX,0x647111);  // TMRSF_TOFFSET_X1_X0P7<1>	2213
   	SetJamram(XXXX,0x647131);  // TMRSF_TOFFSET_X1P7_X1P3<2>	2214
   	SetJamram(XXXX,0x647151);  // TMRSF_PVPPAKDIS_3	2215
   	SetJamram(XXXX,0x647171);  // TMRSF_CMOSBUF_PCURRENT1_UP0_0B	2216
   	SetJamram(XXXX,0x647191);  // TMRSF_WR_TMMT_B0_L_0	2217
   	SetJamram(XXXX,0x6471B1);  // TMRSF_TOFFSET_X2P5_X2<1>	2218
   	SetJamram(XXXX,0x6471D1);  // TMRSF_DS_MODE_DIS_L	2219
   	SetJamram(XXXX,0x6471F1);  // TMRSF_VPPIB_PCG_OFF_L	2220
   	SetJamram(XXXX,0x687110);  // TMRSF_VREFAH_IDD_UP	2221
   	SetJamram(XXXX,0x687130);  // TMRSF_VREFA_DN3	2222
   	SetJamram(XXXX,0x687150);  // TMRSF_EVCDET_TRIM_DN0	2223
   	SetJamram(XXXX,0x687170);  // TMRSF_VPP_PUMP_OPT_ON1	2224
   	SetJamram(XXXX,0x687190);  // TMRSF_TOFFSET_X0P25_X0P25WD<1>	2225
   	SetJamram(XXXX,0x6871B0);  // TMRSF_MR4_HT_LIMIT_125	2226
   	SetJamram(XXXX,0x6871D0);  // TMRSF_IVC_REVERSE_DIS_0B	2227
   	SetJamram(XXXX,0x6871F0);  // TMRSF_SIVCY_DIS_L	2228
   	SetJamram(XXXX,0x687111);  // TMRSF_PCURRENT_REP0_0B	2229
   	SetJamram(XXXX,0x687131);  // TMRSF_PU_DUTY_UP_DQS_T_0B	2230
   	SetJamram(XXXX,0x687151);  // TMRSF_DINA_1ST_WCK_90_DN_0B	2231
   	SetJamram(XXXX,0x687171);  // TMRSF_VREFWCK_TRIM4_L	2232
   	SetJamram(XXXX,0x687191);  // TMRSF_WCK4_PHASE_DET_WCK_DN_0B	2233
   	SetJamram(XXXX,0x6871B1);  // TMRSF_PWY_SAMPLE2_WCK4_UP_0B	2234
   	SetJamram(XXXX,0x6871D1);  // TMRSF_WR_C2C_PREAMP_DUTY_UP_0B	2235
   	SetJamram(XXXX,0x6871F1);  // TMRSF_RD_C2C_SW_0B	2236
   	SetJamram(XXXX,0x6C7110);  // TMRSF_PCLKWC5_EN_L	2237
   	SetJamram(XXXX,0x6C7130);  // TMRSF_DQ_TOGGLE_BLOCK_L	2238
   	SetJamram(XXXX,0x6C7150);  // TMRSF_WDBI_REPLICA_DLY_M	2239
   	SetJamram(XXXX,0x6C7170);  // TMRSF_HOT85_SHIFT_0B<0>	2240
   	SetJamram(XXXX,0x6C7190);  // TMRSF_HOT48_SHIFT_0B<1>	2241
   	SetJamram(XXXX,0x6C71B0);  // TMRSF_PN_TERM_0B	2242
   	SetJamram(XXXX,0x6C71D0);  // TMRSF_WCK_BIAS_VREF_UP1_0B	2243
// 	//////SetJamram(XXXX,0x6C71F0);  // TMRSF_PDL_M1_0B	2244
   	SetJamram(XXXX,0x6C7111);  // TMRSF_LF_DUTY_UP0_0B	2245
   	SetJamram(XXXX,0x6C7131);  // TMRSF_LF_DUTY_UP2_0B	2246
   	SetJamram(XXXX,0x6C7151);  // TMRSF_DCC_0_0B	2247
   	SetJamram(XXXX,0x6C7171);  // TMRSF_CML_SEL_0B_L	2248
   	SetJamram(XXXX,0x6C7191);  // TMRSF_VREFCAPD_U1	2249
   	SetJamram(XXXX,0x6C71B1);  // TMRSF_VREFDQ_PD_OFF	2250
   	SetJamram(XXXX,0x6C71D1);  // TMRSF_IOL_DN_L	2251
   	SetJamram(XXXX,0x6C71F1);  // TMRSF_PREAMP_BUF_CURRENT_DN8	2252
   	SetJamram(XXXX,0x608111);  // TMRSF_CLK_BUF_CURRENT_UP1	2253
   	SetJamram(XXXX,0x608131);  // TMRSF_BUF_PCURRENT_UP2_CLK	2254
   	SetJamram(XXXX,0x608151);  // TMRSF_EPBT_P1	2255
   	SetJamram(XXXX,0x608171);  // TMRSF_VREFCS_DN2	2256
   	SetJamram(XXXX,0x608191);  // TMRSF_CA_BUF_PCURRENT_UP1	2257
   	SetJamram(XXXX,0x6081B1);  // TMRSF_RCSL_DIS_DLY_S_G0_M1	2258
   	SetJamram(XXXX,0x6081D1);  // TMRSF_ECCEN_INI_CG	2259
   	SetJamram(XXXX,0x6081F1);  // TMRSF_CLK_BUF_PCURRENT_DN1	2260
   	SetJamram(XXXX,0x648110);  // TMRSF_RCSL_DIS_DLY_S_G0_P2	2261
   	SetJamram(XXXX,0x648130);  // TMRSF_PCLKWC5_EN	2262
   	SetJamram(XXXX,0x648150);  // TMRSF_ROS_BANK_RETURN	2263
   	SetJamram(XXXX,0x648170);  // TMRSF_BA_HOLD_OFF	2264
   	SetJamram(XXXX,0x648190);  // TMRSF_ROWOPEN_P1_DLR_G0C	2265
   	SetJamram(XXXX,0x6481B0);  // TMRSF_REF_1P5T_C	2266
   	SetJamram(XXXX,0x6481D0);  // TMRSF_VREFCS_UP1	2267
   	SetJamram(XXXX,0x6481F0);  // TMRSF_FRP_BG3_0B_M1	2268
   	SetJamram(XXXX,0x648111);  // TMRSF_WRRPT_RST_ON_P1	2269
   	SetJamram(XXXX,0x648131);  // TMRSF_ROWOPEN_P1_DLR_G3A	2270
   	SetJamram(XXXX,0x648151);  // TMRSF_ROWOPEN_P1_DLR_G3B	2271
   	SetJamram(XXXX,0x648171);  // TMRSF_ROWOPEN_P1_DLR_G2B	2272
   	SetJamram(XXXX,0x648191);  // TMRSF_ROWOPEN_M1_DLR_G2B	2273
   	SetJamram(XXXX,0x6481B1);  // TMRSF_REFRATE_X1_FIX	2274
   	SetJamram(XXXX,0x6481D1);  // TMRSF_ROWOPEN_M1_DLR_G3B	2275
   	SetJamram(XXXX,0x6481F1);  // TMRSF_DVFSC_RL_CHG	2276
   	SetJamram(XXXX,0x688110);  // TMRSF_VDD2H_VINT_CTRL	2277
   	SetJamram(XXXX,0x688130);  // TMRSF_RL6_RL22_CCL	2278
   	SetJamram(XXXX,0x688150);  // TMRSF_SELF_SKIP_SEL1	2279
   	SetJamram(XXXX,0x688170);  // TMRSF_BL_BIAS_FUSE_DIS	2280
   	SetJamram(XXXX,0x688190);  // TMRSF_FREF_TEMP_ON	2281
   	SetJamram(XXXX,0x6881B0);  // TMRSF_PFA_INC_TYPE	2282
   	//////SetJamram(XXXX,0x6881D0);  // TMRSF_RAAIMT_INIT3	2283
   	SetJamram(XXXX,0x6881F0);  // TMRSF_EDGE_BIAS_VSS	2284
   	SetJamram(XXXX,0x688111);  // TMRSF_RDQ_COPY_OFF	2285
   	SetJamram(XXXX,0x688131);  // TMRSF_SID_MRR_DIS	2286
   	SetJamram(XXXX,0x688151);  // TMRSF_ENHANCED_WCK_ALWAYS_ON	2287
   	SetJamram(XXXX,0x688171);  // TMRSF_PG_DELAY	2288
   	SetJamram(XXXX,0x688191);  // TMRSF_MABRSKEW_DOUBLE_UP2	2289
   	SetJamram(XXXX,0x6881B1);  // TMRSF_VREFZQ_MON_EN_PU	2290
   	SetJamram(XXXX,0x6881D1);  // TMRSF_ZQOSC_SPEED_CTR	2291
   	SetJamram(XXXX,0x6881F1);  // TMRSF_FRPD_F_P1	2292
   	SetJamram(XXXX,0x6C8110);  // TMRSF_ADDB_SUB_DN_CA	2293
   	SetJamram(XXXX,0x6C8130);  // TMRSF_MR4_1K	2294
   	SetJamram(XXXX,0x6C8150);  // TMRSF_DEF_PD_CODE_CON<2>	2295
   	SetJamram(XXXX,0x6C8170);  // TMRSF_DDRMUX_PG_ON_0B	2296
   	SetJamram(XXXX,0x6C8190);  // TMRSF_ZQVREFUP_UP0	2297
   	SetJamram(XXXX,0x6C81B0);  // TMRSF_ZQVREFDN_UP2	2298
   	SetJamram(XXXX,0x6C81D0);  // TMRSF_ZQVREFDN_DN1	2299
   	SetJamram(XXXX,0x6C81F0);  // TMRSF_ADDCODEDN_CA<0>	2300
   	SetJamram(XXXX,0x6C8111);  // TMRSF_PPR_BLOCK	2301
   	SetJamram(XXXX,0x6C8131);  // TMRSF_2_TO_4_RATIO	2302
   	SetJamram(XXXX,0x6C8151);  // TMRSF_SAFF_ANTI_2_0B	2303
   	//////SetJamram(XXXX,0x6C8171);  // TMRSF_PPR_EN	2304
   	SetJamram(XXXX,0x6C8191);  // TMRSF_ADDCODEUP_PU<2>	2305
   	SetJamram(XXXX,0x6C81B1);  // TMRSF_A4_WL	2306
   	SetJamram(XXXX,0x6C81D1);  // TMRSF_IOH_DN	2307
   	SetJamram(XXXX,0x6C81F1);  // TMRSF_DFE_W1_0B	2308
   	SetJamram(XXXX,0x609110);  // TMRSF_TSHIFT_NORM<2>	2309
   	SetJamram(XXXX,0x609130);  // TMRSF_SRD10	2310
   	SetJamram(XXXX,0x609150);  // TMRSF_RT_CLAMP_UP	2311
   	SetJamram(XXXX,0x609170);  // TMRSF_TSMAP_ECC_EN	2312
   	SetJamram(XXXX,0x609190);  // TMRSF_AUTO_OCCAL_EN_L	2313
   	SetJamram(XXXX,0x6091B0);  // TMRSF_ERR_CNT_SET2	2314
   	//////SetJamram(XXXX,0x6091D0);  // TMRSF_TOFFSET_X4_X3P3<1>	2315
   	SetJamram(XXXX,0x6091F0);  // TMRSF_PVPPAKDIS_0	2316
   	SetJamram(XXXX,0x609111);  // TMRSF_VP_DZ_DN2	2317
   	SetJamram(XXXX,0x609131);  // TMRSF_OFFSET_NDIFF4	2318
   	SetJamram(XXXX,0x609151);  // TMRSF_VBL_DN1	2319
   	SetJamram(XXXX,0x609171);  // TMRSF_VBL_MILLER_CAP_OFF	2320
   	SetJamram(XXXX,0x609191);  // TMRSF_VBL_2N_CLOSE	2321
   	SetJamram(XXXX,0x6091B1);  // TMRSF_VP_LEAK3	2322
   	SetJamram(XXXX,0x6091D1);  // TMRSF_VP_UP3	2323
   	SetJamram(XXXX,0x6091F1);  // TMRSF_VP_MILLER_CAP_OFF	2324
   	SetJamram(XXXX,0x649110);  // TMRSF_LINEAR_SEARCH	2325
   	SetJamram(XXXX,0x649150);  // TMRSF_ZQ_VREFUP_INT_DN0	2326
   	SetJamram(XXXX,0x649170);  // TMRSF_RD_DCA_OFFSET_B0_R_PHASE90<0>	2327
   	SetJamram(XXXX,0x649190);  // TMRSF_MR14_MR15_SET	2328
   	SetJamram(XXXX,0x6491B0);  // TMRSF_PU_CONT_C2_DMI0	2329
   	SetJamram(XXXX,0x6491D0);  // TMRSF_DCM_CAP2	2330
   	SetJamram(XXXX,0x6491F0);  // TMRSF_RD_DCA_OFFSET_B0_L_PHASE270<0>	2331
   	SetJamram(XXXX,0x649111);  // TMRSF_TOFFSET_X1P7_X1P3<0>	2332
   	SetJamram(XXXX,0x649131);  // TMRSF_TOFFSET_X1_X0P7<0>	2333
   	SetJamram(XXXX,0x649151);  // TMRSF_VPP2_O123_WIDTH_CTRL1_L	2334
   	SetJamram(XXXX,0x649171);  // TMRSF_VPP2_CLAMPDIS_2	2335
   	SetJamram(XXXX,0x649191);  // TMRSF_CMOSBUF_PCURRENT2_UP0_0B	2336
   	SetJamram(XXXX,0x6491B1);  // TMRSF_WRX_WL_0B	2337
   	SetJamram(XXXX,0x6491D1);  // TMRSF_VPP2_PUMP_OPT_ON1	2338
   	SetJamram(XXXX,0x6491F1);  // TMRSF_PUMP_OPT_ON1	2339
   	SetJamram(XXXX,0x689110);  // TMRSF_VREFLP_DN2	2340
   	SetJamram(XXXX,0x689130);  // TMRSF_VREFA_UP1	2341
   	SetJamram(XXXX,0x689150);  // TMRSF_VREFA_SELF_UP1	2342
   	SetJamram(XXXX,0x689170);  // TMRSF_EVCDET_TRIM_DN2	2343
   	SetJamram(XXXX,0x689190);  // TMRSF_TOFFSET_X0P7_X0P5<0>	2344
   	SetJamram(XXXX,0x6891B0);  // TMRSF_TOFFSET_X0P25_X0P25WD<0>	2345
   	SetJamram(XXXX,0x6891D0);  // TMRSF_MR4_SUB_X0P125_X0P125WD	2346
   	SetJamram(XXXX,0x6891F0);  // TMRSF_TOFFSET_X2P5_X2<2>	2347
   	SetJamram(XXXX,0x689111);  // TMRSF_PN_2666	2348
   	SetJamram(XXXX,0x689131);  // TMRSF_PU_CONT_SIGN_DQ<0>	2349
   	SetJamram(XXXX,0x689151);  // TMRSF_PCLKWC_0B_ABS_DLY_DIS	2350
   	SetJamram(XXXX,0x689171);  // TMRSF_WCK2CK_LATENCY_DN2D_0B	2351
   	SetJamram(XXXX,0x689191);  // TMRSF_SIVC_IO_IUP_0B	2352
   	SetJamram(XXXX,0x6891B1);  // TMRSF_PWY_SAMPLE2_WCK4_DN_0B	2353
   	SetJamram(XXXX,0x6891D1);  // TMRSF_VREFWCK_REPLICA_EN	2354
   	SetJamram(XXXX,0x6891F1);  // TMRSF_C2C_PREAMP_DUTY_UP2_0B	2355
   	SetJamram(XXXX,0x6C9110);  // TMRSF_VREFWCK_TRIM3_L	2356
   	SetJamram(XXXX,0x6C9130);  // TMRSF_PCLKWC4_WD_DC_NO_CUT_L	2357
   	SetJamram(XXXX,0x6C9150);  // TMRSF_WDBI_REPLICA_DLY_M2	2358
   	SetJamram(XXXX,0x6C9170);  // TMRSF_PU_DUTY_DN_DQS_C_0B	2359
   	SetJamram(XXXX,0x6C9190);  // TMRSF_COLD25_SHIFT_0B<1>	2360
// 	//////SetJamram(XXXX,0x6C91B0);  // TMRSF_PDL_M1_0B_DM	2361
   	SetJamram(XXXX,0x6C91D0);  // TMRSF_WCK_BIAS_VREF_DN1_0B	2362
   	SetJamram(XXXX,0x6C91F0);  // TMRSF_CACAL_EXIT_DCPATH_0B	2363
   	SetJamram(XXXX,0x6C9111);  // TMRSF_CURRENT_UP13_L	2364
   	SetJamram(XXXX,0x6C9131);  // TMRSF_WR_C2C_PREAMP_DUTY_DN_0B	2365
   	SetJamram(XXXX,0x6C9151);  // TMRSF_PD_RSET_ON	2366
   	SetJamram(XXXX,0x6C9171);  // TMRSF_PU_CONT_SIGN_DMI0	2367
   	SetJamram(XXXX,0x6C9191);  // TMRSF_CMOSBUF_RL_ON_L	2368
// 	//////SetJamram(XXXX,0x6C91B1);  // TMRSF_FRPD_DQ_X16_M1_0B	2369
// 	//////SetJamram(XXXX,0x6C91D1);  // TMRSF_FRPD_DQ_X16_P1_0B	2370
   	SetJamram(XXXX,0x6C91F1);  // TMRS_SUBADJ_L	2371
   	SetJamram(XXXX,0x60A111);  // TMRSF_CLK_BUF_TCMD2	2372
   	SetJamram(XXXX,0x60A131);  // TMRSF_CLK_PREAMP_R_UP	2373
   	SetJamram(XXXX,0x60A151);  // TMRSF_RCSLEN_DLY_S_G1_M1	2374
   	SetJamram(XXXX,0x60A171);  // TMRSF_DQ_TOGGLE_BLOCK	2375
   	SetJamram(XXXX,0x60A191);  // TMRSF_PCLKWC4_WCA_P1	2376
   	SetJamram(XXXX,0x60A1B1);  // TMRSF_PREEMP_EN_1B	2377
   	SetJamram(XXXX,0x60A1D1);  // TMRSF_CLK_BUF_TCMD4	2378
   	//////SetJamram(XXXX,0x60A1F1);  // TMRSF_RCSLEN_DLY_F_G3_M1	2379
   	SetJamram(XXXX,0x64A110);  // TMRSF_CHIPDIS_OFF	2380
   	SetJamram(XXXX,0x64A130);  // TMRSF_EPBT_P2	2381
   	SetJamram(XXXX,0x64A150);  // TMRSF_CS_INV_GLITCH_FREE_ON	2382
   	SetJamram(XXXX,0x64A170);  // TMRSF_CS_BUF_TERM_EN	2383
   	SetJamram(XXXX,0x64A190);  // TMRSF_ROWOPEN_M2_DLR_G0C	2384
   	SetJamram(XXXX,0x64A1B0);  // TMRSF_REF_1P3T_C	2385
   	SetJamram(XXXX,0x64A1D0);  // TMRSF_ROWOPEN_M2_DLR_G3D	2386
   	SetJamram(XXXX,0x64A1F0);  // TMRSF_ROWOPEN_M2_DLR_G1C	2387
   	SetJamram(XXXX,0x64A111);  // TMRSF_WRRPT_RST_ON_M1	2388
   	SetJamram(XXXX,0x64A131);  // TMRSF_ROWOPEN_M1_DLR_G3A	2389
   	SetJamram(XXXX,0x64A151);  // TMRSF_PBR_ABR_SKIP_OFF	2390
   	SetJamram(XXXX,0x64A171);  // TMRSF_ROWOPEN_P1_DLR_G2A	2391
   	SetJamram(XXXX,0x64A191);  // TMRSF_MR4_X4_NOR_0P5X_REF	2392
   	SetJamram(XXXX,0x64A1B1);  // TMRSF_ROWOPEN_P1_DLR_G0A	2393
   	SetJamram(XXXX,0x64A1D1);  // TMRSF_ROWOPEN_M1_DLR_G1B	2394
   	SetJamram(XXXX,0x64A1F1);  // TMRSF_FREF_6_TO_OPT_RATIO	2395
   	SetJamram(XXXX,0x68A110);  // TMRSF_VDD2L_VINT_CTRL	2396
   	SetJamram(XXXX,0x68A130);  // TMRSF_RL6_RL28_PREEMP	2397
   	//////SetJamram(XXXX,0x68A150);  // TMRSF_EQL_EN_5818	2398
   	SetJamram(XXXX,0x68A170);  // TMRSF_ZQMASTER_EN	2399
   	SetJamram(XXXX,0x68A190);  // TMRSF_FREF_RATIO_SEL	2400
   	SetJamram(XXXX,0x68A1B0);  // TMRSF_FREF_POSC_CTRL	2401
   	SetJamram(XXXX,0x68A1D0);  // TMRSF_RAAIMT_INIT0	2402
   	SetJamram(XXXX,0x68A1F0);  // TMRSF_DSM_P3_CON_OFF_L	2403
   	SetJamram(XXXX,0x68A111);  // TMRSF_PSECON_C	2404
   	SetJamram(XXXX,0x68A131);  // TMRSF_ADDCODEDN_PD<2>	2405
   	SetJamram(XXXX,0x68A151);  // TMRSF_ABRSKEW_M2	2406
   	SetJamram(XXXX,0x68A171);  // TMRSF_PWR_RESET	2407
   	SetJamram(XXXX,0x68A191);  // TMRSF_PGOFF_ALL_L	2408
   	SetJamram(XXXX,0x68A1B1);  // TMRSF_PERIOD_OFF	2409
   	SetJamram(XXXX,0x68A1D1);  // TMRSF_ABRSKEW_SPLIT_DN	2410
   	SetJamram(XXXX,0x68A1F1);  // TMRSF_DDRMUX_PG_2N_ON_0B	2411
   	//////SetJamram(XXXX,0x6CA110);  // TMRSF_RD_C2C_PREAMP_CUR_UP_0B	2412
   	SetJamram(XXXX,0x6CA130);  // TMRSF_ZQ_RXTX_SHORT_DET_EN	2413
   	SetJamram(XXXX,0x6CA150);  // TMRSF_AUTO_DCM_MRR	2414
   	SetJamram(XXXX,0x6CA170);  // TMRSF_DEF_PD_CODE_CON<1>	2415
   	SetJamram(XXXX,0x6CA190);  // TMRSF_ZQVREFUP_UP1	2416
   	SetJamram(XXXX,0x6CA1B0);  // TMRSF_DEF_PU_CODE_CON<1>	2417
   	SetJamram(XXXX,0x6CA1D0);  // TMRSF_ZQVREFUP_DN4	2418
   	SetJamram(XXXX,0x6CA1F0);  // TMRSF_ZQVREFDN_UP4	2419
   	SetJamram(XXXX,0x6CA111);  // TMRSF_MRS_WCK_OSC_BUF_CONT	2420
   	SetJamram(XXXX,0x6CA131);  // TMRSF_SADRV_PG_TO_MID	2421
   	SetJamram(XXXX,0x6CA151);  // TMRSF_PREEMP_PD_0B	2422
   	SetJamram(XXXX,0x6CA171);  // TMRSF_VDD2L_DVFSC_SINK_1	2423
   	SetJamram(XXXX,0x6CA191);  // TMRSF_CMOSBUF_5333_ON_0B	2424
   	SetJamram(XXXX,0x6CA1B1);  // TMRS_BLPBT_16S2S	2425
   	SetJamram(XXXX,0x6CA1D1);  // TMRSF_DFE_W2_0B	2426
   	SetJamram(XXXX,0x6CA1F1);  // TMRSF_DFE_W0_1B	2427
   	SetJamram(XXXX,0x60B110);  // TMRSF_TSHIFT_NORM<1>	2428
   	SetJamram(XXXX,0x60B130);  // TMRSF_SRD5	2429
   	SetJamram(XXXX,0x60B150);  // TMRSF_TSHIFT_NORM_AOS	2430
   	SetJamram(XXXX,0x60B170);  // TMRSF_DTOS_0	2431
   	SetJamram(XXXX,0x60B190);  // TMRSF_DT1_DSR_OFF	2432
   	SetJamram(XXXX,0x60B1B0);  // TMRSF_ERR_CNT_SET3	2433
   	SetJamram(XXXX,0x60B1D0);  // TMRSF_TOFFSET_X4_X3P3<0>	2434
   	SetJamram(XXXX,0x60B1F0);  // TMRSF_CURRENT_UP15_L	2435
   	SetJamram(XXXX,0x60B111);  // TMRSF_VP_OFFSET_SHIFT1	2436
   	SetJamram(XXXX,0x60B131);  // TMRSF_DZ_MODE1	2437
   	SetJamram(XXXX,0x60B151);  // TMRSF_VBL_DN2	2438
   	SetJamram(XXXX,0x60B171);  // TMRSF_VBL_ORG	2439
   	SetJamram(XXXX,0x60B191);  // TMRSF_VBL_LEAK4	2440
   	SetJamram(XXXX,0x60B1B1);  // TMRSF_VP_LEAK4	2441
   	SetJamram(XXXX,0x60B1D1);  // TMRSF_VP_DN1	2442
   	SetJamram(XXXX,0x60B1F1);  // TMRSF_VP_OFFSET_NDIFF2	2443
   	SetJamram(XXXX,0x64B110);  // TMRSF_SECOND_LINEAR	2444
   	SetJamram(XXXX,0x64B150);  // TMRSF_ZQ_VREFUP_INT_UP2	2445
   	SetJamram(XXXX,0x64B170);  // TMRSF_RD_DCA_OFFSET_B0_R_PHASE90<1>	2446
   	SetJamram(XXXX,0x64B190);  // TMRSF_DSM_ONLY_VDD2L	2447
   	SetJamram(XXXX,0x64B1B0);  // TMRSF_WLVL_STOP_STYLE_L	2448
   	SetJamram(XXXX,0x64B1D0);  // TMRSF_DCM_CAP1	2449
   	SetJamram(XXXX,0x64B1F0);  // TMRSF_RD_DCA_OFFSET_B0_L_PHASE270<1>	2450
   	SetJamram(XXXX,0x64B111);  // TMRSF_MR4_SUB_X1P3_X1	2451
   	SetJamram(XXXX,0x64B131);  // TMRSF_MR4_SUB_X0P7_X0P5	2452
   	SetJamram(XXXX,0x64B151);  // TMRSF_VPP2_O123_WIDTH_CTRL0_L	2453
   	SetJamram(XXXX,0x64B171);  // TMRSF_VPP2_CLAMP_IUP_L	2454
   	SetJamram(XXXX,0x64B191);  // TMRSF_CMOSBUF_PCURRENT2_UP1_0B	2455
   	SetJamram(XXXX,0x64B1B1);  // TMRSF_SIVCABSP_IUP_L	2456
   	SetJamram(XXXX,0x64B1D1);  // TMRSF_CMOSBUF_PCURRENT1_DN0_0B	2457
   	SetJamram(XXXX,0x64B1F1);  // TMRSF_LATCHUP_VBB2_THIN_ON_L	2458
   	SetJamram(XXXX,0x68B110);  // TMRSF_VREFLP_UP1	2459
   	SetJamram(XXXX,0x68B130);  // TMRSF_VREFA_TSPTC_UP	2460
   	SetJamram(XXXX,0x68B150);  // TMRSF_VREFA_SELF_UP2	2461
   	SetJamram(XXXX,0x68B170);  // TMRSF_EVCDET_TRIM_UP2	2462
   	SetJamram(XXXX,0x68B190);  // TMRSF_MR4_SUB_X0P5_X0P25	2463
   	SetJamram(XXXX,0x68B1B0);  // TMRSF_MR4_SUB_X0P25WD_X0P125	2464
   	SetJamram(XXXX,0x68B1D0);  // TMRSF_TOFFSET_X0P125_X0P125WD<1>	2465
   	SetJamram(XXXX,0x68B1F0);  // TMRSF_VREFX_IDD2_UP_L	2466
   	SetJamram(XXXX,0x68B111);  // TMRSF_WCK2CK_SYNC_WCK_DN_0B	2467
   	SetJamram(XXXX,0x68B131);  // TMRSF_VREFWCK_TRIM5_L	2468
   	SetJamram(XXXX,0x68B151);  // TMRSF_PCLKWC_M1	2469
   	SetJamram(XXXX,0x68B171);  // TMRSF_WCK2CK_LATENCY_UP2D_0B	2470
   	SetJamram(XXXX,0x68B191);  // TMRSF_PD_CONT_C1_DMI0	2471
   	SetJamram(XXXX,0x68B1B1);  // TMRSF_PWY_SAMPLE1_WCK4_DN_0B	2472
   	SetJamram(XXXX,0x68B1D1);  // TMRSF_WCK4_TO_DQ_DELAY_DN_0B	2473
   	SetJamram(XXXX,0x68B1F1);  // TMRSF_WCK_SYNC_CCL_OFF_L	2474
   	SetJamram(XXXX,0x6CB110);  // TMRSF_VREFWCK_TRIM2_L	2475
   	SetJamram(XXXX,0x6CB130);  // TMRSF_EQL_EN_DQS_BYTE0	2476
   	SetJamram(XXXX,0x6CB150);  // TMRSF_PD_DUTY_DN_DQS_T_0B	2477
   	SetJamram(XXXX,0x6CB170);  // TMRSF_PCLKWC_2TCK_EN_L	2478
   	SetJamram(XXXX,0x6CB190);  // TMRSF_COLD25_SHIFT_0B<0>	2479
   	SetJamram(XXXX,0x6CB1B0);  // TMRSF_IO_WR_VDD2H_PG_ALWAYS_TURN_ON_0B	2480
   	SetJamram(XXXX,0x6CB1D0);  // TMRSF_WCK_BIAS_VREF_DN3_0B	2481
   	SetJamram(XXXX,0x6CB1F0);  // TMRSF_BIAS_WCK_MON_EN_0B	2482
   	//////SetJamram(XXXX,0x6CB111);  // TMRSF_DS_BUF_CURRENT_UP1_0B_L	2483
   	//////SetJamram(XXXX,0x6CB131);  // TMRSF_CURRENT_UP12_L	2484
   	SetJamram(XXXX,0x6CB151);  // TMRSF_ADD_RES_FOOTER1_L	2485
   	SetJamram(XXXX,0x6CB171);  // TMRSF_PU_CONT_C1_DQ<0>	2486
   	SetJamram(XXXX,0x6CB191);  // TMRSF_WDBI_AC_OFF_0B	2487
   	SetJamram(XXXX,0x6CB1B1);  // TMRSF_ROS_FUSE_RESERVE	2488
   	SetJamram(XXXX,0x6CB1D1);  // TMRSF_ZQ_IN_DISABLE	2489
   	SetJamram(XXXX,0x6CB1F1);  // TMRSF_WRTR_PSFRG_UP_0B	2490
   	SetJamram(XXXX,0x60C111);  // TMRSF_NBTI_SWCH	2491
   	SetJamram(XXXX,0x60C131);  // TMRSF_TCA3_CLK	2492
   	SetJamram(XXXX,0x60C151);  // TMRSF_TREF_DIS	2493
   	SetJamram(XXXX,0x60C171);  // TMRSF_PCA_MWR_RCSLE_DN1	2494
   	SetJamram(XXXX,0x60C191);  // TMRSF_RCSLEN_DLY_F_G2_M1	2495
   	SetJamram(XXXX,0x60C1B1);  // TMRSF_RCSLEN_DLY_F_G1_M1	2496
   	SetJamram(XXXX,0x60C1D1);  // TMRSF_PCLKF_ODT_DLY	2497
   	SetJamram(XXXX,0x60C1F1);  // TMRSF_ROWOPEN_P1_DLR_G1D	2498
   	SetJamram(XXXX,0x64C110);  // TMRSF_ROWOPEN_M2_DLR_G1D	2499
   	SetJamram(XXXX,0x64C130);  // TMRSF_UNTERM_1B	2500

	}
#endif
//2501~3000
#if 1
		{
   	SetJamram(XXXX,0x64C150);  // TMRSF_RCSLE_EXT_P1	2501
   	SetJamram(XXXX,0x64C170);  // TMRSF_ROWOPEN_M2_DLR_G3C	2502
   	SetJamram(XXXX,0x64C190);  // TMRSF_DVFSQ_ODT_RECOVER	2503
   	SetJamram(XXXX,0x64C1B0);  // TMRSF_REF_1P15T_C	2504
   	SetJamram(XXXX,0x64C1D0);  // TMRSF_ROWOPEN_M1_DLR_G3D	2505
   	SetJamram(XXXX,0x64C1F0);  // TMRSF_ROWOPEN_P1_DLR_G1C	2506
   	SetJamram(XXXX,0x64C111);  // TMRSF_WRRPT_SET_ON_X8_M1	2507
   	SetJamram(XXXX,0x64C131);  // TMRSF_ROWOPEN_M2_DLR_G3A	2508
   	SetJamram(XXXX,0x64C151);  // TMRSF_FREF_POSC_DIS	2509
   	SetJamram(XXXX,0x64C171);  // TMRSF_ROWOPEN_M2_DLR_G2A	2510
   	SetJamram(XXXX,0x64C191);  // TMRSF_MR4_X4X2_NOR_0P5X_REF	2511
   	SetJamram(XXXX,0x64C1B1);  // TMRSF_ROWOPEN_M2_DLR_G0A	2512
   	SetJamram(XXXX,0x64C1D1);  // TMRSF_ROWOPEN_M2_DLR_G1B	2513
   	SetJamram(XXXX,0x64C1F1);  // TMRSF_SBECNT_FIX1	2514
   	SetJamram(XXXX,0x68C110);  // TMRSF_M_SPA_DIS_FUSE	2515
   	SetJamram(XXXX,0x68C130);  // TMRSF_DFE_TMRS_CONT	2516
   	SetJamram(XXXX,0x68C150);  // TMRSF_SELF_ABR_BLOCK	2517
   	SetJamram(XXXX,0x68C170);  // TMRSF_SELF_SKIP_SEL2	2518
   	SetJamram(XXXX,0x68C190);  // TMRSF_EQL_EN_6400	2519
   	SetJamram(XXXX,0x68C1B0);  // TMRSF_FREF_OFF	2520
   	//////SetJamram(XXXX,0x68C1D0);  // TMRSF_RAAIMT_MULT1	2521
   	SetJamram(XXXX,0x68C1F0);  // TMRSF_16B_CKR4_CLK	2522
   	SetJamram(XXXX,0x68C111);  // TMRSF_RDBI_DC_OFF	2523
   	SetJamram(XXXX,0x68C131);  // TMRSF_ADDCODEDN_PD<4>	2524
   	SetJamram(XXXX,0x68C151);  // TMRSF_RD_PGE	2525
   	SetJamram(XXXX,0x68C171);  // TMRSF_DOUT_PWR_OFF	2526
   	SetJamram(XXXX,0x68C191);  // TMRSF_IOL_DN2	2527
   	SetJamram(XXXX,0x68C1B1);  // TMRSF_WAFER_BIZ	2528
   	SetJamram(XXXX,0x68C1D1);  // TMRSF_PG_BANK_OFF	2529
   	SetJamram(XXXX,0x68C1F1);  // TMRSF_MRESET_SKIP_FUSE	2530
   	SetJamram(XXXX,0x6CC110);  // TMRSF_MR4_2K	2531
   	SetJamram(XXXX,0x6CC130);  // TMRSF_ZQVREFDN_DN0	2532
   	SetJamram(XXXX,0x6CC150);  // TMRSF_WCK_CAL_START	2533
   	SetJamram(XXXX,0x6CC170);  // TMRSF_DEF_PD_CODE_CON<5>	2534
   	SetJamram(XXXX,0x6CC190);  // TMRSF_ZQVREFUP_UP4	2535
   	SetJamram(XXXX,0x6CC1B0);  // TMRSF_DEF_PU_CODE_CON<0>	2536
   	SetJamram(XXXX,0x6CC1D0);  // TMRSF_ZQVREFUP_UP2	2537
   	SetJamram(XXXX,0x6CC1F0);  // TMRSF_ZQVREFDN_UP1	2538
   	SetJamram(XXXX,0x6CC111);  // TMRSF_HSDI_CLK_P1_0B	2539
   	SetJamram(XXXX,0x6CC131);  // TMRS_AF_DQ2DMI_L	2540
   	SetJamram(XXXX,0x6CC151);  // TMRSF_PREEMP_ON_STEP1_0B	2541
   	SetJamram(XXXX,0x6CC171);  // TMRSF_DVFSQ_CODE_FLIP_BLOCK	2542
   	SetJamram(XXXX,0x6CC191);  // TMRSF_ADDCODEUP_PU<4>	2543
   	SetJamram(XXXX,0x6CC1B1);  // TMRSF_VPWR_WCK_X8_BYTE_CTRL_L	2544
   	SetJamram(XXXX,0x6CC1D1);  // TMRSF_WBCA_WBG_P1_0B	2545
   	SetJamram(XXXX,0x6CC1F1);  // TMRSF_DFE_W1_1B	2546
   	SetJamram(XXXX,0x60D110);  // TMRSF_TSHIFT_NORM<0>	2547
   	SetJamram(XXXX,0x60D130);  // TMRSF_TOUT	2548
   	SetJamram(XXXX,0x60D150);  // TMRSF_1P5S	2549
   	SetJamram(XXXX,0x60D170);  // TMRSF_DTOS_1	2550
   	SetJamram(XXXX,0x60D190);  // TMRSF_SIGCLK_1CLK_DIS_CHIP_ID_READ	2551
   	SetJamram(XXXX,0x60D1B0);  // TMRSF_FIFO8_ENB_L	2552
   	SetJamram(XXXX,0x60D1D0);  // TMRSF_MR4_SUB_X4_X3P3	2553
   	SetJamram(XXXX,0x60D1F0);  // TMRSF_DS_BUF_CURRENT_UP4_0B_L	2554
   	SetJamram(XXXX,0x60D111);  // TMRSF_VP_OFFSET_SHIFT2	2555
   	SetJamram(XXXX,0x60D131);  // TMRSF_OFFSET_PDIFF2	2556
   	SetJamram(XXXX,0x60D151);  // TMRSF_VBL_UP1	2557
   	SetJamram(XXXX,0x60D171);  // TMRSF_VBL_IUP	2558
   	SetJamram(XXXX,0x60D191);  // TMRSF_VBL_LEAK2	2559
   	SetJamram(XXXX,0x60D1B1);  // TMRSF_VP_2N_CLOSE	2560
   	SetJamram(XXXX,0x60D1D1);  // TMRSF_VP_UP2	2561
   	SetJamram(XXXX,0x60D1F1);  // TMRSF_VP_OFFSET_PDIFF2	2562
   	//////SetJamram(XXXX,0x64D110);  // TMRSF_OSCEXT2	2563
   	SetJamram(XXXX,0x64D150);  // TMRSF_ZQ_COARSE_FINE_TIMER_EXTEND	2564
   	SetJamram(XXXX,0x64D170);  // TMRSF_RD_DCA_OFFSET_B0_R_PHASE0<0>	2565
   	SetJamram(XXXX,0x64D190);  // TMRSF_DCC_POLA_CHG_0B	2566
   	SetJamram(XXXX,0x64D1B0);  // TMRSF_PN_3200_0B_L	2567
   	SetJamram(XXXX,0x64D1D0);  // TMRSF_DCM_CAP0	2568
   	SetJamram(XXXX,0x64D1F0);  // TMRSF_RD_DCA_OFFSET_B0_L_PHASE180<0>	2569
   	SetJamram(XXXX,0x64D111);  // TMRSF_TOFFSET_X1P3_X1<2>	2570
   	SetJamram(XXXX,0x64D131);  // TMRSF_TOFFSET_X0P7_X0P5<2>	2571
   	SetJamram(XXXX,0x64D151);  // TMRSF_VPP_TRIPLE_PUMP_OPT_ON1	2572
   	SetJamram(XXXX,0x64D171);  // TMRSF_VPP2_CLAMP_IDN_L	2573
   	SetJamram(XXXX,0x64D191);  // TMRSF_CMOSBUF_PCURRENT2_DN0_0B	2574
   	SetJamram(XXXX,0x64D1B1);  // TMRSF_MR4_SUB_X3P3_X2P5	2575
   	SetJamram(XXXX,0x64D1D1);  // TMRSF_SCR_EN	2576
   	SetJamram(XXXX,0x64D1F1);  // TMRSF_MAIVCA_HDRVOFF_IN_L_PRE	2577
   	SetJamram(XXXX,0x68D110);  // TMRSF_VREFLP_DN1	2578
   	SetJamram(XXXX,0x68D130);  // TMRSF_VREFA_TSPTC_DN	2579
   	SetJamram(XXXX,0x68D150);  // TMRSF_VREFY_PTC	2580
   	SetJamram(XXXX,0x68D170);  // TMRSF_EVCDET_TRIM_DN3	2581
   	SetJamram(XXXX,0x68D190);  // TMRSF_TOFFSET_X0P5_X0P25<2>	2582
   	SetJamram(XXXX,0x68D1B0);  // TMRSF_TOFFSET_X0P25WD_X0P125<2>	2583
   	SetJamram(XXXX,0x68D1D0);  // TMRSF_MR4_HT_LIMIT_110	2584
   	SetJamram(XXXX,0x68D1F0);  // TMRSF_VREFX_IDD2_DN1_DIF_L	2585
   	SetJamram(XXXX,0x68D111);  // TMRSF_WCK2CK_SYNC_WCK_UP_0B	2586
   	SetJamram(XXXX,0x68D131);  // TMRSF_BIAS_WCK_RON_DN_L	2587
   	SetJamram(XXXX,0x68D151);  // TMRSF_ECS_SUPPORT	2588
   	SetJamram(XXXX,0x68D171);  // TMRSF_WCK2CK_LATENCY_DN1D_0B	2589
   	SetJamram(XXXX,0x68D191);  // TMRSF_IO_AIVC_I_66PER_DOWN_0B	2590
   	SetJamram(XXXX,0x68D1B1);  // TMRSF_VREFWCK_OFFSET2	2591
   	SetJamram(XXXX,0x68D1D1);  // TMRSF_IVC_RLCTRL_OFF_0B	2592
   	SetJamram(XXXX,0x68D1F1);  // TMRSF_REVERSE_BIAS_DIS_0B	2593
   	SetJamram(XXXX,0x6CD110);  // TMRSF_VREFWCK_TRIM1_L	2594
   	SetJamram(XXXX,0x6CD130);  // TMRSF_PD_DUTY_UP_DQS_T_0B	2595
   	SetJamram(XXXX,0x6CD150);  // TMRSF_CMOSBUF_5818_ON_L	2596
// 	//////SetJamram(XXXX,0x6CD170);  // TMRSF_PDL_M2_0B_DM	2597
   	SetJamram(XXXX,0x6CD190);  // TMRSF_COLD0_SHIFT_0B<2>	2598
// 	//////SetJamram(XXXX,0x6CD1B0);  // TMRSF_PDL_P1_0B_DM	2599
   	SetJamram(XXXX,0x6CD1D0);  // TMRSF_WCK_BIAS_VREF_UP2_0B	2600
   	SetJamram(XXXX,0x6CD1F0);  // TMRSF_HVSW_ROS_OFF	2601
   	//////SetJamram(XXXX,0x6CD111);  // TMRSF_C2C_PREAMP_DUTY_UP1_0B	2602
   	SetJamram(XXXX,0x6CD131);  // TMRSF_LF_DUTY_DN0_0B	2603
   	SetJamram(XXXX,0x6CD151);  // TMRSF_ADD_RES_HEADER1_L	2604
   	SetJamram(XXXX,0x6CD171);  // TMRSF_CMOSBUF_4800_ON_L	2605
   	SetJamram(XXXX,0x6CD191);  // TMRSF_DCM_FLIP_REVERSE_0B	2606
   	SetJamram(XXXX,0x6CD1B1);  // TMRSF_SYNC_C2C_DUTY_UP1_0B	2607
   	SetJamram(XXXX,0x6CD1D1);  // TMRSF_VREFDQFORCE	2608
   	SetJamram(XXXX,0x6CD1F1);  // TMRSF_WRTR_PSFRG_DN_0B	2609
   	SetJamram(XXXX,0x60E111);  // TMRSF_CLK_ANTI_0	2610
   	SetJamram(XXXX,0x60E131);  // TMRSF_TIPW_OP	2611
   	SetJamram(XXXX,0x60E151);  // TMRSF_RCSLEN_DLY_S_G0_M1	2612
   	SetJamram(XXXX,0x60E171);  // TMRSF_PCA_MWR_RCSLE_UP1	2613
   	SetJamram(XXXX,0x60E191);  // TMRSF_ROWOPEN_P1_DLR_G2D	2614
   	SetJamram(XXXX,0x60E1B1);  // TMRSF_CLK_BUF_TCMD1	2615
   	SetJamram(XXXX,0x60E1D1);  // TMRSF_WARM_PMRW_DIS	2616
   	SetJamram(XXXX,0x60E1F1);  // TMRSF_TRCDW_AP_ON	2617
   	SetJamram(XXXX,0x64E110);  // TMRSF_CMDFS_ON	2618
   	SetJamram(XXXX,0x64E130);  // TMRSF_TIMER_CTRL_PULSE	2619
   	SetJamram(XXXX,0x64E150);  // TMRSF_WS_FAST_AUTO_CTRL_DIS	2620
   	SetJamram(XXXX,0x64E170);  // TMRSF_ROWOPEN_P1_DLR_G0D	2621
   	SetJamram(XXXX,0x64E190);  // TMRSF_ROWOPEN_M1_DLR_G0C	2622
   	SetJamram(XXXX,0x64E1B0);  // TMRSF_CA_CMFB_ON_CLK	2623
   	SetJamram(XXXX,0x64E1D0);  // TMRSF_WRTRON_PW123	2624
   	SetJamram(XXXX,0x64E1F0);  // TMRSF_PCLKWC_ABS_DLY_DIS	2625
   	SetJamram(XXXX,0x64E111);  // TMRSF_REF_2T	2626
   	SetJamram(XXXX,0x64E131);  // TMRSF_1ROW_5K	2627
   	SetJamram(XXXX,0x64E151);  // TMRSF_PRAL_DIS	2628
   	SetJamram(XXXX,0x64E171);  // TMRSF_ROWOPEN_M1_DLR_G2A	2629
   	SetJamram(XXXX,0x64E191);  // TMRSF_REFRATE_X4_FIX	2630
   	SetJamram(XXXX,0x64E1B1);  // TMRSF_ROWOPEN_M1_DLR_G0A	2631
   	SetJamram(XXXX,0x64E1D1);  // TMRSF_ROWOPEN_P1_DLR_G1B	2632
   	SetJamram(XXXX,0x64E1F1);  // TMRSF_SBECNT_FIX2	2633
   	SetJamram(XXXX,0x68E110);  // TMRSF_AIVCPG_ON	2634
   	SetJamram(XXXX,0x68E130);  // TMRSF_RL6_RL22_PU_OFF	2635
   	SetJamram(XXXX,0x68E150);  // TMRSF_DVFSC_OFF	2636
   	SetJamram(XXXX,0x68E170);  // TMRSF_DVFSC_USER_RL_OFF	2637
   	SetJamram(XXXX,0x68E190);  // TMRSF_WCKENL_CHG_P1	2638
   	SetJamram(XXXX,0x68E1B0);  // TMRSF_RAAIMT_DEC0	2639
   	//////SetJamram(XXXX,0x68E1D0);  // TMRSF_RAAIMT_MULT0	2640
   	SetJamram(XXXX,0x68E1F0);  // TMRSF_SELF_BURST_X16	2641
   	SetJamram(XXXX,0x68E111);  // TMRSF_SDR_BANK16	2642
   	SetJamram(XXXX,0x68E131);  // TMRSF_ADDCODEDN_PD<0>	2643
   	SetJamram(XXXX,0x68E151);  // TMRSF_CD_PGE	2644
   	SetJamram(XXXX,0x68E171);  // TMRSF_BK2E	2645
   	SetJamram(XXXX,0x68E191);  // TMRSF_IOL_DN	2646
   	SetJamram(XXXX,0x68E1B1);  // TMRSF_DVFSQ_ZQCAL_EN	2647
   	SetJamram(XXXX,0x68E1D1);  // TMRSF_X8_SWAP	2648
   	SetJamram(XXXX,0x68E1F1);  // TMRSF_FRPD_F_M2	2649
   	SetJamram(XXXX,0x6CE110);  // TMRS_DQ2DMI_DQ_EN_0B	2650
   	SetJamram(XXXX,0x6CE130);  // TMRSF_CMD_CLKCTRL_OFF	2651
   	SetJamram(XXXX,0x6CE150);  // TMRSF_PU_DUTY_UP_0B	2652
   	SetJamram(XXXX,0x6CE170);  // TMRSF_MATCH_UP_0B	2653
   	SetJamram(XXXX,0x6CE190);  // TMRSF_ZQVREFUP_UP3	2654
   	SetJamram(XXXX,0x6CE1B0);  // TMRSF_DEF_PU_CODE_CON<4>	2655
   	SetJamram(XXXX,0x6CE1D0);  // TMRSF_ZQVREFDN_DN3	2656
   	SetJamram(XXXX,0x6CE1F0);  // TMRSF_AUTO_ZQCAL_100US	2657
   	SetJamram(XXXX,0x6CE111);  // TMRSF_HSDI_TDS_DN_0B	2658
   	SetJamram(XXXX,0x6CE131);  // TMRSF_CACAL_DIS_PRAL	2659
   	SetJamram(XXXX,0x6CE151);  // TMRSF_DQS_TOGGLE_OFF_0B	2660
   	SetJamram(XXXX,0x6CE171);  // TMRSF_ZQ_SLAVE_OSC_ENABLE	2661
   	SetJamram(XXXX,0x6CE191);  // TMRSF_ADDB_SUB_UP_PU	2662
   	SetJamram(XXXX,0x6CE1B1);  // TMRSF_SR_VBB2VSS	2663
   	SetJamram(XXXX,0x6CE1D1);  // TMRSF_WBCA_WBG_M1_0B	2664
   	SetJamram(XXXX,0x6CE1F1);  // TMRSF_SIVCBB2_EN1	2665
   	SetJamram(XXXX,0x60F110);  // TMRSF_POSC_ECC_OFF	2666
   	SetJamram(XXXX,0x60F130);  // TMRSF_RT_SO_CTRL	2667
   	SetJamram(XXXX,0x60F150);  // TMRSF_1P25S	2668
   	SetJamram(XXXX,0x60F170);  // TMRSF_POSC_ECC_MODE_2	2669
   	SetJamram(XXXX,0x60F190);  // TMRSF_X0p25_FIX	2670
   	SetJamram(XXXX,0x60F1B0);  // TMRSF_IVC_RLCTRL_OFF_DINA_0B	2671
   	//////SetJamram(XXXX,0x60F1D0);  // TMRSF_TOFFSET_X4_X3P3<2>	2672
   	//////SetJamram(XXXX,0x60F1F0);  // TMRSF_DS_BUF_CURRENT_UP2_0B_L	2673
   	SetJamram(XXXX,0x60F111);  // TMRSF_OFFSET_PDIFF1	2674
   	SetJamram(XXXX,0x60F131);  // TMRSF_OFFSET_NDIFF8	2675
   	SetJamram(XXXX,0x60F151);  // TMRSF_VBL_UP2	2676
   	SetJamram(XXXX,0x60F171);  // TMRSF_VBL_DZ_DN1	2677
   	SetJamram(XXXX,0x60F191);  // TMRSF_VBL_2P6P_CLOSE	2678
   	SetJamram(XXXX,0x60F1B1);  // TMRSF_VP_2P6P_CLOSE	2679
   	SetJamram(XXXX,0x60F1D1);  // TMRSF_VP_OFFSET_DIFF4	2680
   	SetJamram(XXXX,0x60F1F1);  // TMRSF_VP_OFFSET_PDIFF4	2681
   	SetJamram(XXXX,0x64F110);  // TMRSF_ZQ_CAL_DONE_PUL_DISABLE	2682
   	SetJamram(XXXX,0x64F130);  // TMRSF_PG_PSW_PARTIAL_OFF	2683
   	SetJamram(XXXX,0x64F150);  // TMRSF_ZQ_VREF_ANTI_EN	2684
   	SetJamram(XXXX,0x64F170);  // TMRSF_RD_DCA_OFFSET_B0_R_PHASE0<1>	2685
   	SetJamram(XXXX,0x64F190);  // TMRSF_OC_CLK_DLY_UP_B0	2686
   	SetJamram(XXXX,0x64F1B0);  // TMRSF_VRO_BLOCK_DISABLE_L	2687
   	SetJamram(XXXX,0x64F1D0);  // TMRSF_DCM_BIAS4	2688
   	SetJamram(XXXX,0x64F1F0);  // TMRSF_RD_DCA_OFFSET_B0_L_PHASE180<1>	2689
   	SetJamram(XXXX,0x64F111);  // TMRSF_TOFFSET_X1P3_X1<1>	2690
   	SetJamram(XXXX,0x64F131);  // TMRSF_TOFFSET_X0P7_X0P5<1>	2691
   	SetJamram(XXXX,0x64F151);  // TMRSF_SIVCISO_IUP_L	2692
   	SetJamram(XXXX,0x64F171);  // TMRSF_VPP2_CLAMP_IUP2_L	2693
   	SetJamram(XXXX,0x64F191);  // TMRSF_CMOSBUF_PCURRENT1_UP1_0B	2694
   	//////SetJamram(XXXX,0x64F1B1);  // TMRSF_TOFFSET_X3P3_X2P5<2>	2695
   	SetJamram(XXXX,0x64F1D1);  // TMRSF_DSF_ON	2696
   	SetJamram(XXXX,0x64F1F1);  // TMRSF_SIVC_IDN_L	2697
   	SetJamram(XXXX,0x68F110);  // TMRSF_VREFLP_UP2	2698
   	SetJamram(XXXX,0x68F130);  // TMRSF_VREFA_TSPTC_ON	2699
   	SetJamram(XXXX,0x68F150);  // TMRSF_VREFY_NTC	2700
   	SetJamram(XXXX,0x68F170);  // TMRSF_SIVCY_IUP_L	2701
   	SetJamram(XXXX,0x68F190);  // TMRSF_TOFFSET_X0P5_X0P25<1>	2702
   	SetJamram(XXXX,0x68F1B0);  // TMRSF_TOFFSET_X0P25WD_X0P125<1>	2703
   	SetJamram(XXXX,0x68F1D0);  // TMRSF_UNLEASHED_MR4_ONB	2704
   	SetJamram(XXXX,0x68F1F0);  // TMRSF_VREFX_IDD2_UP1_DIF_L	2705
   	SetJamram(XXXX,0x68F111);  // TMRSF_WCK_BLOCKING_OFF_0B	2706
   	SetJamram(XXXX,0x68F131);  // TMRSF_BIAS_WCK_RON_UP_L	2707
   	SetJamram(XXXX,0x68F151);  // TMRSF_AF_EDS_DQ_CONTROL	2708
   	SetJamram(XXXX,0x68F171);  // TMRSF_WCK2CK_LATENCY_UP1D_0B	2709
   	SetJamram(XXXX,0x68F191);  // TMRSF_WCK4_PHASE_DET_WCK_UP_L	2710
   	SetJamram(XXXX,0x68F1B1);  // TMRSF_VREFWCK_DIS	2711
   	SetJamram(XXXX,0x68F1D1);  // TMRSF_CMOS_DCC_DISABLE_0B	2712
   	SetJamram(XXXX,0x68F1F1);  // TMRSF_PWY_SAMPLE1_WCK4_UP_0B	2713
   	SetJamram(XXXX,0x6CF110);  // TMRSF_VREFWCK_TRIM0_L	2714
   	SetJamram(XXXX,0x6CF130);  // TMRSF_WRDRV_FF_OFF_0B	2715
   	SetJamram(XXXX,0x6CF150);  // TMRSF_DCM_FLIP_POLARITY_REVERSE_0B	2716
   	SetJamram(XXXX,0x6CF170);  // TMRSF_PU_DUTY_UP_DQS_C_0B	2717
   	SetJamram(XXXX,0x6CF190);  // TMRSF_COLD0_SHIFT_0B<1>	2718
   	SetJamram(XXXX,0x6CF1B0);  // TMRSF_ORD_UP_0B	2719
   	SetJamram(XXXX,0x6CF1D0);  // TMRSF_WCK_BIAS_VREF_UP0_0B	2720
   	SetJamram(XXXX,0x6CF1F0);  // TMRSF_WCLKDQ_DIV_0B	2721
   	SetJamram(XXXX,0x6CF111);  // TMRSF_LF_DUTY_DN2_0B	2722
   	SetJamram(XXXX,0x6CF131);  // TMRSF_LF_DUTY_UP1_0B	2723
   	SetJamram(XXXX,0x6CF151);  // TMRSF_ADD_RES_HEADER0_L	2724
   	SetJamram(XXXX,0x6CF191);  // TMRSF_WDBI_AC_OFF_3733_0B	2725
   	SetJamram(XXXX,0x6CF1B1);  // TMRSF_PCKE_CA_ENB	2726
   	SetJamram(XXXX,0x6CF1D1);  // TMRSF_IOH_DN2_L	2727
   	SetJamram(XXXX,0x6CF1F1);  // TMRSF_IOL_DN2_L	2728
   	SetJamram(XXXX,0x800110);  // TMRS_VREFLANG_DN2	2729
   	SetJamram(XXXX,0x800130);  // TMRS_VREFPG_DN2	2730
   	SetJamram(XXXX,0x800150);  // TMRS_VREFISO_UP2	2731
   	SetJamram(XXXX,0x800170);  // TMRSF_RD_DCA_OFFSET_B1_R_PHASE270<0>	2732
   	SetJamram(XXXX,0x800190);  // TMRS_VBP_MRS3	2733
   	SetJamram(XXXX,0x8001B0);  // TMRSF_VREFABSN_NTC_OPT1	2734
   	SetJamram(XXXX,0x8001D0);  // TMRSF_2ND_FUSING_VBN	2735
   	SetJamram(XXXX,0x8001F0);  // TMRSF_WR_TMMT_B1_R_270	2736
   	SetJamram(XXXX,0x800111);  // TMRS_PMOC_ITEM_SEL0	2737
   	SetJamram(XXXX,0x800131);  // TMRSF_VISO_NTC_UP2	2738
   	SetJamram(XXXX,0x800151);  // TMRSF_S4_UP	2739
   	SetJamram(XXXX,0x800171);  // TMRSF_VPP2_CLAMPDIS_4	2740
   	SetJamram(XXXX,0x800191);  // TMRSF_CMOSBUF_BIAS_DN_1B	2741
   	SetJamram(XXXX,0x8001B1);  // TMRSF_CMOSBUF_PCURRENT2_UP1_1B	2742
   	SetJamram(XXXX,0x8001D1);  // TMRSF_CMOSBUF_PCURRENT2_UP0_1B	2743
   	SetJamram(XXXX,0x8001F1);  // TMRSF_SIVCABSN_RBB_EN_R	2744
   	SetJamram(XXXX,0x840110);  // TMRSF_SIVCABP_RBB_EN_R	2745
   	SetJamram(XXXX,0x840130);  // TMRSF_VREFABSP_NTC_OPT0	2746
   	SetJamram(XXXX,0x840150);  // TMRSF_CMOSBUF_PCURRENT2_DN0_1B	2747
   	SetJamram(XXXX,0x840190);  // TMRSF_VBN_NTC_UP2	2748
   	SetJamram(XXXX,0x8401B0);  // TMRSF_VREFLANG_PTC_UP	2749
   	SetJamram(XXXX,0x8401D0);  // TMRSF_VBB2_SELF_UP2_R	2750
   	SetJamram(XXXX,0x8401F0);  // TMRSF_VREFX_PM_R	2751
   	SetJamram(XXXX,0x840111);  // TMRS_VBP_MON	2752
   	SetJamram(XXXX,0x840131);  // TMRSF_VREFABSN_NTC_OPT0	2753
   	SetJamram(XXXX,0x840151);  // TMRSF_PSELF_FUSE	2754
   	SetJamram(XXXX,0x840171);  // TMRSF_VREF_REG_IDD_UP	2755
   	SetJamram(XXXX,0x840191);  // TMRSF_VPP_HYBRID_NTC_NONLIN	2756
   	SetJamram(XXXX,0x8401B1);  // TMRS_VREFBSG_DN2	2757
   	SetJamram(XXXX,0x8401D1);  // TMRSF_AIVCA_3N_CURRENT_DOWN_IOSA_PRE	2758
   	SetJamram(XXXX,0x8401F1);  // TMRSF_AIVCA_IDDX_UP1_IOSA_PRE	2759
   	SetJamram(XXXX,0x880110);  // TMRSF_PU_CONT_SIGN_DQ<8>	2760
   	SetJamram(XXXX,0x880130);  // TMRSF_PCLKWC_P1_1B	2761
   	SetJamram(XXXX,0x880150);  // TMRSF_VREFDQ_TRIM1_R	2762
   	SetJamram(XXXX,0x880170);  // TMRSF_VREFDQ_AMPON_R	2763
   	SetJamram(XXXX,0x880190);  // TMRSF_DCM_FLIP_REVERSE_1B	2764
   	SetJamram(XXXX,0x8801B0);  // TMRSF_IOH_DN2_R	2765
   	SetJamram(XXXX,0x8801D0);  // TMRSF_PD_CONT_SIGN_DMI1	2766
   	SetJamram(XXXX,0x8801F0);  // TMRSF_WRTR_PSFRG_DN_1B	2767
   	SetJamram(XXXX,0x880111);  // TMRSF_DCC_3_1B	2768
   	SetJamram(XXXX,0x880131);  // TMRSF_PWY_SAMPLE2_WCK4_UP_1B	2769
   	SetJamram(XXXX,0x880171);  // TMRSF_PN_2666_R	2770
   	SetJamram(XXXX,0x880191);  // TMRSF_PCLKWC_1B_ABS_DLY_DIS	2771
   	SetJamram(XXXX,0x8801D1);  // TMRSF_PCLKWC_1B_PULSE_P1	2772
   	SetJamram(XXXX,0x8801F1);  // TMRSF_VREFWCK_TRIM0_R	2773
   	SetJamram(XXXX,0x8C0110);  // TMRSF_DCC_1_1B	2774
   	SetJamram(XXXX,0x8C0130);  // _M_TMRSF_SET64_MRS_R_7OUT06	2775
   	SetJamram(XXXX,0x8C0150);  // TMRSF_WRDRV_FF_OFF_1B	2776
   	SetJamram(XXXX,0x8C0170);  // TMRSF_COLD25_SHIFT_1B<1>	2777
// 	//////SetJamram(XXXX,0x8C0190);  // TMRSF_PDL_P1_1B_DM	2778
   	SetJamram(XXXX,0x8C01B0);  // TMRSF_ADD_RES_HEADER0_R	2779
   	SetJamram(XXXX,0x8C01D0);  // TMRSF_PCURRENT_REP1_R	2780
   	//////SetJamram(XXXX,0x8C01F0);  // TMRSF_WCK_BIAS_VREF_DN0_1B	2781
   	SetJamram(XXXX,0x8C0111);  // TMRSF_MATCH_UP_1B	2782
   	SetJamram(XXXX,0x8C0131);  // TMRSF_LF_DUTY_DN0_1B	2783
   	SetJamram(XXXX,0x8C0151);  // TMRSF_LF_DUTY_DN2_1B	2784
   	SetJamram(XXXX,0x8C0171);  // TMRSF_DCM_AUTO_CAL_1B	2785
   	SetJamram(XXXX,0x8C0191);  // TMRSF_RD_DCA_OFFSET_B1_L_PHASE90<0>	2786
   	SetJamram(XXXX,0x8C01B1);  // TMRSF_OCOSC_SPEED_UP_R	2787
   	SetJamram(XXXX,0x8C01D1);  // TMRSF_PU_DUTY_DN_1B	2788
   	SetJamram(XXXX,0x8C01F1);  // TMRSF_PPIB_NTC_SEL	2789
   	SetJamram(XXXX,0x801110);  // TMRSF_PCURRENT_BUF2_R	2790
   	SetJamram(XXXX,0x801130);  // TMRSF_IVC_RLCTRL_OFF_1B	2791
   	SetJamram(XXXX,0x801150);  // TMRSF_PREAMP_BUF_CM_DN1_1B	2792
   	//////SetJamram(XXXX,0x801170);  // TMRSF_CURRENT_DIV1_R	2793
   	SetJamram(XXXX,0x801190);  // TMRSF_S1_UP	2794
   	SetJamram(XXXX,0x8011B0);  // TMRSF_VGNLA_PTCTONTC	2795
   	//////SetJamram(XXXX,0x8011D0);  // TMRSF_PREAMP_BIAS_ALL_UP	2796
   	SetJamram(XXXX,0x8011F0);  // TMRSF_TIMER_CMOS_O_DELAY_UP	2797
   	SetJamram(XXXX,0x801111);  // TMRSF_MVPPEN	2798
   	SetJamram(XXXX,0x801131);  // TMRSF_VBB2FREQ_CODE1	2799
   	SetJamram(XXXX,0x801151);  // TMRSF_VBB2_X8_ON	2800
   	SetJamram(XXXX,0x801171);  // TMRSF_PPIBSTBY_PW_X4	2801
   	SetJamram(XXXX,0x801191);  // TMRSF_VPPIBFREQ_DN2	2802
   	SetJamram(XXXX,0x8011B1);  // TMRSF_VGNLA2MP_ON_6_12	2803
   	SetJamram(XXXX,0x8011D1);  // TMRSF_VGNLASTBY_PW_X1	2804
   	SetJamram(XXXX,0x8011F1);  // TMRSF_VGNLASTBY_PW_X4	2805
   	SetJamram(XXXX,0x841110);  // TMRSF_VPP2MP_EN	2806
   	SetJamram(XXXX,0x841130);  // TMRSF_MVPP2EN	2807
   	SetJamram(XXXX,0x841150);  // TMRSF_VBB_SELF_UP1	2808
   	SetJamram(XXXX,0x841170);  // TMRSF_2_STEP_OC_EN_CDGH_L	2809
   	SetJamram(XXXX,0x841190);  // TMRS_VBB3_MON	2810
   	SetJamram(XXXX,0x8411B0);  // TMRSF_VBB_SELF_UP2	2811
   	SetJamram(XXXX,0x8411D0);  // TMRSF_VBB_NTC_MRS1	2812
   	SetJamram(XXXX,0x8411F0);  // TMRSF_VBB_PTC_TRIP65	2813
   	SetJamram(XXXX,0x841111);  // TMRSF_VBB2_SELF_UP3	2814
   	SetJamram(XXXX,0x841131);  // TMRSF_VBB2_HYBRID_NTC_NONLIN_47	2815
   	SetJamram(XXXX,0x841151);  // TMRSF_VBB2_HYBRID_NTC_LIN	2816
   	SetJamram(XXXX,0x841171);  // TMRSF_VBB2_NTC_MRS2	2817
   	SetJamram(XXXX,0x841191);  // TMRSF_VPP2_UP2	2818
   	SetJamram(XXXX,0x8411B1);  // TMRSF_VPPIB_IDN	2819
   	SetJamram(XXXX,0x8411D1);  // TMRSF_VPP_ACT_DN1	2820
   	SetJamram(XXXX,0x8411F1);  // TMRSF_VPP_ACTIVE_ON	2821
   	SetJamram(XXXX,0x881130);  // TMRSF_DINA_1ST_WCK_270_UP_1B	2822
   	SetJamram(XXXX,0x881150);  // TMRSF_PU_DUTY_UP_1B	2823
   	SetJamram(XXXX,0x881170);  // TMRSF_FRP_BG2_1B_M1	2824
   	SetJamram(XXXX,0x881190);  // TMRSF_DINA_1ST_WCK_90_DN_1B	2825
   	SetJamram(XXXX,0x8811B0);  // TMRSF_TIMER_CNT_DELAY_UP	2826
   	SetJamram(XXXX,0x8811D0);  // TMRSF_MRS_WCK_OSC_BUF_CONT_R	2827
   	SetJamram(XXXX,0x8811F0);  // TMRS_DQ_EN_R	2828
   	SetJamram(XXXX,0x881111);  // TMRSF_VREFCAP_UP2	2829
   	SetJamram(XXXX,0x881131);  // TMRSF_O123_WIDTH_CTRL1_R	2830
   	SetJamram(XXXX,0x881151);  // TMRSF_FRP_DIS_DLY_F_G3_M1	2831
   	SetJamram(XXXX,0x881171);  // TMRSF_VREFCA_TRIM1	2832
   	SetJamram(XXXX,0x881191);  // TMRSF_PDSD2M_PDINC_ON	2833
   	SetJamram(XXXX,0x8811B1);  // TMRSF_X4_NF_4_12_OPT2	2834
   	SetJamram(XXXX,0x8811D1);  // TMRSF_VREF_AMP_UP1_CA	2835
   	SetJamram(XXXX,0x8811F1);  // TMRSF_VREF_SECK_EN	2836
   	SetJamram(XXXX,0x8C1110);  // TMRSF_RCSL_DIS_DLY_S_G2_P2	2837
   	SetJamram(XXXX,0x8C1130);  // TMRSF_FRP_BG2_0B_M1	2838
   	SetJamram(XXXX,0x8C1150);  // TMRSF_TCMD4	2839
   	SetJamram(XXXX,0x8C1170);  // TMRSF_IOL_DN1_CA	2840
   	SetJamram(XXXX,0x8C1190);  // TMRSF_PBA_G1_REPLICA	2841
   	SetJamram(XXXX,0x8C11B0);  // TMRSF_CA_ANTI_2	2842
   	SetJamram(XXXX,0x8C11D0);  // TMRSF_WCAI_DLY_M1	2843
   	SetJamram(XXXX,0x8C11F0);  // TMRSF_PCLKF_CL1_P2	2844
   	SetJamram(XXXX,0x8C1111);  // TMRSF_X8	2845
   	SetJamram(XXXX,0x8C1131);  // TMRSF_RCSLEN_DLY_S_G1_P2	2846
   	SetJamram(XXXX,0x8C1151);  // TMRSF_RCSL_DIS_DLY_F_G3_M1	2847
   	SetJamram(XXXX,0x8C1171);  // TMRSF_PCLKWC4_LINK_MUX_OUT_EN_C	2848
   	SetJamram(XXXX,0x8C1191);  // TMRSF_RCSL_DIS_DLY_F_G3_P2	2849
   	SetJamram(XXXX,0x8C11B1);  // TMRSF_LONG2P_LVL2	2850
   	SetJamram(XXXX,0x8C11D1);  // TMRSF_PCLKF_CA_P2	2851
   	SetJamram(XXXX,0x8C11F1);  // TMRSF_VREFCS_DN1	2852
   	SetJamram(XXXX,0x802110);  // TMRS_VREFLANG_UP3	2853
   	SetJamram(XXXX,0x802130);  // TMRS_VREFPG_DN1	2854
   	SetJamram(XXXX,0x802150);  // TMRS_VREFISO_UP3	2855
   	SetJamram(XXXX,0x802170);  // TMRSF_RD_DCA_OFFSET_B1_R_PHASE270<1>	2856
   	SetJamram(XXXX,0x802190);  // TMRS_VBP_MRS2	2857
   	SetJamram(XXXX,0x8021B0);  // TMRSF_VBSP_NTC_UP3	2858
   	SetJamram(XXXX,0x8021D0);  // TMRSF_VBPDET_DIS2	2859
   	SetJamram(XXXX,0x8021F0);  // TMRSF_WR_TMMT_B1_R_180	2860
   	SetJamram(XXXX,0x802111);  // TMRS_PMOC_CNTX4	2861
   	SetJamram(XXXX,0x802131);  // TMRSF_VISO_NTC_UP1	2862
   	SetJamram(XXXX,0x802151);  // TMRSF_TOFFSETD_FLAG1<0>	2863
   	SetJamram(XXXX,0x802171);  // TMRSF_VPP2_CLAMP_IUP_R	2864
   	SetJamram(XXXX,0x802191);  // TMRSF_VGNLA_PCHG_SKIP_R	2865
   	SetJamram(XXXX,0x8021B1);  // TMRSF_SIVCABSP_IUP_R	2866
   	SetJamram(XXXX,0x8021D1);  // TMRSF_ABB_VSNB_DIS	2867
   	SetJamram(XXXX,0x8021F1);  // TMRSF_SIVCABSN_FBB_EN_R	2868
   	SetJamram(XXXX,0x842110);  // TMRSF_SIVCABN_RBB_EN_R	2869
   	SetJamram(XXXX,0x842130);  // TMRSF_VREFABSP_NTC_OPT1	2870
   	SetJamram(XXXX,0x842150);  // TMRSF_VPP_HYBRID_NTC_31	2871
   	SetJamram(XXXX,0x842170);  // TMRSF_SIVCABSN_IUP_R	2872
   	SetJamram(XXXX,0x842190);  // TMRSF_VBSN_NTC_UP2	2873
   	SetJamram(XXXX,0x8421B0);  // TMRSF_DCC_0_HALF_1B	2874
   	SetJamram(XXXX,0x8421D0);  // TMRSF_VBB2_SELF_UP1_R	2875
   	SetJamram(XXXX,0x8421F0);  // TMRSF_S4_DN	2876
   	SetJamram(XXXX,0x842111);  // TMRSF_VBSPDET_DIS2	2877
   	SetJamram(XXXX,0x842131);  // TMRSF_VBSN_NTC_UP3	2878
   	SetJamram(XXXX,0x842151);  // TMRSF_VREFX_PWRUP_CTRL	2879
   	SetJamram(XXXX,0x842171);  // TMRSF_VREF_REG_IDD_DN	2880
   	SetJamram(XXXX,0x842191);  // TMRSF_VPP_NTC_UP1	2881
   	SetJamram(XXXX,0x8421B1);  // TMRS_VREFBSG_DN1	2882
   	SetJamram(XXXX,0x8421D1);  // TMRSF_DSM_APM_OFF	2883
   	SetJamram(XXXX,0x8421F1);  // TMRSF_AIVCX_SRC_UP_IOSA_PRE	2884
   	SetJamram(XXXX,0x882110);  // TMRSF_PU_CONT_C1_DMI1	2885
   	SetJamram(XXXX,0x882130);  // TMRSF_MRS_WCK_BUF_DIS_R	2886
   	SetJamram(XXXX,0x882150);  // TMRSF_VREFDQ_DN_R	2887
   	SetJamram(XXXX,0x882170);  // TMRSF_ORD_UP1_1B	2888
   	SetJamram(XXXX,0x882190);  // TMRSF_VREFDQFORCE_R	2889
   	SetJamram(XXXX,0x8821B0);  // TMRSF_VREFDQ_OFF_R	2890
   	SetJamram(XXXX,0x8821D0);  // TMRSF_PD_CONT_C1_DQ<8>	2891
   	SetJamram(XXXX,0x8821F0);  // TMRSF_PD_CONT_C1_DMI1	2892
   	SetJamram(XXXX,0x882111);  // TMRSF_PWY_SAMPLE1_WCK4_UP_1B	2893
   	//////SetJamram(XXXX,0x882191);  // TMRSF_DEEMP_RL_ON_1B	2894
   	SetJamram(XXXX,0x8821B1);  // TMRSF_WCK2CK_LATENCY_UP1D_1B	2895
   	SetJamram(XXXX,0x8821D1);  // TMRSF_VREFWCK_OFFSET_EN_R	2896
   	SetJamram(XXXX,0x8821F1);  // TMRSF_VREFWCK_TRIM1_R	2897
   	SetJamram(XXXX,0x8C2110);  // TMRSF_PDS_DUTY_DN3_R	2898
   	SetJamram(XXXX,0x8C2130);  // TMRSF_WCK2CK_LATENCY_DN1D_1B	2899
   	SetJamram(XXXX,0x8C2150);  // TMRSF_WCK_BIAS_OSC_X2	2900
   	SetJamram(XXXX,0x8C2170);  // TMRSF_COLD25_SHIFT_1B<0>	2901
   	SetJamram(XXXX,0x8C2190);  // TMRS_SUBADJ_R	2902
   	SetJamram(XXXX,0x8C21B0);  // TMRSF_ADD_RES_HEADER1_R	2903
   	SetJamram(XXXX,0x8C21D0);  // TMRSF_PCURRENT_REP0_R	2904
   	//////SetJamram(XXXX,0x8C21F0);  // TMRSF_WCK_BIAS_VREF_DN2_1B	2905
   	SetJamram(XXXX,0x8C2111);  // TMRSF_WDBI_AC_OFF_1B	2906
   	SetJamram(XXXX,0x8C2131);  // TMRSF_HSDI_CLK_P1_1B	2907
   	SetJamram(XXXX,0x8C2151);  // TMRSF_LF_DUTY_UP2_1B	2908
   	SetJamram(XXXX,0x8C2171);  // TMRSF_PD_DUTY_DN_DQS_C_1B	2909
   	SetJamram(XXXX,0x8C2191);  // TMRSF_RD_DCA_OFFSET_B1_L_PHASE90<1>	2910
   	SetJamram(XXXX,0x8C21B1);  // TMRSF_SAFF_OFFSET_VREF_1B	2911
   	SetJamram(XXXX,0x8C21F1);  // TMRSF_SAFF_ANTI_1_1B	2912
   	SetJamram(XXXX,0x803110);  // TMRSF_SIVC_IO_IUP_1B	2913
   	SetJamram(XXXX,0x803130);  // TMRSF_REVERSE_BIAS_DIS_1B	2914
   	//////SetJamram(XXXX,0x803150);  // TMRSF_PREAMP_BUF_CURRENT_UP9_1B	2915
   	//////SetJamram(XXXX,0x803170);  // TMRSF_PCURRENT_BUF0_R	2916
   	SetJamram(XXXX,0x803190);  // TMRSF_REVERSE_BIAS_WEAK_EN_OSC	2917
   	SetJamram(XXXX,0x8031B0);  // TMRSF_S5_T28	2918
   	SetJamram(XXXX,0x8031D0);  // TMRSF_PREAMP_BIAS1_UP	2919
   	SetJamram(XXXX,0x8031F0);  // TMRSF_TIMER_O_DELAY_UP	2920
   	SetJamram(XXXX,0x803111);  // TMRSF_VPPFREQ_DN2	2921
   	SetJamram(XXXX,0x803131);  // TMRSF_VBB2FREQ_CODE0	2922
   	SetJamram(XXXX,0x803151);  // TMRSF_VBB2_HALF_KICK	2923
   	SetJamram(XXXX,0x803171);  // TMRSF_PPIBMP_HOFF	2924
   	SetJamram(XXXX,0x803191);  // TMRSF_HIGH_VDD_TEST_VPPIB	2925
// 	SetJamram(XXXX,0x8031B1);  // TMRSF_VGNLA2DRV_ACT_ONLY	2926
   	SetJamram(XXXX,0x8031D1);  // TMRSF_VGNLAEN	2927
   	SetJamram(XXXX,0x8031F1);  // TMRSF_VGNLAFREQ_DN2	2928
   	SetJamram(XXXX,0x843110);  // TMRSF_SIVC_TEMP_OFF	2929
   	SetJamram(XXXX,0x843130);  // TMRSF_VPP2FREQ_UP	2930
   	SetJamram(XXXX,0x843150);  // TMRSF_OC_CTRL_VGNLA_ON	2931
   	SetJamram(XXXX,0x843170);  // TMRSF_PTC_VGNLA2_UP	2932
   	SetJamram(XXXX,0x843190);  // TMRSF_VBB3_DN1	2933
   	SetJamram(XXXX,0x8431B0);  // TMRSF_VBB_DN2	2934
   	SetJamram(XXXX,0x8431D0);  // TMRSF_VBB_IDN	2935
   	SetJamram(XXXX,0x8431F0);  // TMRSF_VBB_HYBRID_NTC_LIN_47	2936
   	SetJamram(XXXX,0x843111);  // TMRSF_CURRENT_UP15_R	2937
   	SetJamram(XXXX,0x843131);  // TMRSF_VPPCTRL_ANTI_OFF	2938
   	SetJamram(XXXX,0x843151);  // TMRSF_VBB2_NTC_MRS4	2939
   	SetJamram(XXXX,0x843171);  // TMRSF_VBB2_HYBRID_NTC_NONLIN	2940
   	SetJamram(XXXX,0x843191);  // TMRSF_VPP2_UP1	2941
   	SetJamram(XXXX,0x8431B1);  // TMRSF_PPIB_NTC_ON	2942
   	SetJamram(XXXX,0x8431D1);  // TMRSF_VPP_ACT_UP2	2943
   	SetJamram(XXXX,0x8431F1);  // TMRSF_VPP_NTC_OFF	2944
   	//////SetJamram(XXXX,0x883130);  // TMRSF_RD_C2C_PREAMP_DUTY_UP1_1B	2945
   	SetJamram(XXXX,0x883150);  // TMRSF_CMOSBUF_3733_ON_0B	2946
   	SetJamram(XXXX,0x883170);  // TMRSF_DRV_PWR_ON_ZQ_B1	2947
   	SetJamram(XXXX,0x883190);  // TMRSF_FRP_BG1_1B_P1	2948
   	//////SetJamram(XXXX,0x8831B0);  // TMRSF_RD_C2C_PREAMP_CUR_UP_1B	2949
// 	//////SetJamram(XXXX,0x8831D0);  // TMRSF_RDBI_AC_FREQ_CTRL1	2950
   	SetJamram(XXXX,0x8831F0);  // TMRSF_ZQ_RXTX_SHORT_DET_EN_R	2951
   	SetJamram(XXXX,0x883111);  // TMRSF_VREFCAP_UP1	2952
   	SetJamram(XXXX,0x883131);  // TMRSF_O123_WIDTH_CTRL0_R	2953
   	SetJamram(XXXX,0x883151);  // TMRSF_FRP_DIS_DLY_F_G3_P2	2954
   	SetJamram(XXXX,0x883171);  // TMRSF_NTODT_OFF_DQ_DQS_EQ	2955
   	SetJamram(XXXX,0x883191);  // TMRSF_PCLKWC4_AP_END	2956
   	SetJamram(XXXX,0x8831B1);  // TMRSF_PCLKF_ON	2957
   	SetJamram(XXXX,0x8831D1);  // TMRSF_VREF_AMP_UP2_CA	2958
   	SetJamram(XXXX,0x8C3110);  // TMRSF_NTODT_CTRL_SPLIT_EN	2959
   	SetJamram(XXXX,0x8C3130);  // TMRSF_FRP_BG1_0B_M1	2960
   	SetJamram(XXXX,0x8C3150);  // TMRSF_CA_BUF_PCURRENT_DN2	2961
   	SetJamram(XXXX,0x8C3170);  // TMRSF_CLK_PRESUB_ON	2962
   	SetJamram(XXXX,0x8C3190);  // TMRSF_FRP_BG1_0B_P1	2963
   	SetJamram(XXXX,0x8C31B0);  // TMRSF_CA_ANTI_1	2964
   	SetJamram(XXXX,0x8C31D0);  // TMRSF_PDINC_EN_OFF	2965
   	SetJamram(XXXX,0x8C31F0);  // TMRSF_PCLKF_CL1_P1	2966
   	SetJamram(XXXX,0x8C3111);  // TMRSF_RCSL_DIS_DLY_F_G2_M1	2967
   	SetJamram(XXXX,0x8C3131);  // TMRSF_RCSLEN_DLY_S_G2_P2	2968
   	SetJamram(XXXX,0x8C3151);  // TMRSF_PCURRENT_UP2_CS	2969
   	SetJamram(XXXX,0x8C3171);  // TMRSF_PBA_G3_REPLICA	2970
   	SetJamram(XXXX,0x8C3191);  // TMRSF_PCURRENT_UP1_CS	2971
   	SetJamram(XXXX,0x8C31B1);  // TMRSF_RCSLEN_MWR_DLY_M1	2972
   	SetJamram(XXXX,0x8C31D1);  // TMRSF_RCSLEN_DLY_P1	2973
   	SetJamram(XXXX,0x8C31F1);  // TMRSF_CMDDECFS_OFF	2974
   	SetJamram(XXXX,0x804110);  // TMRS_VREFABSN_DN3	2975
   	SetJamram(XXXX,0x804130);  // TMRS_VREFPG_UP2	2976
   	SetJamram(XXXX,0x804150);  // TMRS_VREFLANG_UP2	2977
   	SetJamram(XXXX,0x804170);  // TMRSF_RD_DCA_OFFSET_B1_R_PHASE180<0>	2978
   	SetJamram(XXXX,0x804190);  // TMRS_VBP_MRS1	2979
   	SetJamram(XXXX,0x8041B0);  // TMRSF_VBSP_NTC_UP2	2980
   	SetJamram(XXXX,0x8041D0);  // TMRSF_2ND_FUSING_VBP	2981
   	SetJamram(XXXX,0x8041F0);  // TMRSF_WR_TMMT_B1_R_90	2982
   	SetJamram(XXXX,0x804111);  // TMRS_PMOC_MASTER_EN	2983
   	SetJamram(XXXX,0x804131);  // TMRSF_S2_T28	2984
   	SetJamram(XXXX,0x804151);  // TMRSF_VREFLANG_PTC_DN	2985
   	SetJamram(XXXX,0x804171);  // TMRSF_VPP2_CLAMP_IDN_R	2986
   	SetJamram(XXXX,0x804191);  // TMRSF_VGNLA2_PCHG_SKIP_R	2987
   	SetJamram(XXXX,0x8041B1);  // TMRSF_CMOSBUF_PCURRENT1_UP0_1B	2988
   	SetJamram(XXXX,0x8041D1);  // TMRSF_ABB_VSPB_DIS	2989
   	SetJamram(XXXX,0x8041F1);  // TMRSF_SIVCABSN_PSELF_RBB_EN_R	2990
   	SetJamram(XXXX,0x844110);  // TMRSF_SIVCABP_PSELF_RBB_EN_R	2991
   	SetJamram(XXXX,0x844130);  // TMRSF_VBSPMP_DIS_L	2992
// 	//////SetJamram(XXXX,0x844150);  // TMRSF_VPP_HYBRID_NTC_47	2993
   	SetJamram(XXXX,0x844170);  // TMRSF_SIVCABSN_IDN_R	2994
   	SetJamram(XXXX,0x844190);  // TMRSF_OC_CTRL_VREFLANG_ON	2995
   	SetJamram(XXXX,0x8441B0);  // TMRSF_VREFX_IDD2_DN1_DIF_R	2996
   	SetJamram(XXXX,0x8441D0);  // TMRSF_S4_MID	2997
   	SetJamram(XXXX,0x8441F0);  // TMRSF_VBB2_NTC_OFF_PSELF_R	2998
   	SetJamram(XXXX,0x844111);  // TMRSF_VREF_REG_DIS	2999
   	SetJamram(XXXX,0x844131);  // TMRSF_VBNFREQ_CODE2	3000

	}
#endif

//3001~3500
#if 1
	{
	SetJamram(XXXX,0x844151);  // TMRSF_BGR_RES1_DN1	3001
	SetJamram(XXXX,0x844171);  // TMRSF_VBSN_HALF	3002
	SetJamram(XXXX,0x844191);  // TMRSF_VPP_NTC_DN1	3003
	SetJamram(XXXX,0x8441B1);  // TMRSF_VREFBSG_UP2	3004
	SetJamram(XXXX,0x8441D1);  // TMRSF_2_STEP_OC_EN_CDGH_R	3005
	SetJamram(XXXX,0x8441F1);  // TMRSF_AIVCA_FB_STBY_ON_IOSA_PRE	3006
	SetJamram(XXXX,0x884110);  // TMRSF_WCK_DRIVER_RL_UP_1B	3007
	SetJamram(XXXX,0x884130);  // TMRSF_PU_CONT_C2_DMI1	3008
	SetJamram(XXXX,0x884150);  // TMRSF_LF_DCA_SEL_1B	3009
	SetJamram(XXXX,0x884170);  // TMRSF_DCM_CAP0_R	3010
	SetJamram(XXXX,0x884190);  // TMRSF_PU_DUTY_DN_DQS_T_1B	3011
// 	//////SetJamram(XXXX,0x8841B0);  // TMRSF_PDL_P1_1B	3012
	SetJamram(XXXX,0x8841D0);  // TMRSF_VREFDQ_PD_OFF_R	3013
	SetJamram(XXXX,0x8841F0);  // TMRSF_IOH_DN_R	3014
	SetJamram(XXXX,0x884111);  // TMRSF_VREFWCK_TRIM2_R	3015
	SetJamram(XXXX,0x884131);  // TMRSF_CMOSBUF_4800_ON_R	3016
	SetJamram(XXXX,0x884151);  // TMRSF_IO_WR_VDD2H_PG_ALWAYS_TURN_ON_1B	3017
	SetJamram(XXXX,0x884171);  // TMRSF_VREFWCK_CURRENT_SW2_R	3018
	SetJamram(XXXX,0x884191);  // TMRSF_WCK_SYNC_CCL_OFF_R	3019
	SetJamram(XXXX,0x8841B1);  // TMRSF_WCK4_TO_DQ_DELAY_DN_1B	3020
	SetJamram(XXXX,0x8841D1);  // TMRSF_RD_C2C_SW_1B	3021
	SetJamram(XXXX,0x8841F1);  // TMRSF_CMOSBUF_5818_ON_R	3022
	SetJamram(XXXX,0x8C4110);  // TMRSF_IO_WR_VDD2L_PG_ALWAYS_TURN_ON_1B	3023
	SetJamram(XXXX,0x8C4130);  // TMRSF_PCLKWC_2TCK_EN_R	3024
	SetJamram(XXXX,0x8C4150);  // TMRSF_WCK_BIAS_VREF_UP3_1B	3025
	SetJamram(XXXX,0x8C4170);  // TMRSF_COLD0_SHIFT_1B<2>	3026
	SetJamram(XXXX,0x8C4190);  // TMRSF_HSDI_TDS_DN_1B	3027
	SetJamram(XXXX,0x8C41B0);  // TMRSF_ADD_RES_FOOTER0_R	3028
	SetJamram(XXXX,0x8C41F0);  // TMRSF_WCK_BIAS_VREF_UP2_1B	3029
	SetJamram(XXXX,0x8C4111);  // TMRSF_VREFWCK_TRIM4_R	3030
	SetJamram(XXXX,0x8C4131);  // TMRSF_WCK2CK_LATENCY_DN2D_1B	3031
	SetJamram(XXXX,0x8C4151);  // TMRSF_SYNC_C2C_DUTY_UP2_1B	3032
	SetJamram(XXXX,0x8C4171);  // TMRSF_PD_DUTY_UP_DQS_C_1B	3033
	SetJamram(XXXX,0x8C4191);  // TMRSF_RD_DCA_OFFSET_B1_L_PHASE0<0>	3034
	SetJamram(XXXX,0x8C41B1);  // TMRSF_SAFF_OFFSET_DQ_1B_1215	3035
	SetJamram(XXXX,0x8C41F1);  // TMRSF_SAFF_ANTI_0_1B	3036
	SetJamram(XXXX,0x805110);  // TMRSF_SIVC_IO_DD1_SINK_UP_1B	3037
	SetJamram(XXXX,0x805130);  // TMRSF_WR_C2C_PREAMP_CUR_UP2_1B	3038
	SetJamram(XXXX,0x805150);  // TMRSF_S2_DN	3039
	////SetJamram(XXXX,0x805170);  // TMRSF_DS_BUF_CURRENT_UP1_R	3040
	SetJamram(XXXX,0x805190);  // TMRSF_S1_MID	3041
	SetJamram(XXXX,0x8051B0);  // TMRSF_S4_T28	3042
	SetJamram(XXXX,0x8051D0);  // TMRSF_PREAMP_BIAS1_DN	3043
	SetJamram(XXXX,0x8051F0);  // TMRSF_TIMER_CMOS_DELAY_UP	3044
	SetJamram(XXXX,0x805111);  // TMRSF_HIGH_VDD_TEST_VPP	3045
	SetJamram(XXXX,0x805131);  // TMRSF_VBB2_STBY_HALF	3046
	SetJamram(XXXX,0x805151);  // TMRSF_VBBFREQ_CODE0	3047
	SetJamram(XXXX,0x805171);  // TMRSF_VPPIBEN	3048
	SetJamram(XXXX,0x805191);  // TMRSF_VPPIBPUMP_ON_3_9	3049
	SetJamram(XXXX,0x8051B1);  // TMRSF_VGNLA2MP_ON_6	3050
	SetJamram(XXXX,0x8051D1);  // TMRSF_VGNLAMP_QOFF	3051
	SetJamram(XXXX,0x8051F1);  // TMRSF_VGNLAMP_ON_8_11	3052
	////SetJamram(XXXX,0x845110);  // TMRSF_SIVC_PWRUP_CTRL_OFF	3053
	SetJamram(XXXX,0x845130);  // TMRSF_VPP2FREQ_DN	3054
	SetJamram(XXXX,0x845150);  // TMRSF_VGNLA_IDN	3055
	SetJamram(XXXX,0x845170);  // TMRSF_PTC_VGNLA2_DN	3056
	SetJamram(XXXX,0x845190);  // TMRSF_VBB3_DN2	3057
	SetJamram(XXXX,0x8451B0);  // TMRSF_VBB_UP1	3058
	SetJamram(XXXX,0x8451D0);  // TMRSF_VBB_NTC_MRS4	3059
	SetJamram(XXXX,0x8451F0);  // TMRSF_VBB_HYBRID_NTC_NONLIN	3060
	SetJamram(XXXX,0x845111);  // TMRSF_VBB2_UP3	3061
	SetJamram(XXXX,0x845131);  // TMRSF_VBB2_NTC_MRS6	3062
	SetJamram(XXXX,0x845151);  // TMRSF_VBB2_IDN	3063
	SetJamram(XXXX,0x845171);  // TMRSF_VBB2_SELF_UP1	3064
	SetJamram(XXXX,0x845191);  // TMRSF_VPP2_DN2	3065
	SetJamram(XXXX,0x8451B1);  // TMRSF_PVPPAUP	3066
	SetJamram(XXXX,0x8451D1);  // TMRSF_VPP_ACT_UP1	3067
	SetJamram(XXXX,0x8451F1);  // TMRSF_VPP_DN_PSELF	3068
	SetJamram(XXXX,0x885130);  // TMRSF_PN_2666_M	3069
	SetJamram(XXXX,0x885150);  // TMRSF_CMOSBUF_4266_ON_0B	3070
	SetJamram(XXXX,0x885170);  // TMRSF_TOFFSETD_FLAG1<3>	3071
	SetJamram(XXXX,0x885190);  // TMRSF_FRP_BG0_1B_M1	3072
	SetJamram(XXXX,0x8851B0);  // TMRSF_RDREP_PAD_ON_1B_M2	3073
	SetJamram(XXXX,0x8851D0);  // TMRSF_ECS_ERR_CNT_DONTCARE	3074
	SetJamram(XXXX,0x8851F0);  // TMRSF_ADD_RES_HEADER0_CA	3075
	SetJamram(XXXX,0x885111);  // TMRSF_VREFCAFORCE	3076
	SetJamram(XXXX,0x885131);  // TMRSF_TOFFSETD_FLAG1<2>	3077
	SetJamram(XXXX,0x885151);  // TMRSF_PD_RSET_ON_R	3078
	SetJamram(XXXX,0x885191);  // TMRSF_PCLKWC2_AP_END	3079
	SetJamram(XXXX,0x8851B1);  // TMRSF_PCLKF_M1	3080
	SetJamram(XXXX,0x8851D1);  // TMRSF_VREF_AMP_DN1_CA	3081
	SetJamram(XXXX,0x8851F1);  // TMRSF_PCKE_CA_ENB_R	3082
	SetJamram(XXXX,0x8C5110);  // TMRSF_PBA_G2_REPLICA	3083
	SetJamram(XXXX,0x8C5130);  // TMRSF_FRP_BG2_0B_P1	3084
	SetJamram(XXXX,0x8C5150);  // TMRSF_CA_BUF_CURRENT_DN1	3085
	SetJamram(XXXX,0x8C5170);  // TMRSF_CS_PRESUB_ON	3086
	SetJamram(XXXX,0x8C5190);  // TMRSF_FRP_BG0_0B_M1	3087
	SetJamram(XXXX,0x8C51B0);  // TMRSF_PCA_G1_REPLICA	3088
	SetJamram(XXXX,0x8C51D0);  // TMRSF_PW123_2CLK	3089
	SetJamram(XXXX,0x8C51F0);  // TMRSF_WW_IOPR_MAST_P1_G3	3090
	SetJamram(XXXX,0x8C5111);  // TMRSF_RCSLEN_MWR_DLY_M2	3091
	SetJamram(XXXX,0x8C5131);  // TMRSF_RCSLEN_DLY_S_G3_P2	3092
	SetJamram(XXXX,0x8C5151);  // TMRSF_PCURRENT_DN2_CS	3093
	SetJamram(XXXX,0x8C5171);  // TMRSF_PWR_LINK	3094
	SetJamram(XXXX,0x8C5191);  // TMRSF_PCURRENT_DN1_CS	3095
	SetJamram(XXXX,0x8C51B1);  // TMRSF_LONG2P_LVL1	3096
	SetJamram(XXXX,0x8C51D1);  // TMRSF_PDE_PRD_SEL	3097
	SetJamram(XXXX,0x8C51F1);  // TMRSF_CMDFS_LONG	3098
	SetJamram(XXXX,0x806110);  // TMRS_VREFABSN_UP3	3099
	SetJamram(XXXX,0x806130);  // TMRS_VREFPG_UP1	3100
	SetJamram(XXXX,0x806150);  // TMRS_VREFISO_UP1	3101
	SetJamram(XXXX,0x806170);  // TMRSF_RD_DCA_OFFSET_B1_R_PHASE180<1>	3102
	SetJamram(XXXX,0x806190);  // TMRS_VBP_MRS0	3103
	SetJamram(XXXX,0x8061B0);  // TMRSF_VBSP_NTC_UP1	3104
	SetJamram(XXXX,0x8061D0);  // TMRS_NOTFUSING_VBP	3105
	SetJamram(XXXX,0x8061F0);  // TMRSF_WR_TMMT_B1_R_0	3106
	SetJamram(XXXX,0x806111);  // TMRS_PMOC_PG_OFF	3107
	SetJamram(XXXX,0x806131);  // TMRSF_S1_T28	3108
	SetJamram(XXXX,0x806151);  // TMRSF_LATCHUP_VBB2_THIN_ON_R	3109
	SetJamram(XXXX,0x806171);  // TMRSF_VPP2_CLAMP_IUP2_R	3110
	SetJamram(XXXX,0x806191);  // TMRSF_VPPIB_PCG_OFF_R	3111
	SetJamram(XXXX,0x8061B1);  // TMRSF_S5_MID	3112
	SetJamram(XXXX,0x8061D1);  // TMRSF_ABB_VPB_DIS	3113
	SetJamram(XXXX,0x8061F1);  // TMRSF_SIVCABSN_DSM_RBB_EN_R	3114
	SetJamram(XXXX,0x846110);  // TMRSF_SIVCABP_DSM_RBB_EN_R	3115
	SetJamram(XXXX,0x846130);  // TMRSF_VBN_NTC_UP3	3116
	SetJamram(XXXX,0x846150);  // TMRSF_VPP_HYBRID_NTC_39	3117
	SetJamram(XXXX,0x846170);  // TMRSF_VBPFREQ_UP1	3118
	SetJamram(XXXX,0x846190);  // TMRSF_VREFBB2_NTC_MRS4	3119
	SetJamram(XXXX,0x8461B0);  // TMRSF_VREFX_IDD2_UP1_DIF_R	3120
	SetJamram(XXXX,0x8461D0);  // TMRSF_S3_MID	3121
	SetJamram(XXXX,0x8461F0);  // TMRSF_SIVC_DD1_SINK_UP_R	3122
	SetJamram(XXXX,0x846111);  // TMRSF_BGR_RES1_UP2	3123
	SetJamram(XXXX,0x846131);  // TMRSF_VBSN_NTC_UP1	3124
	SetJamram(XXXX,0x846151);  // TMRSF_BGR_RES1_DN2	3125
	SetJamram(XXXX,0x846171);  // TMRSF_VBSNDET_DIS2	3126
//	////SetJamram(XXXX,0x846191);  // TMRSF_VPP_HYBRID_NTC_LIN	3127
	SetJamram(XXXX,0x8461B1);  // TMRSF_VREFBSG_UP1	3128
	SetJamram(XXXX,0x8461D1);  // TMRSF_IDD3N_ADJ_IOSA_PRE	3129
	SetJamram(XXXX,0x8461F1);  // TMRSF_MAIVCA_HDRVOFF_IOSA_PRE	3130
	SetJamram(XXXX,0x886110);  // TMRSF_WCK_DRIVER_RL_ON_1B	3131
	SetJamram(XXXX,0x886170);  // TMRSF_PCKE_CA_ENB_RR	3132
	SetJamram(XXXX,0x886190);  // TMRSF_PU_DUTY_UP_DQS_T_1B	3133
	SetJamram(XXXX,0x8861B0);  // TMRSF_VREF_AMP_UP1_DQ_1B	3134
	SetJamram(XXXX,0x8861D0);  // TMRSF_DCM_BIAS0_R	3135
	SetJamram(XXXX,0x8861F0);  // TMRSF_WLVL_STOP_STYLE_R_Z0	3136
	SetJamram(XXXX,0x886111);  // TMRSF_WCK4_PHASE_DET_WCK_DN_1B	3137
	SetJamram(XXXX,0x886131);  // TMRSF_WR_WCK_CCL_OFF_R	3138
	SetJamram(XXXX,0x886151);  // TMRSF_PREAMP_BUF_CM_DN2_1B	3139
	SetJamram(XXXX,0x886171);  // TMRSF_VREFWCK_CURRENT_SW1_R	3140
	SetJamram(XXXX,0x886191);  // TMRSF_CMOS_DCC_DISABLE_1B	3141
	SetJamram(XXXX,0x8861B1);  // TMRSF_WCK2CK_SYNC_WCK_UP_1B	3142
	SetJamram(XXXX,0x8861D1);  // TMRSF_CMOSBUF_4266_ON_R	3143
	SetJamram(XXXX,0x8861F1);  // TMRSF_PCLKWC4_LINK_MUX_OUT_EN_1B	3144
	SetJamram(XXXX,0x8C6110);  // TMRSF_WRX_0CLK_FF_1B	3145
	SetJamram(XXXX,0x8C6130);  // TMRSF_WCK2CK_LATENCY_UP2D_1B	3146
	SetJamram(XXXX,0x8C6150);  // TMRSF_DQS_TOGGLE_OFF_1B	3147
	SetJamram(XXXX,0x8C6170);  // TMRSF_COLD0_SHIFT_1B<1>	3148
	SetJamram(XXXX,0x8C6190);  // TMRSF_VRO_BLOCK_DISABLE_R	3149
	SetJamram(XXXX,0x8C61B0);  // TMRSF_ADD_RES_FOOTER1_R	3150
	SetJamram(XXXX,0x8C61D0);  // TMRSF_RTT_EN_1B	3151
	SetJamram(XXXX,0x8C61F0);  // TMRSF_WCK_BIAS_VREF_UP1_1B	3152
	SetJamram(XXXX,0x8C6131);  // TMRSF_DQ_TOGGLE_BLOCK_R	3153
	SetJamram(XXXX,0x8C6151);  // TMRSF_SYNC_C2C_DUTY_UP1_1B	3154
	SetJamram(XXXX,0x8C6171);  // TMRSF_PD_DUTY_DN_DQS_T_1B	3155
	SetJamram(XXXX,0x8C6191);  // TMRSF_RD_DCA_OFFSET_B1_L_PHASE0<1>	3156
	SetJamram(XXXX,0x8C61B1);  // TMRSF_VPWR_WCK_X8_BYTE_CTRL_R	3157
	SetJamram(XXXX,0x8C61F1);  // TMRSF_SAFF_ANTI_2_1B	3158
	SetJamram(XXXX,0x807110);  // TMRSF_IO_AIVC_DC_CUR_UP3_1B	3159
	SetJamram(XXXX,0x807130);  // TMRSF_WR_C2C_PREAMP_DUTY_UP_1B	3160
	SetJamram(XXXX,0x807150);  // TMRSF_IO_AIVC_WR_ENB_2N_ON_1B	3161
	SetJamram(XXXX,0x807170);  // TMRSF_CURRENT_UP14_R	3162
	////SetJamram(XXXX,0x807190);  // TMRSF_CURRENT_UP11_R	3163
	SetJamram(XXXX,0x8071B0);  // TMRSF_S3_T28	3164
//	////SetJamram(XXXX,0x8071D0);  // TMRSF_PREAMP_BIAS2_UP	3165
	SetJamram(XXXX,0x8071F0);  // TMRSF_TIMER_DELAY_UP	3166
	SetJamram(XXXX,0x807111);  // TMRSF_PPSTBY_PW_X1	3167
	SetJamram(XXXX,0x807131);  // TMRSF_VPPPUMP_ON_8_11	3168
	SetJamram(XXXX,0x807151);  // TMRSF_VBBFREQ_CODE1	3169
	SetJamram(XXXX,0x807171);  // TMRSF_PPIBSTBY_PW_X1	3170
	SetJamram(XXXX,0x807191);  // TMRSF_HIGH_VDD_TEST_VGNLA2	3171
	SetJamram(XXXX,0x8071B1);  // TMRSF_VGNLA2STBY_PW_X4	3172
	SetJamram(XXXX,0x8071D1);  // TMRSF_VGNLAMP_HOFF	3173
	SetJamram(XXXX,0x8071F1);  // TMRSF_VGNLAMP_ON_3_9	3174
	SetJamram(XXXX,0x847110);  // TMRSF_VREFA2_IDD2_DN1_DIF	3175
	SetJamram(XXXX,0x847130);  // TMRSF_VPP2FREQ_DN2	3176
	SetJamram(XXXX,0x847150);  // TMRSF_OC_CTRL_VGNLA2_ON	3177
	SetJamram(XXXX,0x847170);  // TMRSF_VGNLA2_TSPTC_ON	3178
	SetJamram(XXXX,0x847190);  // TMRSF_VBB3_UP1	3179
	SetJamram(XXXX,0x8471B0);  // TMRSF_VBB_UP2	3180
	SetJamram(XXXX,0x8471D0);  // TMRSF_VBB_NTC_MRS5	3181
	SetJamram(XXXX,0x8471F0);  // TMRSF_VBB_NTC_MRS2	3182
	SetJamram(XXXX,0x847111);  // TMRSF_VBB2_DN3	3183
	SetJamram(XXXX,0x847131);  // TMRSF_VBB2_NTC_MRS5	3184
	SetJamram(XXXX,0x847151);  // TMRSF_IBB2UP	3185
	SetJamram(XXXX,0x847171);  // TMRSF_VBB2_UP1	3186
	SetJamram(XXXX,0x847191);  // TMRSF_VPP2_DN1	3187
	SetJamram(XXXX,0x8471B1);  // TMRSF_VPP_IDN	3188
	SetJamram(XXXX,0x8471D1);  // TMRSF_VPP_ACT_FUSE_ON	3189
	SetJamram(XXXX,0x8471F1);  // TMRSF_DETPUP	3190
	SetJamram(XXXX,0x887110);  // TMRSF_PRE_RESETB	3191
	SetJamram(XXXX,0x887130);  // TMRSF_CMOSBUF_4800_ON_M	3192
	SetJamram(XXXX,0x887150);  // TMRSF_VRO_BLOCK_DISABLE_CA	3193
	SetJamram(XXXX,0x887170);  // TMRSF_DRFM_ON	3194
	SetJamram(XXXX,0x887190);  // TMRSF_FRP_BG0_1B_P1	3195
	SetJamram(XXXX,0x8871B0);  // TMRSF_RDREP_PAD_ON_1B_P1	3196
	SetJamram(XXXX,0x8871D0);  // TMRSF_LP5X_DUTY_DN	3197
	SetJamram(XXXX,0x8871F0);  // TMRSF_ADD_RES_FOOTER0_CA	3198
	SetJamram(XXXX,0x887111);  // TMRSF_VREFCA_AMPON	3199
	SetJamram(XXXX,0x887131);  // TMRSF_FREF_RATIO_SEL4	3200
	SetJamram(XXXX,0x887151);  // TMRSF_CACAL_AMP_OFF	3201
	SetJamram(XXXX,0x887171);  // TMRSF_AIVCLP_HALF_CTRL	3202
	SetJamram(XXXX,0x887191);  // TMRSF_WWIOPR_DIS	3203
	SetJamram(XXXX,0x8871B1);  // TMRSF_PCLKF_M2	3204
	SetJamram(XXXX,0x8871D1);  // TMRSF_VREF_AMP_DN2_CA	3205
	SetJamram(XXXX,0x8871F1);  // TMRSF_RST_TYPE_CHANGE	3206
	SetJamram(XXXX,0x8C7110);  // TMRSF_PCA_G2_REPLICA	3207
	SetJamram(XXXX,0x8C7150);  // TMRSF_CA_PRESUB_ON	3208
	SetJamram(XXXX,0x8C7170);  // TMRSF_RCSL_DIS_DLY_S_G3_P2	3209
	SetJamram(XXXX,0x8C7190);  // TMRSF_FRP_BG0_0B_P1	3210
	SetJamram(XXXX,0x8C71B0);  // TMRSF_ANTI_JEDEC_CMD	3211
	SetJamram(XXXX,0x8C71D0);  // TMRSF_WW_IOPR_MAST_M1_G2	3212
	SetJamram(XXXX,0x8C71F0);  // TMRSF_RCSL_DIS_DLY_S_G3_M1	3213
	SetJamram(XXXX,0x8C7111);  // TMRSF_RCSL_DIS_DLY_F_G2_P2	3214
	SetJamram(XXXX,0x8C7131);  // TMRSF_PCLKF_P1	3215
	SetJamram(XXXX,0x8C7151);  // TMRSF_RCSLE_EXT_OFF	3216
	SetJamram(XXXX,0x8C7171);  // TMRSF_RCSL_DIS_DLY_S_G2_M1	3217
	SetJamram(XXXX,0x8C7191);  // TMRSF_PWR_WRFFBLOCK_DIS	3218
	SetJamram(XXXX,0x8C71B1);  // TMRSF_PDINCDM_RE	3219
	SetJamram(XXXX,0x8C71D1);  // TMRSF_VREFCS_UP2	3220
	SetJamram(XXXX,0x8C71F1);  // TMRSF_PCLKF_CA_P1	3221
	SetJamram(XXXX,0x808110);  // TMRS_VREFABSN_UP2	3222
	SetJamram(XXXX,0x808130);  // TMRS_RO_THIN_4_R	3223
	SetJamram(XXXX,0x808150);  // TMRS_VREFISO_DIS	3224
	SetJamram(XXXX,0x808170);  // TMRSF_RD_DCA_OFFSET_B1_R_PHASE90<0>	3225
	SetJamram(XXXX,0x808190);  // TMRSF_VREFISO_NTC_SEL	3226
	SetJamram(XXXX,0x8081B0);  // TMRSF_VREFISO_NTC_ON	3227
	SetJamram(XXXX,0x8081D0);  // TMRS_VBSP_MRS3	3228
	SetJamram(XXXX,0x8081F0);  // TMRSF_IVC_6400_ON_R	3229
	SetJamram(XXXX,0x808111);  // TMRS_PMOC_ITEM_SEL4	3230
	SetJamram(XXXX,0x808131);  // TMRS_PMOC_ITEM_SEL5	3231
	SetJamram(XXXX,0x808151);  // TMRSF_S5_UP	3232
	SetJamram(XXXX,0x808171);  // TMRSF_VBP_ACT_ONLY	3233
	SetJamram(XXXX,0x808191);  // TMRSF_VPP2_CLAMPDIS_3	3234
	SetJamram(XXXX,0x8081B1);  // TMRSF_CMOSBUF_PCURRENT1_DN0_1B	3235
	SetJamram(XXXX,0x8081D1);  // TMRSF_VREFX_IDD2_UP_R	3236
	SetJamram(XXXX,0x8081F1);  // TMRSF_SIVCABSP_RBB_EN_R	3237
	SetJamram(XXXX,0x848110);  // TMRSF_S3_DN	3238
	SetJamram(XXXX,0x848130);  // TMRSF_VREFBB2_NTC_MRS1	3239
	SetJamram(XXXX,0x848150);  // TMRSF_S2_UP	3240
	SetJamram(XXXX,0x848170);  // TMRSF_OC_CLK_DLY_UP_B1	3241
	SetJamram(XXXX,0x848190);  // TMRS_HITE0_R	3242
	SetJamram(XXXX,0x8481B0);  // TMRSF_VREFBB2_HYBRID_NTC_LIN	3243
	SetJamram(XXXX,0x8481D0);  // TMRSF_VREFBB2_HYBRID_NTC_31	3244
	SetJamram(XXXX,0x8481F0);  // TMRSF_VBB2_SELF_UP3_R	3245
	SetJamram(XXXX,0x848111);  // TMRSF_VBPFREQ_DN2	3246
	SetJamram(XXXX,0x848131);  // TMRSF_2ND_FUSING_VBSN	3247
	SetJamram(XXXX,0x848151);  // TMRS_VBN_OSC_EN	3248
	SetJamram(XXXX,0x848171);  // TMRSF_VBN_HALF	3249
	SetJamram(XXXX,0x848191);  // TMRSF_VPP_NTC_DN3	3250
	SetJamram(XXXX,0x8481B1);  // TMRSF_DS_EN_DC1	3251
	SetJamram(XXXX,0x8481D1);  // TMRSF_AIVCX_SRC_DN_IOSA_PRE	3252
	SetJamram(XXXX,0x8481F1);  // TMRS_VREF_IO_DIS	3253
	SetJamram(XXXX,0x888130);  // TMRSF_PU_CONT_SIGN_DMI1	3254
	SetJamram(XXXX,0x888150);  // TMRSF_PCLKWC_M1_1B	3255
	SetJamram(XXXX,0x888170);  // TMRSF_DCM_BIAS3_R	3256
	SetJamram(XXXX,0x888190);  // TMRSF_DCM_CAP2_R	3257
	SetJamram(XXXX,0x8881B0);  // TMRSF_VREFDQ_TRIM3_R	3258
	SetJamram(XXXX,0x8881D0);  // TMRSF_PD_CONT_SIGN_DQ<8>	3259
	SetJamram(XXXX,0x8881F0);  // TMRSF_IOL_DN_R	3260
	SetJamram(XXXX,0x888111);  // TMRSF_BIAS_WCK_RON_DN_R	3261
	SetJamram(XXXX,0x888131);  // TMRSF_PWY_SAMPLE1_WCK4_DN_1B	3262
	SetJamram(XXXX,0x888191);  // TMRSF_VREFWCK_DIS_R	3263
	SetJamram(XXXX,0x8881B1);  // TMRSF_CMOSBUF_5333_ON_R	3264
	SetJamram(XXXX,0x8881D1);  // TMRSF_PCLKWC_1B_PULSE_M1	3265
	SetJamram(XXXX,0x8881F1);  // TMRSF_PCLKWC_1B_PULSE_P2	3266
	SetJamram(XXXX,0x8C8110);  // TMRSF_BIAS_WCK_MON_EN_1B	3267
	SetJamram(XXXX,0x8C8130);  // TMRSF_DCC_2_1B	3268
	SetJamram(XXXX,0x8C8150);  // TMRSF_WRX_WL_1B	3269
	SetJamram(XXXX,0x8C8170);  // TMRSF_CMOSBUF_RL_UP_R	3270
	SetJamram(XXXX,0x8C8190);  // TMRSF_COLD0_SHIFT_1B<0>	3271
// 	//////SetJamram(XXXX,0x8C81B0);  // TMRSF_PDL_M1_1B_DM	3272
	SetJamram(XXXX,0x8C81D0);  // TMRSF_PCLKWC2_P1_1B	3273
	SetJamram(XXXX,0x8C81F0);  // TMRSF_WCK_BIAS_VREF_DN1_1B	3274
	SetJamram(XXXX,0x8C8111);  // TMRSF_VREFWCK_CURRENT_SW3_R	3275
	SetJamram(XXXX,0x8C8131);  // TMRS_DM1_FIX_R	3276
	SetJamram(XXXX,0x8C8151);  // TMRSF_LF_DUTY_DN1_1B	3277
	SetJamram(XXXX,0x8C8171);  // TMRSF_LF_DUTY_UP0_1B	3278
	SetJamram(XXXX,0x8C8191);  // TMRSF_RD_DCA_OFFSET_B1_L_PHASE270<0>	3279
	SetJamram(XXXX,0x8C81B1);  // TMRSF_OCOSC_SPEED_DN_R	3280
	SetJamram(XXXX,0x8C81D1);  // TMRS_PCLKWC_WRDRV_FF2LATCH_R	3281
// 	//////SetJamram(XXXX,0x8C81F1);  // TMRSF_FRPD_DQ_X16_M1_1B	3282
	SetJamram(XXXX,0x809110);  // TMRSF_WR_TMMT_B1_L_270	3283
	SetJamram(XXXX,0x809130);  // TMRSF_IO_AIVC_DC_CUR_UP1_1B	3284
	SetJamram(XXXX,0x809150);  // TMRSF_IVC_PWR_OFF_1B	3285
	SetJamram(XXXX,0x809170);  // TMRSF_CURRENT_DIV0_R	3286
	SetJamram(XXXX,0x809190);  // TMRSF_MR4_SUB_X6_X4	3287
	SetJamram(XXXX,0x8091B0);  // TMRSF_S1_DN	3288
	SetJamram(XXXX,0x8091D0);  // TMRSF_PREAMP_BIAS2_DN	3289
	SetJamram(XXXX,0x8091F0);  // TMRSF_TIMER_CMOS_O_DELAY_DOWN	3290
	SetJamram(XXXX,0x809111);  // TMRSF_VPPFREQ_UP	3291
	SetJamram(XXXX,0x809131);  // TMRSF_PPMP_QOFF	3292
	SetJamram(XXXX,0x809151);  // TMRSF_VBB2OSC2	3293
	SetJamram(XXXX,0x809171);  // TMRSF_VBB_X8_ON	3294
	SetJamram(XXXX,0x809191);  // TMRSF_PPIBMP_QOFF	3295
	SetJamram(XXXX,0x8091B1);  // TMRSF_VGNLAMP_ON_6_12	3296
	SetJamram(XXXX,0x8091D1);  // TMRSF_VGNLA2MP_ON_8_11	3297
	SetJamram(XXXX,0x8091F1);  // TMRSF_VGNLADRV_ACT_ONLY	3298
	SetJamram(XXXX,0x849110);  // TMRSF_VREFA2_IDD2_UP1_DIF	3299
	SetJamram(XXXX,0x849130);  // TMRSF_HIGH_VDD_TEST_VPP2	3300
	SetJamram(XXXX,0x849150);  // TMRSF_VBB2_PTC_LINEAR_ON	3301
	SetJamram(XXXX,0x849170);  // TMRSF_PTC_VGNLA_UP	3302
	SetJamram(XXXX,0x849190);  // TMRSF_VBB3FREQ_CODE0	3303
	SetJamram(XXXX,0x8491B0);  // TMRSF_VBB3_UP2	3304
	SetJamram(XXXX,0x8491D0);  // TMRSF_VBB_SELF_UP3	3305
	SetJamram(XXXX,0x8491F0);  // TMRSF_VBB_NTC_MRS6	3306
	SetJamram(XXXX,0x849111);  // TMRSF_VBB_PTC_LINEAR_ON	3307
	SetJamram(XXXX,0x849131);  // TMRSF_VBB2_UP2	3308
	SetJamram(XXXX,0x849151);  // TMRSF_VBB2_NTC_ON	3309
	SetJamram(XXXX,0x849171);  // TMRSF_VBB2_NTC_MRS3	3310
	SetJamram(XXXX,0x849191);  // TMRSF_VGNLA2_PTCTONTC	3311
	SetJamram(XXXX,0x8491B1);  // TMRSF_VBB_PUMP_OPT_ON1	3312
	SetJamram(XXXX,0x8491D1);  // TMRSF_CURRENT_UP13_R	3313
	SetJamram(XXXX,0x8491F1);  // TMRSF_VPP_ACT_TRIM2	3314
	SetJamram(XXXX,0x889150);  // TMRSF_RD_C2C_PREAMP_DUTY_UP2_1B	3315
	SetJamram(XXXX,0x889170);  // TMRSF_FRP_BG3_1B_M1	3316
	SetJamram(XXXX,0x889190);  // TMRSF_DINA_1ST_WCK_90_UP_1B	3317
	SetJamram(XXXX,0x8891B0);  // TMRSF_FRP_BG1_1B_M1	3318
	SetJamram(XXXX,0x8891F0);  // TMRSF_CMOSBUF_5333_ON_1B	3319
	SetJamram(XXXX,0x889111);  // TMRSF_PD_DUTY_DN_1B	3320
	SetJamram(XXXX,0x889131);  // TMRSF_VREFCA_TRIM3	3321
	SetJamram(XXXX,0x889151);  // TMRSF_VREFCA_OFF	3322
	SetJamram(XXXX,0x889171);  // TMRSF_FRP_DIS_DLY_F_G1_M1	3323
	SetJamram(XXXX,0x889191);  // TMRSF_SCR_OSC_P1	3324
	SetJamram(XXXX,0x8891B1);  // TMRSF_SCR_OSC_M1	3325
	SetJamram(XXXX,0x8891D1);  // TMRSF_X4_NF_4_10_OPT1	3326
	SetJamram(XXXX,0x8891F1);  // TMRSF_SRPD_VDD2L_EN	3327
	SetJamram(XXXX,0x8C9110);  // TMRSF_TCKE_WAP_FIFO_DONCARE	3328
	SetJamram(XXXX,0x8C9130);  // TMRSF_RDREP_PAD_ON_M1	3329
	SetJamram(XXXX,0x8C9150);  // TMRSF_CA_BUF_PCURRENT_DN1	3330
	SetJamram(XXXX,0x8C9170);  // TMRSF_CA_BUF_CURRENT_UP1	3331
	SetJamram(XXXX,0x8C9190);  // TMRSF_CA_BUF_PCURRENT_UP2	3332
	SetJamram(XXXX,0x8C91B0);  // TMRSF_CLK_ANTI_2	3333
	SetJamram(XXXX,0x8C91D0);  // TMRSF_RCSLEN_DLY_M2	3334
	SetJamram(XXXX,0x8C91F0);  // TMRSF_RCSL_DIS_DLY_S_G1_M1	3335
	SetJamram(XXXX,0x8C9111);  // TMRSF_C2C_RSHORT_OFF_1B	3336
	SetJamram(XXXX,0x8C9131);  // TMRSF_RCSLEN_DLY_S_G0_P2	3337
	SetJamram(XXXX,0x8C9151);  // TMRSF_RL_CTRL_APEN	3338
	SetJamram(XXXX,0x8C9171);  // TMRSF_CHIPDIS	3339
	SetJamram(XXXX,0x8C9191);  // TMRSF_ABR_ILLEGAL_BLOCK_OFF	3340
	SetJamram(XXXX,0x8C91B1);  // TMRSF_RCSL_DIS_DLY_F_G0_M1	3341
	SetJamram(XXXX,0x8C91D1);  // TMRSF_PCSF_CLK_ON	3342
	SetJamram(XXXX,0x8C91F1);  // TMRSF_NBTI_FORCE	3343
	SetJamram(XXXX,0x80A110);  // TMRS_VREFABSN_UP1	3344
	SetJamram(XXXX,0x80A130);  // TMRS_VBBTOVSS_R	3345
	SetJamram(XXXX,0x80A150);  // TMRS_VREFISO_DN3	3346
	SetJamram(XXXX,0x80A170);  // TMRSF_RD_DCA_OFFSET_B1_R_PHASE90<1>	3347
	SetJamram(XXXX,0x80A190);  // TMRSF_VBP_NTC_UP3	3348
	SetJamram(XXXX,0x80A1B0);  // TMRS_VBSP_MON	3349
	SetJamram(XXXX,0x80A1D0);  // TMRS_VBSP_MRS2	3350
	SetJamram(XXXX,0x80A1F0);  // TMRSF_SIVCY_IUP_R	3351
	SetJamram(XXXX,0x80A111);  // TMRS_PMOC_ITEM_SEL3	3352
	SetJamram(XXXX,0x80A131);  // TMRS_PMOC_ITEM_SEL6	3353
	SetJamram(XXXX,0x80A151);  // TMRSF_S5_DN	3354
	SetJamram(XXXX,0x80A171);  // TMRSF_PVPPAKDIS_5	3355
	SetJamram(XXXX,0x80A191);  // TMRSF_PVPP2AKDIS_R	3356
	SetJamram(XXXX,0x80A1B1);  // TMRSF_PVPPAKDIS_0_R	3357
	SetJamram(XXXX,0x80A1D1);  // TMRSF_VBSP_ACT_ONLY	3358
	SetJamram(XXXX,0x80A1F1);  // TMRSF_SIVCABSP_FBB_EN_R	3359
	SetJamram(XXXX,0x84A110);  // TMRSF_ABB_VNB_DIS	3360
	SetJamram(XXXX,0x84A130);  // TMRSF_VREFBB2_NTC_MRS2	3361
	SetJamram(XXXX,0x84A150);  // TMRSF_SELF_VBB2VSS_CLAMP	3362
	SetJamram(XXXX,0x84A170);  // TMRS_IDD2P_PMOS_R	3363
	SetJamram(XXXX,0x84A190);  // TMRSF_S2_MID	3364
	SetJamram(XXXX,0x84A1B0);  // TMRSF_VREFBB2_HYBRID_NTC_NONLIN	3365
	SetJamram(XXXX,0x84A1D0);  // TMRSF_VREFBB2_NTC_OFF	3366
	SetJamram(XXXX,0x84A1F0);  // TMRSF_VREFBB2_DIS_R	3367
	SetJamram(XXXX,0x84A111);  // TMRSF_VBN_QUARTER	3368
	SetJamram(XXXX,0x84A131);  // TMRSF_VREF_REG_UP2	3369
	SetJamram(XXXX,0x84A151);  // TMRS_VBSN_OSC_EN	3370
	SetJamram(XXXX,0x84A171);  // TMRSF_VBNDET_DIS2	3371
	SetJamram(XXXX,0x84A191);  // TMRSF_VGNLA2_PUMP_OPT_ON1	3372
	SetJamram(XXXX,0x84A1B1);  // TMRSF_VPPIB_PUMP_OPT_ON1	3373
	SetJamram(XXXX,0x84A1D1);  // TMRSF_AIVCA_SENSING_CURRENT_DOWN_IOSA_PRE	3374
	SetJamram(XXXX,0x84A1F1);  // TMRSF_VREFBSG_PTC_OFF	3375
	SetJamram(XXXX,0x88A110);  // TMRSF_DCC_POLA_CHG_1B	3376
	SetJamram(XXXX,0x88A130);  // TMRSF_PU_CONT_C1_DQ<8>	3377
	SetJamram(XXXX,0x88A150);  // TMRSF_DCC_MRS_DISABLE_1B	3378
	SetJamram(XXXX,0x88A170);  // TMRSF_DCM_BIAS1_R	3379
	SetJamram(XXXX,0x88A190);  // TMRSF_PD_RSET_ON_RR	3380
	SetJamram(XXXX,0x88A1B0);  // TMRSF_DCM_CAP1_R	3381
	SetJamram(XXXX,0x88A1D0);  // TMRSF_VREF_AMP_DN1_DQ_1B	3382
	SetJamram(XXXX,0x88A1F0);  // TMRSF_WRTR_PSFRG_UP_1B	3383
	SetJamram(XXXX,0x88A111);  // TMRSF_BIAS_WCK_RON_UP_R	3384
	SetJamram(XXXX,0x88A131);  // TMRSF_CLKDQ_BLOCKING_OFF_1B	3385
	SetJamram(XXXX,0x88A151);  // TMRSF_WCLKDQ_DIV_1B_DFLT_EN	3386
	SetJamram(XXXX,0x88A191);  // TMRSF_VREFWCK_OFFSET0_R	3387
	SetJamram(XXXX,0x88A1D1);  // _M_TMRSF_SET64_MRS_R_12OUT51	3388
	SetJamram(XXXX,0x88A1F1);  // TMRSF_CML_SEL_R	3389
	SetJamram(XXXX,0x8CA110);  // TMRSF_DCC_0_1B	3390
	SetJamram(XXXX,0x8CA130);  // TMRSF_WCK4_PHASE_DET_WCK_UP_R	3391
	SetJamram(XXXX,0x8CA150);  // TMRSF_COLD25_SHIFT_1B<2>	3392
	SetJamram(XXXX,0x8CA170);  // TMRSF_HOT85_SHIFT_1B<2>	3393
	SetJamram(XXXX,0x8CA190);  // TMRSF_HOT48_SHIFT_1B<0>	3394
	SetJamram(XXXX,0x8CA1B0);  // TMRSF_WDBI_REPLICA_DLY_M2_R	3395
	SetJamram(XXXX,0x8CA1D0);  // TMRSF_PCLKWC2_M1_1B	3396
	SetJamram(XXXX,0x8CA1F0);  // TMRSF_WCK_BIAS_VREF_DN3_1B	3397
	SetJamram(XXXX,0x8CA131);  // TMRSF_PN_TERM_1B	3398
	SetJamram(XXXX,0x8CA151);  // TMRSF_LF_DUTY_UP1_1B	3399
	SetJamram(XXXX,0x8CA171);  // TMRSF_PU_DUTY_DN_DQS_C_1B	3400
	SetJamram(XXXX,0x8CA191);  // TMRSF_RD_DCA_OFFSET_B1_L_PHASE270<1>	3401
	SetJamram(XXXX,0x8CA1B1);  // TMRSF_DCM_LF_OSC_X2_DIS_B1	3402
	SetJamram(XXXX,0x8CA1D1);  // TMRSF_PREEMP_ON_STEP2_R	3403
// 	//////SetJamram(XXXX,0x8CA1F1);  // TMRSF_FRPD_DQ_X16_P1_1B	3404
	SetJamram(XXXX,0x80B110);  // TMRSF_WR_TMMT_B1_L_180	3405
	SetJamram(XXXX,0x80B130);  // TMRSF_IO_AIVC_DC_CUR_UP2_1B	3406
	////SetJamram(XXXX,0x80B150);  // TMRSF_WR_C2C_PREAMP0_CUR_UP_1B	3407
	////SetJamram(XXXX,0x80B170);  // TMRSF_PCURRENT_BUF1_R	3408
	SetJamram(XXXX,0x80B190);  // TMRSF_REVERSE_BIAS_WEAK_EN_1B	3409
	SetJamram(XXXX,0x80B1B0);  // TMRSF_VBB2_UP4	3410
	SetJamram(XXXX,0x80B1D0);  // TMRSF_PREAMP_BIAS1_R_DEF_OFF	3411
	SetJamram(XXXX,0x80B1F0);  // TMRSF_TIMER_O_DELAY_DOWN	3412
	SetJamram(XXXX,0x80B111);  // TMRSF_VPPFREQ_DN	3413
	SetJamram(XXXX,0x80B131);  // TMRSF_PPSTBY_PW_X4	3414
	SetJamram(XXXX,0x80B151);  // TMRSF_VBB2OSC1	3415
	SetJamram(XXXX,0x80B171);  // TMRSF_VBB_X12_ON	3416
	SetJamram(XXXX,0x80B191);  // TMRSF_VPPIBMP_EN	3417
	SetJamram(XXXX,0x80B1B1);  // TMRSF_VGNLA2MP_HOFF	3418
	SetJamram(XXXX,0x80B1D1);  // TMRSF_VGNLA2STBY_PW_X1	3419
	SetJamram(XXXX,0x80B1F1);  // TMRSF_VGNLAFREQ_UP	3420
	SetJamram(XXXX,0x84B110);  // TMRSF_VREFA2_UP1	3421
	SetJamram(XXXX,0x84B130);  // TMRSF_VPP2PUMP_ON_3_9	3422
	SetJamram(XXXX,0x84B150);  // TMRSF_VBB2_PTC_LINEAR_ON_CT_DEFAULT	3423
	SetJamram(XXXX,0x84B170);  // TMRSF_PTC_VGNLA_DN	3424
	SetJamram(XXXX,0x84B190);  // TMRSF_VBB3FREQ_CODE1	3425
	SetJamram(XXXX,0x84B1B0);  // TMRSF_PVBB3DIS	3426
	SetJamram(XXXX,0x84B1D0);  // TMRSF_VBB_UP3	3427
	SetJamram(XXXX,0x84B1F0);  // TMRSF_VBB_NTC_MRS3	3428
	SetJamram(XXXX,0x84B111);  // TMRSF_VBB_PTC_ON	3429
	SetJamram(XXXX,0x84B131);  // TMRSF_VBB2_DN1	3430
	SetJamram(XXXX,0x84B151);  // TMRSF_VBB2_HYBRID_NTC_LIN_47	3431
	SetJamram(XXXX,0x84B171);  // TMRSF_VBB2_NTC_OFF_PSELF	3432
	SetJamram(XXXX,0x84B191);  // TMRSF_PVPP2DIS	3433
	SetJamram(XXXX,0x84B1B1);  // TMRSF_PPIB_NTC_DN2	3434
	SetJamram(XXXX,0x84B1D1);  // TMRSF_DS_BUF_CURRENT_UP3_R	3435
	SetJamram(XXXX,0x84B1F1);  // TMRSF_VPP_ACT_TRIM1	3436
	SetJamram(XXXX,0x88B110);  // TMRSF_LATCH_CLOSE_UP	3437
	SetJamram(XXXX,0x88B130);  // TMRSF_TIMER_CNT_DELAY_DOWN	3438
	SetJamram(XXXX,0x88B150);  // TMRSF_CMOSBUF_5818_ON_M	3439
	SetJamram(XXXX,0x88B170);  // TMRSF_FRP_BG3_1B_P1	3440
	SetJamram(XXXX,0x88B190);  // TMRSF_FRP_BG2_1B_P1	3441
	SetJamram(XXXX,0x88B1B0);  // TMRSF_RD_C2C_PREAMP0_CUR_UP_1B	3442
// 	//////SetJamram(XXXX,0x88B1D0);  // TMRSF_RDBI_AC_FREQ_CTRL2	3443
	////SetJamram(XXXX,0x88B1F0);  // TMRSF_EQL_EN_1B	3444
	SetJamram(XXXX,0x88B111);  // TMRSF_PD_DUTY_UP_1B	3445
	SetJamram(XXXX,0x88B131);  // TMRSF_VREFCA_TRIM2	3446
	SetJamram(XXXX,0x88B151);  // TMRSF_FLAG_CLK_P1	3447
	////SetJamram(XXXX,0x88B171);  // TMRSF_FRP_DIS_DLY_F_G1_P2	3448
	SetJamram(XXXX,0x88B191);  // TMRSF_NTODT_ON_DQ_DQS_EQ	3449
	SetJamram(XXXX,0x88B1B1);  // TMRSF_LANG2_OFF	3450
	SetJamram(XXXX,0x88B1D1);  // TMRSF_X4_NF_MR4_MODE_ON	3451
	SetJamram(XXXX,0x88B1F1);  // TMRSF_DSM_VDD2L_EN	3452
	SetJamram(XXXX,0x8CB110);  // TMRSF_IOL_DN2_CA	3453
	SetJamram(XXXX,0x8CB130);  // TMRSF_RDREP_PAD_ON_P1	3454
	SetJamram(XXXX,0x8CB150);  // TMRSF_TCA3	3455
	SetJamram(XXXX,0x8CB170);  // TMRSF_TCMD1	3456
	SetJamram(XXXX,0x8CB190);  // TMRSF_MBT_FRA_EN	3457
	SetJamram(XXXX,0x8CB1B0);  // TMRSF_CLK_ANTI_1	3458
	SetJamram(XXXX,0x8CB1D0);  // TMRSF_WW_IOPR_MAST_P1_G0	3459
	SetJamram(XXXX,0x8CB1F0);  // TMRSF_AP_EN_OFF	3460
	SetJamram(XXXX,0x8CB111);  // TMRSF_RCSL_DIS_DLY_S_G1_P2	3461
	SetJamram(XXXX,0x8CB131);  // TMRSF_RCSLEN_DLY_F_G3_P2	3462
	SetJamram(XXXX,0x8CB151);  // TMRSF_FREF_10_TO_2_RATIO	3463
	SetJamram(XXXX,0x8CB171);  // TMRSF_PW123_EN	3464
	SetJamram(XXXX,0x8CB191);  // TMRSF_RCSL_DIS_DLY_F_G1_M1	3465
	SetJamram(XXXX,0x8CB1B1);  // TMRSF_RCSLEN_MWR_DLY_P1	3466
	SetJamram(XXXX,0x8CB1D1);  // TMRSF_WR_OFF	3467
	SetJamram(XXXX,0x8CB1F1);  // TMRSF_MODE_RESET	3468
	SetJamram(XXXX,0x80C110);  // TMRS_VREFABSN_DN2	3469
	SetJamram(XXXX,0x80C130);  // TMRS_HITE0_VPG	3470
	SetJamram(XXXX,0x80C150);  // TMRS_VREFISO_DN2	3471
	SetJamram(XXXX,0x80C170);  // TMRSF_RD_DCA_OFFSET_B1_R_PHASE0<0>	3472
	SetJamram(XXXX,0x80C190);  // TMRSF_VBP_NTC_UP2	3473
	SetJamram(XXXX,0x80C1B0);  // TMRSF_2ND_FUSING_VBSP	3474
	SetJamram(XXXX,0x80C1D0);  // TMRS_VBSP_MRS1	3475
	SetJamram(XXXX,0x80C1F0);  // TMRSF_AIVCA_EDGE_CURRENT_DN_R	3476
	SetJamram(XXXX,0x80C111);  // TMRS_PMOC_ITEM_SEL2	3477
	SetJamram(XXXX,0x80C131);  // TMRS_PMOC_ITEM_SEL7	3478
	SetJamram(XXXX,0x80C151);  // TMRSF_MAIVCA_HDRVOFF_IN_R	3479
	SetJamram(XXXX,0x80C171);  // TMRSF_PVPPAKDIS_6	3480
	SetJamram(XXXX,0x80C191);  // TMRSF_VPP2_O123_WIDTH_CTRL1_R_Z4	3481
	SetJamram(XXXX,0x80C1B1);  // TMRSF_CMOSBUF_PCURRENT1_UP1_1B	3482
	SetJamram(XXXX,0x80C1D1);  // TMRSF_VBB3_PUMP_OPT_ON1	3483
	SetJamram(XXXX,0x80C1F1);  // TMRSF_SIVCABSP_PSELF_RBB_EN_R	3484
	SetJamram(XXXX,0x84C110);  // TMRSF_SIVCABN_PSELF_RBB_EN_R	3485
	SetJamram(XXXX,0x84C150);  // TMRSF_VBB2VSS_CLAMP1	3486
	SetJamram(XXXX,0x84C170);  // TMRSF_SIVCBB2_IDN_R	3487
	SetJamram(XXXX,0x84C190);  // TMRSF_VLSA_SRC_UP	3488
	SetJamram(XXXX,0x84C1B0);  // TMRSF_VREFBB2_HYBRID_NTC_LIN_47	3489
	SetJamram(XXXX,0x84C1D0);  // TMRSF_VREFBB2_NTC_MRS3	3490
	SetJamram(XXXX,0x84C1F0);  // TMRSF_DS_BUF_CURRENT_UP4_R	3491
	SetJamram(XXXX,0x84C111);  // TMRSF_VBP_ON_8_11	3492
	SetJamram(XXXX,0x84C131);  // TMRSF_VBNFREQ_CODE1	3493
	SetJamram(XXXX,0x84C151);  // TMRSF_VREF_REG_UP1	3494
	SetJamram(XXXX,0x84C171);  // TMRSF_VREFX_IDD2_ORG_DIF_R	3495
	SetJamram(XXXX,0x84C191);  // TMRSF_VGNLA_PUMP_OPT_ON1	3496
	SetJamram(XXXX,0x84C1B1);  // TMRSF_VBB2DIS	3497
	SetJamram(XXXX,0x84C1D1);  // TMRSF_DSM_OFF	3498
	SetJamram(XXXX,0x84C1F1);  // TMRSF_SIVCISO_IUP_R	3499
	SetJamram(XXXX,0x88C110);  // TMRSF_DCA_RESOLUTION_DN_1B	3500
	SetJamram(XXXX,0x88C130);  // TMRSF_PU_CONT_C2_DQ<8>	3501
	SetJamram(XXXX,0x88C150);  // TMRSF_VREFCAPD_U2_R	3502
	SetJamram(XXXX,0x88C170);  // TMRSF_DCM_BIAS4_R	3503
	SetJamram(XXXX,0x88C190);  // TMRSF_DINA_WCK_BLOCK_DIS_R	3504
// 	//////SetJamram(XXXX,0x88C1B0);  // TMRSF_PDL_M1_1B	3505
	SetJamram(XXXX,0x88C1D0);  // TMRSF_VREF_AMP_DN2_DQ_1B	3506
	SetJamram(XXXX,0x88C1F0);  // TMRSF_IOL_DN2_R	3507
	SetJamram(XXXX,0x88C111);  // TMRSF_VREFWCK_TRIM3_R	3508
	SetJamram(XXXX,0x88C191);  // TMRSF_VREFWCK_OFFSET1_R	3509
	SetJamram(XXXX,0x88C1D1);  // TMRSF_CMOSBUF_3733_ON_R	3510
	SetJamram(XXXX,0x88C1F1);  // TMRSF_PN_3200_R	3511
	SetJamram(XXXX,0x8CC110);  // TMRSF_WCK4_TO_DQ_DELAY_UP_1B	3512
	SetJamram(XXXX,0x8CC130);  // TMRSF_HSCI_PATH_CONT_R	3513
	SetJamram(XXXX,0x8CC150);  // TMRSF_WBCA_WBG_P1_1B	3514
	SetJamram(XXXX,0x8CC170);  // TMRSF_HOT85_SHIFT_1B<1>	3515
	SetJamram(XXXX,0x8CC190);  // TMRSF_HOT48_SHIFT_1B<2>	3516
	SetJamram(XXXX,0x8CC1B0);  // TMRSF_WDBI_REPLICA_DLY_P_R	3517
// 	//////SetJamram(XXXX,0x8CC1D0);  // TMRSF_PDL_M2_1B_DM	3518
	SetJamram(XXXX,0x8CC1F0);  // TMRSF_WCK_BIAS_CAL_DIS_B1	3519
	SetJamram(XXXX,0x8CC111);  // TMRSF_WDBI_AC_OFF_3733_1B	3520
	SetJamram(XXXX,0x8CC131);  // TMRS_DM0_FIX_R	3521
	SetJamram(XXXX,0x8CC151);  // TMRSF_EQL_EN_DQS_BYTE1	3522
	SetJamram(XXXX,0x8CC171);  // TMRSF_PU_DUTY_UP_DQS_C_1B	3523
	SetJamram(XXXX,0x8CC191);  // TMRSF_RD_DCA_OFFSET_B1_L_PHASE180<0>	3524
	SetJamram(XXXX,0x8CC1B1);  // TMRSF_DCM_OSC_X2_B1	3525
	SetJamram(XXXX,0x8CC1D1);  // TMRSF_AUTO_OCCAL_EN_R	3526
	SetJamram(XXXX,0x8CC1F1);  // TMRSF_PCLKWC5_EN_R	3527
	SetJamram(XXXX,0x80D110);  // TMRSF_WR_TMMT_B1_L_90	3528
	SetJamram(XXXX,0x80D130);  // TMRSF_IO_AIVC_I_33PER_DOWN_1B	3529
	////SetJamram(XXXX,0x80D150);  // TMRSF_WR_C2C_PREAMP_CUR_UP1_1B	3530
	SetJamram(XXXX,0x80D170);  // TMRSF_PREAMP_BUF_CURRENT_DN8_1B	3531
	SetJamram(XXXX,0x80D190);  // TMRSF_IVC_REVERSE_DIS_1B	3532
	SetJamram(XXXX,0x80D1B0);  // TMRSF_VBB2PUMP_DIS_AFTERFUSE	3533
	SetJamram(XXXX,0x80D1D0);  // TMRSF_PREAMP_BIAS1_R_UP	3534
	SetJamram(XXXX,0x80D1F0);  // TMRSF_TIMER_CMOS_DELAY_DOWN	3535
	SetJamram(XXXX,0x80D111);  // TMRSF_VPPMP_EN	3536
	SetJamram(XXXX,0x80D131);  // TMRSF_PPMP_HOFF_R	3537
	SetJamram(XXXX,0x80D151);  // TMRSF_VBB2_X12_ON	3538
	SetJamram(XXXX,0x80D171);  // TMRSF_VPPIBPUMP_ON_8_11	3539
	SetJamram(XXXX,0x80D191);  // TMRSF_VPPIBFREQ_DN	3540
	SetJamram(XXXX,0x80D1B1);  // TMRSF_VGNLA2MP_QOFF	3541
	SetJamram(XXXX,0x80D1D1);  // TMRSF_VGNLA2FREQ_DN	3542
	SetJamram(XXXX,0x80D1F1);  // TMRSF_VGNLAFREQ_DN	3543
	SetJamram(XXXX,0x84D110);  // TMRSF_VREFA2_IDD2_UP	3544
	SetJamram(XXXX,0x84D130);  // TMRSF_VPP2PUMP_ON_6_12	3545
	SetJamram(XXXX,0x84D150);  // TMRSF_VBB_PTC_LINEAR_ON_CT_DEF	3546
	SetJamram(XXXX,0x84D170);  // TMRSF_VGNLA_TSPTC_ON	3547
	SetJamram(XXXX,0x84D190);  // TMRSF_VBB3_X12_ONB	3548
	SetJamram(XXXX,0x84D1B0);  // TMRSF_VBB3_UP3	3549
	SetJamram(XXXX,0x84D1D0);  // TMRSF_VBB_DN3	3550
	SetJamram(XXXX,0x84D1F0);  // TMRSF_VBB_HYBRID_NTC_LIN	3551
	SetJamram(XXXX,0x84D111);  // TMRSF_VBB_HYBRID_NTC_NONLIN_47	3552
	SetJamram(XXXX,0x84D131);  // TMRSF_VBB2_DN2	3553
	SetJamram(XXXX,0x84D151);  // TMRSF_VBB2_HYBRID_NTC_31	3554
	SetJamram(XXXX,0x84D171);  // TMRSF_VBB2_NTC_MRS1	3555
	SetJamram(XXXX,0x84D191);  // TMRSF_VPP2_DZ0	3556
	SetJamram(XXXX,0x84D1B1);  // TMRSF_PPIB_NTC_DN1	3557
	SetJamram(XXXX,0x84D1D1);  // TMRSF_VPP_ACT_DN3	3558
	SetJamram(XXXX,0x84D1F1);  // TMRSF_VPP_ACT_TRIM0	3559
	SetJamram(XXXX,0x88D110);  // TMRSF_LATCH_CLOSE_DN	3560
	SetJamram(XXXX,0x88D150);  // TMRSF_PN_3200_0B	3561
	SetJamram(XXXX,0x88D170);  // TMRSF_DINA_1ST_WCK_270_DN_1B	3562
	SetJamram(XXXX,0x88D190);  // TMRSF_CML_SEL_0B	3563
	SetJamram(XXXX,0x88D1D0);  // TMRSF_RDREP_PAD_ON_1B_M1	3564
	SetJamram(XXXX,0x88D1F0);  // TMRSF_ADD_RES_HEADER1_CA	3565
	SetJamram(XXXX,0x88D111);  // TMRSF_ONE_TMMT_EN_MST	3566
	SetJamram(XXXX,0x88D131);  // TMRSF_VREFCA_DN	3567
	SetJamram(XXXX,0x88D151);  // TMRSF_FRP_DIS_DLY_F_G2_M1	3568
	SetJamram(XXXX,0x88D171);  // TMRSF_FRP_DIS_DLY_F_G0_M1	3569
	SetJamram(XXXX,0x88D191);  // TMRSF_WCSLE_DIS_P1	3570
	SetJamram(XXXX,0x88D1B1);  // TMRSF_PCLKF_P2	3571
	SetJamram(XXXX,0x88D1D1);  // TMRSF_RCAI_DLY_UP	3572
	SetJamram(XXXX,0x88D1F1);  // TMRSF_NTODT_DQ_EARLY_EN	3573
	SetJamram(XXXX,0x8CD110);  // TMRSF_DDRMUX_PG_ON_1B	3574
	SetJamram(XXXX,0x8CD130);  // TMRSF_RDAP_RDL_OFF	3575
	SetJamram(XXXX,0x8CD150);  // TMRSF_TCA4	3576
	SetJamram(XXXX,0x8CD170);  // TMRSF_TCMD3	3577
	SetJamram(XXXX,0x8CD190);  // TMRSF_TCMD2	3578
	SetJamram(XXXX,0x8CD1B0);  // TMRSF_WW_IOPR_MAST_M1_G0	3579
	SetJamram(XXXX,0x8CD1D0);  // TMRSF_WW_IOPR_MAST_M1_G1	3580
	SetJamram(XXXX,0x8CD1F0);  // TMRSF_WW_IOPR_MAST_M1_G3	3581
	SetJamram(XXXX,0x8CD111);  // TMRSF_RCSLDIS_MWR_DLY_P2	3582
	SetJamram(XXXX,0x8CD131);  // TMRSF_RCSLEN_DLY_F_G2_P2	3583
	SetJamram(XXXX,0x8CD151);  // TMRSF_ARFM_ON	3584
	SetJamram(XXXX,0x8CD171);  // TMRSF_RTRAIN_GATING_GOBACK	3585
	//////SetJamram(XXXX,0x8CD191);  // TMRSF_RCSL_DIS_DLY_F_G1_P2	3586
	SetJamram(XXXX,0x8CD1B1);  // TMRSF_RCSLEN_DLY_S_G3_M1	3587
	SetJamram(XXXX,0x8CD1D1);  // TMRSF_PCSF_CMDFS_CLK_ON	3588
	SetJamram(XXXX,0x8CD1F1);  // TMRSF_ECCEN_DIS_CG	3589
	SetJamram(XXXX,0x80E110);  // TMRS_VREFABSN_DN1	3590
	SetJamram(XXXX,0x80E130);  // TMRS_VREFPG_DIS	3591
	SetJamram(XXXX,0x80E150);  // TMRS_VREFISO_DN1	3592
	SetJamram(XXXX,0x80E170);  // TMRSF_RD_DCA_OFFSET_B1_R_PHASE0<1>	3593
	SetJamram(XXXX,0x80E190);  // TMRSF_VBP_NTC_UP1	3594
	SetJamram(XXXX,0x80E1B0);  // TMRS_NOTFUSING_VBSP	3595
	SetJamram(XXXX,0x80E1D0);  // TMRS_VBSP_MRS0	3596
	SetJamram(XXXX,0x80E1F0);  // TMRSF_SIVCY_DIS_R	3597
	SetJamram(XXXX,0x80E111);  // TMRS_PMOC_ITEM_SEL1	3598
	SetJamram(XXXX,0x80E131);  // TMRSF_TOFFSETD_FLAG1<1>	3599
	SetJamram(XXXX,0x80E151);  // TMRSF_AIVCA_FB_STBY_ON_IN_R	3600
	SetJamram(XXXX,0x80E171);  // TMRSF_SIVC_IDN_R	3601
	SetJamram(XXXX,0x80E191);  // TMRSF_VPP2_O123_WIDTH_CTRL0_R_Z4	3602
	SetJamram(XXXX,0x80E1B1);  // TMRSF_DS_MODE_DIS_R	3603
	SetJamram(XXXX,0x80E1D1);  // TMRSF_DS_MODE_IUP_R	3604
	SetJamram(XXXX,0x80E1F1);  // TMRSF_SIVCABSP_DSM_RBB_EN_R	3605
	SetJamram(XXXX,0x84E110);  // TMRSF_SIVCABN_DSM_RBB_EN_R	3606
	SetJamram(XXXX,0x84E130);  // TMRSF_S3_UP	3607
	SetJamram(XXXX,0x84E150);  // TMRSF_VBB2VSS_CLAMP0	3608
	SetJamram(XXXX,0x84E170);  // TMRSF_SIVCBB2_IUP_R	3609
	SetJamram(XXXX,0x84E190);  // TMRSF_VBPFREQ_DN1	3610
	SetJamram(XXXX,0x84E1B0);  // TMRSF_VREFBB2_HYBRID_NTC_NONLIN_47	3611
	SetJamram(XXXX,0x84E1D0);  // TMRSF_VREFABSN_DIS	3612
	////SetJamram(XXXX,0x84E1F0);  // TMRSF_DS_BUF_CURRENT_UP2_R	3613
	SetJamram(XXXX,0x84E111);  // TMRSF_SELF_IDD2P	3614
	SetJamram(XXXX,0x84E131);  // TMRSF_VBN_NTC_UP1	3615
	SetJamram(XXXX,0x84E151);  // TMRSF_VREF_REG_DN2	3616
	SetJamram(XXXX,0x84E171);  // TMRSF_VREF_REG_DN1	3617
	SetJamram(XXXX,0x84E191);  // TMRSF_VPP_NTC_DN2	3618
	SetJamram(XXXX,0x84E1B1);  // TMRSF_DS_EN_DC0	3619
	SetJamram(XXXX,0x84E1D1);  // TMRSF_MAIVCA_HDRVOFF	3620
	SetJamram(XXXX,0x84E1F1);  // TMRSF_PVPPAKDIS_4	3621
	SetJamram(XXXX,0x88E130);  // TMRSF_IVC_RLCTRL_OFF_DINA_1B	3622
	SetJamram(XXXX,0x88E150);  // TMRSF_VREF_SEWCK_EN_R	3623
	SetJamram(XXXX,0x88E170);  // TMRSF_DCM_BIAS2_R	3624
	SetJamram(XXXX,0x88E190);  // TMRSF_VREFCAPD_U1_R	3625
	SetJamram(XXXX,0x88E1B0);  // TMRSF_VREFDQ_TRIM2_R	3626
	SetJamram(XXXX,0x88E1D0);  // TMRSF_VREF_AMP_UP2_DQ_1B	3627
	SetJamram(XXXX,0x88E1F0);  // TMRSF_PCLKWC4_WD_DC_NO_CUT_R	3628
	SetJamram(XXXX,0x88E111);  // TMRSF_ORD_UP_1B	3629
	SetJamram(XXXX,0x88E131);  // TMRSF_PWY_SAMPLE2_WCK4_DN_1B	3630
	SetJamram(XXXX,0x88E151);  // TMRSF_PREAMP_BUF_CM_DN3_1B	3631
	SetJamram(XXXX,0x88E171);  // TMRSF_RD_WCK_CCL_OFF_R	3632
	SetJamram(XXXX,0x88E191);  // TMRSF_VREFWCK_REPLICA_EN_R	3633
	SetJamram(XXXX,0x88E1B1);  // TMRSF_VREFWCK_OFFSET2_R	3634
	SetJamram(XXXX,0x88E1D1);  // TMRSF_WCK_BLOCKING_OFF_1B	3635
	SetJamram(XXXX,0x88E1F1);  // _M_TMRSF_SET64_MRS_R_12OUT70	3636
	SetJamram(XXXX,0x8CE110);  // TMRSF_WCK2CK_SYNC_WCK_DN_1B	3637
	SetJamram(XXXX,0x8CE130);  // TMRSF_CMOSBUF_RL_ON_R	3638
	SetJamram(XXXX,0x8CE150);  // TMRSF_WBCA_WBG_M1_1B	3639
	SetJamram(XXXX,0x8CE170);  // TMRSF_HOT85_SHIFT_1B<0>	3640
	SetJamram(XXXX,0x8CE190);  // TMRSF_HOT48_SHIFT_1B<1>	3641
	SetJamram(XXXX,0x8CE1B0);  // TMRSF_WDBI_REPLICA_DLY_M_R	3642
// 	//////SetJamram(XXXX,0x8CE1D0);  // TMRSF_PDL_M2_1B	3643
	SetJamram(XXXX,0x8CE1F0);  // TMRSF_WCK_BIAS_VREF_UP0_1B	3644
	SetJamram(XXXX,0x8CE111);  // TMRSF_VREFWCK_TRIM5_R	3645
	SetJamram(XXXX,0x8CE131);  // TMRSF_DCM_FLIP_POLARITY_REVERSE_1B	3646
	SetJamram(XXXX,0x8CE151);  // TMRSF_PREEMP_PD_R	3647
	SetJamram(XXXX,0x8CE171);  // TMRSF_PD_DUTY_UP_DQS_T_1B	3648
	SetJamram(XXXX,0x8CE191);  // TMRSF_RD_DCA_OFFSET_B1_L_PHASE180<1>	3649
	SetJamram(XXXX,0x8CE1B1);  // TMRSF_TOFFSETD_FLAG2<1>	3650
	SetJamram(XXXX,0x8CE1D1);  // TMRSF_PREEMP_ON_STEP1_R	3651
	SetJamram(XXXX,0x8CE1F1);  // TMRSF_FRPD_DQ_X16_M2_1B	3652
	SetJamram(XXXX,0x80F110);  // TMRSF_WR_TMMT_B1_L_0	3653
	SetJamram(XXXX,0x80F130);  // TMRSF_IO_AIVC_I_66PER_DOWN_1B	3654
	SetJamram(XXXX,0x80F150);  // TMRSF_WR_C2C_PREAMP_DUTY_DN_1B	3655
	SetJamram(XXXX,0x80F170);  // TMRSF_PREAMP_BUF_CURRENT_DN7_1B	3656
	////SetJamram(XXXX,0x80F190);  // TMRSF_CURRENT_UP12_R	3657
	SetJamram(XXXX,0x80F1B0);  // TMRSF_FIFO8_ENB_R	3658
	SetJamram(XXXX,0x80F1D0);  // TMRSF_PREAMP_BIAS1_R_DN	3659
	SetJamram(XXXX,0x80F1F0);  // TMRSF_TIMER_DELAY_DOWN	3660
	SetJamram(XXXX,0x80F111);  // TMRSF_VPPPUMP_ON_3_9	3661
	SetJamram(XXXX,0x80F131);  // TMRSF_VPPPUMP_ON_6_12	3662
	SetJamram(XXXX,0x80F151);  // TMRSF_VBB2_QUARTER_KICK	3663
	SetJamram(XXXX,0x80F171);  // TMRSF_VPPIBPUMP_ON_6_12	3664
	SetJamram(XXXX,0x80F191);  // TMRSF_VPPIBFREQ_UP	3665
// 	SetJamram(XXXX,0x80F1B1);  // TMRSF_VGNLA2FREQ_UP	3666
	SetJamram(XXXX,0x80F1D1);  // TMRSF_VGNLA2MP_ON_3_9	3667
	SetJamram(XXXX,0x80F1F1);  // TMRSF_HIGH_VDD_TEST_VGNLA	3668
	SetJamram(XXXX,0x84F110);  // TMRSF_VREFA2_UP2	3669
	SetJamram(XXXX,0x84F130);  // TMRSF_VPP2PUMP_ON_8_11	3670
	SetJamram(XXXX,0x84F150);  // TMRSF_VGNLA2FREQ_DN2	3671
	SetJamram(XXXX,0x84F170);  // TMRSF_VGNLA2_IDN	3672
	SetJamram(XXXX,0x84F190);  // TMRSF_VBB3_X8_ON	3673
	SetJamram(XXXX,0x84F1B0);  // TMRSF_VBB3_IDN	3674
	SetJamram(XXXX,0x84F1D0);  // TMRSF_VBB_DN1	3675
	SetJamram(XXXX,0x84F1F0);  // TMRSF_VBB_NTC_OFF	3676
	SetJamram(XXXX,0x84F111);  // TMRSF_VBB_HYBRID_NTC_31	3677
	SetJamram(XXXX,0x84F131);  // TMRSF_SR_VBB2VSS_R	3678
	SetJamram(XXXX,0x84F151);  // TMRSF_VBB2_NTC_OFF	3679
	SetJamram(XXXX,0x84F171);  // TMRSF_VBB2_SELF_UP2	3680
	SetJamram(XXXX,0x84F191);  // TMRSF_VPP2_DZ1	3681
	SetJamram(XXXX,0x84F1B1);  // TMRSF_VPPMP_DB_EN	3682
	SetJamram(XXXX,0x84F1D1);  // TMRSF_VPP_ACT_DN2	3683
	SetJamram(XXXX,0x84F1F1);  // TMRSF_VPP_ACT_TRIM3	3684
	SetJamram(XXXX,0x88F110);  // TMRSF_TIMEROFF	3685
	SetJamram(XXXX,0x88F170);  // TMRSF_TOFFSETD_FLAG2<0>	3686
	SetJamram(XXXX,0x88F190);  // TMRSF_TCA4_CLK	3687
	SetJamram(XXXX,0x88F1D0);  // TMRSF_LP5X_GEAR_EN	3688
	SetJamram(XXXX,0x88F1F0);  // TMRSF_ADD_RES_FOOTER1_CA	3689
	SetJamram(XXXX,0x88F111);  // TMRSF_FLAG_CLK_M1	3690
	SetJamram(XXXX,0x88F151);  // TMRSF_FRP_DIS_DLY_F_G2_P2	3691
	////SetJamram(XXXX,0x88F171);  // TMRSF_FRP_DIS_DLY_F_G0_P2	3692
	SetJamram(XXXX,0x88F191);  // TMRSF_WCSLE_EN_P2	3693
	SetJamram(XXXX,0x88F1B1);  // TMRSF_LANG2_ACT	3694
	SetJamram(XXXX,0x88F1D1);  // TMRSF_NOR_0P25X_REF	3695
	SetJamram(XXXX,0x88F1F1);  // TMRSF_PVCCH_CDEC	3696
	SetJamram(XXXX,0x8CF110);  // TMRSF_DDRMUX_PG_2N_ON_1B	3697
	SetJamram(XXXX,0x8CF130);  // TMRSF_MPC_PCKE_CONTROL	3698
	SetJamram(XXXX,0x8CF150);  // TMRSF_TIMER_CTRL_STARTRST	3699
	SetJamram(XXXX,0x8CF170);  // TMRSF_CA_ANTI_0	3700
	SetJamram(XXXX,0x8CF190);  // TMRSF_GEAR_DISABLE	3701
	SetJamram(XXXX,0x8CF1B0);  // TMRSF_PGOFF_ALL	3702
	SetJamram(XXXX,0x8CF1D0);  // TMRSF_WW_IOPR_MAST_P1_G1	3703
	SetJamram(XXXX,0x8CF1F0);  // TMRSF_WW_IOPR_MAST_P1_G2	3704
	SetJamram(XXXX,0x8CF111);  // TMRSF_RCSLEN_DLY_F_G0_P2	3705
	SetJamram(XXXX,0x8CF131);  // TMRSF_RCSLEN_DLY_F_G1_P2	3706
	SetJamram(XXXX,0x8CF151);  // TMRSF_WR_LECC_POISON_EN	3707
	SetJamram(XXXX,0x8CF191);  // TMRSF_ALWAYSON_APEN	3708
	SetJamram(XXXX,0x8CF1B1);  // TMRSF_NTODT_DQS_EARLY_EN	3709
	SetJamram(XXXX,0x8CF1D1);  // TMRS_CDATA_OFF	3710
	SetJamram(XXXX,0x8CF1F1);  // TMRSF_LP5X_DUTY_UP	3711
	}
#endif

#if 1
	{
   	SetJamram(XXXX,0x241010);  // TMRSF_TDC_NTC_OFF	3728
   	SetJamram(XXXX,0x241030);  // TMRSF_S1_SRR	3729
   	SetJamram(XXXX,0x241050);  // TMRSF_S3_SRR	3730
   	SetJamram(XXXX,0x241070);  // TMRSF_SDN	3731
   	SetJamram(XXXX,0x241090);  // TMRSF_TOFFSET_DYN	3732
   	SetJamram(XXXX,0x2410B0);  // TMRSF_SR_DN	3733
   	SetJamram(XXXX,0x2410D0);  // TMRSF_SRS5	3734
   	SetJamram(XXXX,0x2410F0);  // TMRSF_SRS10	3735
   	SetJamram(XXXX,0x241011);  // TMRSF_SR_1VOTE	3736
   	SetJamram(XXXX,0x241031);  // TMRSF_SKIP_TCODE_OFF	3737
   	SetJamram(XXXX,0x241051);  // TMRSF_OFFSET_AOS	3738
   	SetJamram(XXXX,0x241091);  // TMRSF_MR4_SUBD_FLAG1	3739
   	SetJamram(XXXX,0x2410D1);  // TMRSF_CNT_2X	3740
   	SetJamram(XXXX,0x2410F1);  // TMRSF_SR_UP	3741
   	SetJamram(XXXX,0x281030);  // FUSE_FLAG_PPDN1_PRE	3742
   	SetJamram(XXXX,0x281050);  // FUSE_FLAG_PPUP1_PRE	3743
   	SetJamram(XXXX,0x281070);  // FUSE_FLAG_PPUD_IGNORE	3744
   	SetJamram(XXXX,0x2C1010);  // TMRSF_VANTIP_FREQ_DN	3746
   	SetJamram(XXXX,0x2C1030);  // TMRSF_VANTIP_FREQ_UP	3747
   	SetJamram(XXXX,0x2C1050);  // TMRSF_VANTIDRV_DOUBLE	3748
   	SetJamram(XXXX,0x2C1070);  // TMRSF_VANTIDRV_HALF	3749
   	SetJamram(XXXX,0x2C1090);  // TMRSF_RESTART_DIS	3750
   	SetJamram(XXXX,0x2C10B0);  // TMRSF_LEAKC	3751
   	SetJamram(XXXX,0x2C10D0);  // TMRSF_LEAK_TUNE	3752
   	SetJamram(XXXX,0x2C10F0);  // TMRSF_OSC_PHASE_M1	3753
   	SetJamram(XXXX,0x2C1011);  // TMRSF_SALEAK_TUNE0_MH	3754
   	SetJamram(XXXX,0x2C1031);  // TMRSF_AF_INIT_HALF	3755
   	SetJamram(XXXX,0x2C1051);  // TMRSF_AF_RELOAD_SPC0	3756
   	SetJamram(XXXX,0x2C1071);  // TMRSF_OSC_FREQ_DN	3757
   	SetJamram(XXXX,0x2C1091);  // TMRSF_AF_RELOAD_SPC_EN	3758
   	SetJamram(XXXX,0x2C10B1);  // TMRSF_SALEAK_TUNE2	3759
   	SetJamram(XXXX,0x2C10D1);  // TMRSF_OSC_PHASE	3760
   	SetJamram(XXXX,0x2C10F1);  // TMRSF_CODE_KEY_OFF	3761
   	SetJamram(XXXX,0x243010);  // TMRSF_TDC_NTC_OFF	3778
   	SetJamram(XXXX,0x243030);  // TMRSF_S1_SRR	3779
   	SetJamram(XXXX,0x243050);  // TMRSF_S3_SRR	3780
   	SetJamram(XXXX,0x243070);  // TMRSF_SDN	3781
   	SetJamram(XXXX,0x243090);  // TMRSF_TOFFSET_DYN	3782
   	SetJamram(XXXX,0x2430B0);  // TMRSF_SR_DN	3783
   	SetJamram(XXXX,0x2430D0);  // TMRSF_SRS5	3784
   	SetJamram(XXXX,0x2430F0);  // TMRSF_SRS10	3785
   	SetJamram(XXXX,0x243011);  // TMRSF_SR_1VOTE	3786
   	SetJamram(XXXX,0x243031);  // TMRSF_SKIP_TCODE_OFF	3787
   	SetJamram(XXXX,0x243051);  // TMRSF_OFFSET_AOS	3788
   	SetJamram(XXXX,0x243091);  // TMRSF_MR4_SUBD_FLAG1	3789
   	SetJamram(XXXX,0x2430D1);  // TMRSF_CNT_2X	3790
   	SetJamram(XXXX,0x2430F1);  // TMRSF_SR_UP	3791
   	SetJamram(XXXX,0x283030);  // FUSE_FLAG_PPDN1_PRE	3792
   	SetJamram(XXXX,0x283050);  // FUSE_FLAG_PPUP1_PRE	3793
   	SetJamram(XXXX,0x283070);  // FUSE_FLAG_PPUD_IGNORE	3794
   	SetJamram(XXXX,0x2C3010);  // TMRSF_VANTIP_FREQ_DN	3796
   	SetJamram(XXXX,0x2C3030);  // TMRSF_VANTIP_FREQ_UP	3797
   	SetJamram(XXXX,0x2C3050);  // TMRSF_VANTIDRV_DOUBLE	3798
   	SetJamram(XXXX,0x2C3070);  // TMRSF_VANTIDRV_HALF	3799
   	SetJamram(XXXX,0x2C3090);  // TMRSF_RESTART_DIS	3800
   	SetJamram(XXXX,0x2C30B0);  // TMRSF_LEAKC	3801
   	SetJamram(XXXX,0x2C30D0);  // TMRSF_LEAK_TUNE	3802
   	SetJamram(XXXX,0x2C30F0);  // TMRSF_OSC_PHASE_M1	3803
   	SetJamram(XXXX,0x2C3011);  // TMRSF_SALEAK_TUNE0_MH	3804
   	SetJamram(XXXX,0x2C3031);  // TMRSF_AF_INIT_HALF	3805
   	SetJamram(XXXX,0x2C3051);  // TMRSF_AF_RELOAD_SPC0	3806
   	SetJamram(XXXX,0x2C3071);  // TMRSF_OSC_FREQ_DN	3807
   	SetJamram(XXXX,0x2C3091);  // TMRSF_AF_RELOAD_SPC_EN	3808
   	SetJamram(XXXX,0x2C30B1);  // TMRSF_SALEAK_TUNE2	3809
   	SetJamram(XXXX,0x2C30D1);  // TMRSF_OSC_PHASE	3810
   	SetJamram(XXXX,0x2C30F1);  // TMRSF_CODE_KEY_OFF	3811
   	SetJamram(XXXX,0x245010);  // TMRSF_HT_SLOPE	3828
   	SetJamram(XXXX,0x245030);  // TMRSF_SUP	3829
   	SetJamram(XXXX,0x245050);  // TMRSF_TOFFSET_1	3830
   	SetJamram(XXXX,0x245070);  // TMRSF_TOFFSET_0	3831
   	SetJamram(XXXX,0x245090);  // TMRSF_HALF_PTENB	3832
   	SetJamram(XXXX,0x2450B0);  // TMRSF_TOFFSET_2	3833
   	SetJamram(XXXX,0x2450D0);  // TMRSF_SKIP_TCODE1	3834
   	SetJamram(XXXX,0x2450F0);  // TMRSF_SKIP_TCODE2	3835
   	SetJamram(XXXX,0x2450F1);  // TMRSF_TEMP_TRACK_ON	3843
   	SetJamram(XXXX,0x285050);  // FUSE_FLAG_PPDN2_PRE	3844
   	SetJamram(XXXX,0x285070);  // FUSE_FLAG_PPUP2_PRE	3845
   	SetJamram(XXXX,0x2C5010);  // RUP_SIG_FUSE	3846
   	SetJamram(XXXX,0x2C5030);  // TMRSF_SREF_SHIFT_DOWN0	3847
   	SetJamram(XXXX,0x2C5050);  // TMRSF_SREF_SHIFT_DOWN1	3848
   	SetJamram(XXXX,0x2C5070);  // TMRSF_OSC_FREQ_UP	3849
   	SetJamram(XXXX,0x2C5090);  // TMRSF_SREF_SEL0	3850
   	SetJamram(XXXX,0x2C50B0);  // TMRSF_SREF_SEL1	3851
   	SetJamram(XXXX,0x2C50D0);  // TMRSF_SREF_SEL2	3852
   	SetJamram(XXXX,0x2C50F0);  // TMRSF_SREF_SEL3	3853
   	SetJamram(XXXX,0x2C5011);  // TMRSF_AF_SAVALID_UP1	3854
   	SetJamram(XXXX,0x2C5031);  // TMRSF_AF_SAVALID_UP2	3855
   	SetJamram(XXXX,0x2C5051);  // TMRSF_SALEAK_TUNE_RES	3856
   	SetJamram(XXXX,0x2C5071);  // TMRSF_SALEAK_TUNE4_MH	3857
   	SetJamram(XXXX,0x2C5091);  // TMRSF_SALEAK_TUNE3_MH	3858
   	SetJamram(XXXX,0x2C50B1);  // TMRSF_SALEAK_TUNE1	3859
   	SetJamram(XXXX,0x2C50D1);  // TMRSF_LEAKC_SEL1	3860
   	SetJamram(XXXX,0x2C50F1);  // TMRSF_LEAKC_SEL0	3861
   	SetJamram(XXXX,0x247010);  // TMRSF_HT_SLOPE	3878
   	SetJamram(XXXX,0x247030);  // TMRSF_SUP	3879
   	SetJamram(XXXX,0x247050);  // TMRSF_TOFFSET_1	3880
   	SetJamram(XXXX,0x247070);  // TMRSF_TOFFSET_0	3881
   	SetJamram(XXXX,0x247090);  // TMRSF_HALF_PTENB	3882
   	SetJamram(XXXX,0x2470B0);  // TMRSF_TOFFSET_2	3883
   	SetJamram(XXXX,0x2470D0);  // TMRSF_SKIP_TCODE1	3884
   	SetJamram(XXXX,0x2470F0);  // TMRSF_SKIP_TCODE2	3885
   	SetJamram(XXXX,0x2470F1);  // TMRSF_TEMP_TRACK_ON	3893
   	SetJamram(XXXX,0x287050);  // FUSE_FLAG_PPDN2_PRE	3894
   	SetJamram(XXXX,0x287070);  // FUSE_FLAG_PPUP2_PRE	3895
   	SetJamram(XXXX,0x2C7010);  // RUP_SIG_FUSE	3896
   	SetJamram(XXXX,0x2C7030);  // TMRSF_SREF_SHIFT_DOWN0	3897
   	SetJamram(XXXX,0x2C7050);  // TMRSF_SREF_SHIFT_DOWN1	3898
   	SetJamram(XXXX,0x2C7070);  // TMRSF_OSC_FREQ_UP	3899
   	SetJamram(XXXX,0x2C7090);  // TMRSF_SREF_SEL0	3900
   	SetJamram(XXXX,0x2C70B0);  // TMRSF_SREF_SEL1	3901
   	SetJamram(XXXX,0x2C70D0);  // TMRSF_SREF_SEL2	3902
   	SetJamram(XXXX,0x2C70F0);  // TMRSF_SREF_SEL3	3903
   	SetJamram(XXXX,0x2C7011);  // TMRSF_AF_SAVALID_UP1	3904
   	SetJamram(XXXX,0x2C7031);  // TMRSF_AF_SAVALID_UP2	3905
   	SetJamram(XXXX,0x2C7051);  // TMRSF_SALEAK_TUNE_RES	3906
   	SetJamram(XXXX,0x2C7071);  // TMRSF_SALEAK_TUNE4_MH	3907
   	SetJamram(XXXX,0x2C7091);  // TMRSF_SALEAK_TUNE3_MH	3908
   	SetJamram(XXXX,0x2C70B1);  // TMRSF_SALEAK_TUNE1	3909
   	SetJamram(XXXX,0x2C70D1);  // TMRSF_LEAKC_SEL1	3910
   	SetJamram(XXXX,0x2C70F1);  // TMRSF_LEAKC_SEL0	3911
   	SetJamram(XXXX,0x4C1070);  // FUSE_FLAG_NTC_BLOCK_OFF	3912
   	SetJamram(XXXX,0x4C3070);  // FUSE_FLAG_NTC_BLOCK_OFF	3913

//	SetJamram(XXXX,0x245011);  // TMRSF_TS_FREQ1	3836
//	SetJamram(XXXX,0x245031);  // TMRSF_TS_FREQ2	3837
//	SetJamram(XXXX,0x245051);  // TMRSF_TS_FREQ0	3838
//	SetJamram(XXXX,0x245071);  // TMRSF_TS_FREQ3	3839
//	SetJamram(XXXX,0x245091);  // TMRSF_TS_FREQ4	3840
//	SetJamram(XXXX,0x2450B1);  // TMRSF_TS_FREQ5	3841
//	SetJamram(XXXX,0x2450D1);  // TMRSF_TS_FREQ6	3842

//	SetJamram(XXXX,0x247011);  // TMRSF_TS_FREQ1	3886
//	SetJamram(XXXX,0x247031);  // TMRSF_TS_FREQ2	3887
//	SetJamram(XXXX,0x247051);  // TMRSF_TS_FREQ0	3888
//	SetJamram(XXXX,0x247071);  // TMRSF_TS_FREQ3	3889
//	SetJamram(XXXX,0x247091);  // TMRSF_TS_FREQ4	3890
//	SetJamram(XXXX,0x2470B1);  // TMRSF_TS_FREQ5	3891
//	SetJamram(XXXX,0x2470D1);  // TMRSF_TS_FREQ6	3892

	}
#endif

//3921~4000
//#if 1
//		{
//	}
//#endif



#if 1
	{
		SetJamram(OOOO,0x64F011)	// FUSE_DESC="SIG0     C    OK                   "; RCCMRD(1);  
		SetJamram(XXXX,0x64D011)	// FUSE_DESC="SIG0          OK                   "; RCCMRD(1);  
		SetJamram(XXXX,0x64B011)	// FUSE_DESC="SIG0          OK                   "; RCCMRD(1);  
		SetJamram(OOOO,0x645011)	// FUSE_DESC="SIG0     C    OK                   "; RCCMRD(1);  
		SetJamram(OOOO,0x647011)	// FUSE_DESC="SIG0     C    OK                   "; RCCMRD(1);  
		SetJamram(XXXX,0x649011)	// FUSE_DESC="SIG0          OK                   "; RCCMRD(1);  
		SetJamram(XXXX,0x643011)	// FUSE_DESC="SIG1                               "; RCCMRD(1);
		SetJamram(OOOO,0x641011)	// FUSE_DESC="SIG1     C                         "; RCCMRD(1);
		SetJamram(OOOO,0x64F031)	// FUSE_DESC="SIG1     C                         "; RCCMRD(1);
		SetJamram(XXXX,0x64D031)	// FUSE_DESC="SIG1                               "; RCCMRD(1);
		SetJamram(XXXX,0x64B031)	// FUSE_DESC="SIG1                               "; RCCMRD(1);

	}
#endif

	//output("<h1>JamramPtr/2=%d,  JamramPtr=%d</h1>", (int)(JamramPtr / 2), JamramPtr); 
	//JamramPtr/2=435,  JamramPtr=870

	count(9, 1);
	count(10, (int)(JamramPtr/2)-1);


	@}
%               JSR(POWERUP)						Ca(CYP8_DD_)	
%				JSR(SAFETYDDR_TOF)			  		Ca(CYP8_DD_)
%               JSR(D_LOCK)             			Ca(CYP8_DD_)

				//;  JSR DSPBTRANK       I  CYP8  
//%               JSR(D_DSPBTCS1)             		Ca(CYP8_DD_)	//20191118

//%               JSR(D_DSPBT1A)             		Ca(CYP8_DD_)	//20191118
//%			    JSR(D_PHASE1)                      Ca(CYP8_DD_)													SCROFF//;TMRS_PSDR(1021)
//%               JSR(D_DSPBT_CS1)             		Ca(CYP8_DD_)	//20191118

                IDXI8(0x17FE)  		 
%               JSR(D_AFDQX1)             			Ca(CYP8_DD_)
%               JSR(D_PGMVRFY)            			Ca(CYP8_DD_)
%               JSR(D_AFDQPAD)            			Ca(CYP8_DD_)
%               JSR(D_ANTIRUP)            			Ca(CYP8_DD_)
%               STI(8,0x17FE)             			Ca(CYP8_DD_)
%               IDXI(8, BranchSelf)  				Ca(CYP8_DD_)
%				JSR(D_PSDR)							Ca(CYP8_DD_)	SetJamramPtr0
%               JSR(RCCMRT)               			Ca(CYP8_DD_)	SetJamramToDmain
%               STPS								Ca(CYP8_DD_)

//; ------------------------------------------------------------------------
//; **********				A / B / C / D BANK                   **********
//; ------------------------------------------------------------------------
#if 1
%RCCMRT:			                        XYCLD  Ca(CYP8_DD_)			INIT
%			STI(8,0x1FE)					XYCLD  Ca(CYP8_DD_)
%			IDXI(8, BranchSelf)				XYCLD  Ca(CYP8_DD_)
%											XYCLD  Ca(CYP8_DD_)			/*SetAux(XC_, D1_)*/					 //TPAauxD(_TP,_TPH,HoldDr)//TP<TPH   SetTP?
%											XYCLD  Ca(CYP8_DD_)			/*SetAux(YC_, D2_)*/                 	  						//TP2<TPH2
%											XYCLD  Ca(CYP8_DD_)                                                
%										    XYCLD  Ca(AACT_DD_)													//SCROFF//;  5 x0
%		    STI(8,0xA)						XYCLD  Ca(CYP8_DD_)													/*TPAauxD(_TP, 42, HoldDr)*/
%			IDXI(8, BranchSelf)				XYCLD  Ca(CYP8_DD_)				
%					                        XYCLD  Ca(CYP8_DD_)		 
%					                        XYCLD  Cax(CYP8_DD_) //bspark ????

%X8_Label:		NOP_                        XYCLD  Ca_WR(AWR1_DD_)			/*TPAauxD(_TP, 19, HoldDr)*/	X8_		SCROFF//;  1 x8	CYP1	<X8,X9>,<X10,X11>,<X4,X5>,<X6,X7>,<X0,X1>,<X2,X3> 		
%				NOP_                        XYCLD  Ca_WR(CYP2_DD_)			/*TPAauxD(_TP, 21, HoldDr)*/	X10_	SCROFF//;  2 x10		19,20   21,22	   15,16   17,18   11,12   13,14
%		        NOP_                        XYCLD  Ca_WR(AWR3_DD_)			/*TPAauxD(_TP, 15, HoldDr)*/	X4_		SCROFF//;  3 x4	
%				NOP_                        XYCLD  Ca_WR(CYP4_DD_)			/*TPAauxD(_TP, 17, HoldDr)*/	X6_		SCROFF//;  4 x6	
%		        NOP_                        XYCLD  Ca_WR(AWR5_DD_)			/*TPAauxD(_TP, 11, HoldDr)*/	X0_		SCROFF//;  5 x0	
%				NOP_                        XYCLD  Ca_WR(CYP6_DD_)			/*TPAauxD(_TP, 13, HoldDr)*/	X2_		SCROFF//;  6 x2			
%Y8_Label:		NOP_						XYCLD  Ca_WR(AWR11_DD_)			/*TPAauxD(_TP, 31, HoldDr)*/	Y8_		SCROFF//;  7 y8	CYP11	<Y8,Y9>,<Y10,Y11>,<Y4,Y5>,<Y6,Y7>,<Y0,Y1>,<Y2,Y3>	
%		        NOP_                        XYCLD  Ca_WR(CYP12_DD_)			/*TPAauxD(_TP, 33, HoldDr)*/	Y10_	SCROFF//;  8 y10		31,32   33,34     27,28   29,30    23,24  25,26
%				NOP_                        XYCLD  Ca_WR(AWR13_DD_)			/*TPAauxD(_TP, 27, HoldDr)*/	Y4_		SCROFF//;  9 y4	
%		        NOP_                        XYCLD  Ca_WR(CYP14_DD_)			/*TPAauxD(_TP, 29, HoldDr)*/	Y6_		SCROFF//;  10 y6	
%		        NOP_                        XYCLD  Ca_WR(AWR15_DD_)			/*TPAauxD(_TP, 23, HoldDr)*/	Y0_		SCROFF//;  11 y0	
%		        NOP_                        XYCLD  Ca_WR(CYP16_DD_)			/*TPAauxD(_TP, 25, HoldDr)*/	Y2_		SCROFF//;  12 y2	
%		                                    XYCLD  Ca_WR(CYP8_DD_)			/*TPAauxD(_TP, 41, HoldDr)	*/ 
%						                    XYCLD  Ca(CYP8_DD_)	
%			IDXI(8, BranchSelf)				XYCLD  Ca(CYP8_DD_)				
%		                                    XYCLD  Ca(CYP8_DD_)             /*PEauxD(main, D5_, HoldDr)*/  	//SetTP(main,0x00)		//TPEauxD(_TP,D5_,HoldDr)//TP<D5
%		                                    XYCLD  Ca(CYP8_DD_)             /*POauxD(main, D6_, HoldDr)*/
%		                                    XYCLD  Ca(ARD_DD_)			 								//TPAauxD(_TP, D5_, HoldDr)	SCROFF//;  5 x0

%CPE_Label:		                            XYCLD  Ca_CPE(CYP8_DD_)			CPE							//DQ1 read	    
%						                    XYCLD  Ca(ARD_DD_)  										//TPAauxD(_TP, D5_, HoldDr)	SCROFF//;  5 x0
%		                                    XYCLD  Ca(CYP8_DD_)				 
%		    STI(8,0x6)						XYCLD  Ca(CYP8_DD_)				 	
%			IDXI(8, BranchSelf)				XYCLD  Ca(CYP8_DD_)				 			  		
%		        NOP_                        XYCLD  Ca(APRE_DD_)							
%			IDXI(8, BranchSelf)				XYCLD  Ca(CYP8_DD_)				
%	JNI(9,RCCMRT)							XYCLD  Ca(CYP8_DD_)				ShiftRightDmain_
%		        NOP_                        XYCLD  Ca(APRE_DD_)				IncJamramPtr
%	JNI(10,RCCMRT)							XYCLD  Ca(CYP8_DD_)				SetJamramToDmain
%               RTN                         XYCLD  Ca(CYP8_DD_)
#endif
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

#if 1
//confirmed.
%POWERUP:       NOP                         XYCLD  Ca(RESET_DD_) xSetZero(XT_)  ySetZero(YT_)						SCROFF//;
%               NOP                         XYCLD  Ca(RESET_DD_) INIT												SCROFF//;
%               STI(8,0x100)               XT YT  Ca(RESET_DD_)													SCROFF//;POWER RAMP
%				IDXI(8, BranchSelf)			XT YT  Ca(RESET_DD_)													SCROFF//;	
%               STI(8,0x9C40)              XT YT  Ca(RESET_DD_)													SCROFF//;tINIT0=1ms / 20ms(max)     
%				IDXI(8, BranchSelf)			XT YT  Ca(RESET_DD_)													SCROFF//;
%               STI(8,0x1F40)              XT YT  Ca(RESET_DD_)													SCROFF//;tINIT1=200us(min)
%				IDXI(8, BranchSelf)			XT YT  Ca(RESET_DD_)													SCROFF//;
%				STI(8,0x13880)             XT YT  Ca(CYP8_DD_)														SCROFF//;tINIT3=2ms(min),tINIT4=5tCK(min)
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)														SCROFF//;
%               NOP                         XT YT  Ca(CYP8_DD_)														SCROFF//;Exit PD
%               NOP                         XT YT  Ca(CYP8_DD_)														SCROFF//;Exit PD
%               STI(8,0x50)                XT YT  Ca(CYP8_DD_)        xSetUDAll(XT_,0x00) ySetUDAll(YT_,0x20)		SCROFF//;tINIT5=2us(min)
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)														SCROFF//;
%               NOP                         XT YT  Ca(MRW1A_DD_)													SCROFF//;MRW32 (any MRW/MRR)
%               NOP                         XT YT  Ca(MRW2A_DD_)													SCROFF//;
%				STI(8,0xE)			        XT YT  Ca(CYP8_DD_)        xSetUDAll(XT_,0x85)							SCROFF//;
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)														SCROFF//;
%               NOP                         XT YT  Ca(MPCA_DD_)														SCROFF//;MPC ZQCAL START
%				STI(8,0x28)			    XT YT  Ca(CYP8_DD_)        xSetUDAll(XT_,0x86)							SCROFF//;tZQCAL=1us(min)
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)														SCROFF//;
%               NOP                         XT YT  Ca(MPCA_DD_)														SCROFF//;MPC ZQCAL LATCH
%               STI(8,0x1E)                XT YT  Ca(CYP8_DD_)														SCROFF//;tZQLAT=max(30ns,8tCK)
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)														SCROFF//;
%               NOP                         XT YT  Ca(PDNT_DD_)														SCROFF//;tZQLAT=max(30ns,8tCK)
%               STI(8,0x1E)                XT YT  Ca(CYP8_DD_)														SCROFF//;tZQLAT=max(30ns,8tCK)
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)														SCROFF//;
%               RTN                         XT YT  Ca(CYP8_DD_)														SCROFF//;

//confirmed.
%SAFETYDDR_TOF:	STI(8,0x4)					XT YT  Ca(CYP8_DD_)       xSetUDAll(XT_,0x00)							SCROFF//;
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)       ySetUDAll(YT_,0x20)							SCROFF//;
%				NOP                         XT YT  Ca(MRW1_DD_)														SCROFF//;MRW32 (any MRW/MRR)
%               NOP                         XT YT  Ca(MRW2_DD_)														SCROFF//;
%               STI(8,0x4)                 XT YT  Ca(CYP8_DD_)														SCROFF//;
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)														SCROFF//;
%               JSR(SAFETY_TOF)             XT YT  Ca(CYP8_DD_)														SCROFF//;
//;%            JSR D_PSDR                  XT YT  Ca(CYP8_DD_)														SCROFF//;
%               RTN                         XT YT  Ca(CYP8_DD_)														SCROFF//;

//confirmed.
%SAFETY_TOF:	STI(8,0xE)					XT YT  Ca(CYP8_DD_)		xSetUDAll(XT_,0x20)							SCROFF//;
%               IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)		ySetUDAll(YT_,0x9)								SCROFF//;
%               NOP                         XT YT  Ca(MRW1_DD_)														SCROFF//;      
%               NOP                         XT YT  Ca(MRW2_DD_)														SCROFF//;
%               STI(8,0xE)                 XT YT  Ca(CYP8_DD_)														SCROFF//;
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)														SCROFF//;
%               NOP                         XT YT  Ca(MRW1_DD_)														SCROFF//;      
%               NOP                         XT YT  Ca(MRW2_DD_)														SCROFF//;
%               STI(8,0xE)                 XT YT  Ca(CYP8_DD_)														SCROFF//;
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)														SCROFF//;
%               NOP                         XT YT  Ca(MRW1_DD_)														SCROFF//;      
%               NOP                         XT YT  Ca(MRW2_DD_)														SCROFF//;
%			    STI(8,0xE)                 XT YT  Ca(CYP8_DD_)   xSetUDAll(XT_,0x7f)								SCROFF//; //20190926 ( was 0xff -> 0x7f )
%               IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)   ySetUDAll(YT_,0x09)								SCROFF//;
%               NOP                         XT YT  Ca(MRW1_DD_)														SCROFF//;      
%               NOP                         XT YT  Ca(MRW2_DD_)														SCROFF//;
%               STI(8,0xE)                 XT YT  Ca(CYP8_DD_)														SCROFF//;
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)														SCROFF//;
%               RTN                         XT YT  Ca(CYP8_DD_)														SCROFF//;


%D_LOCK:		 JSR(D_PHASE1)						Ca(CYP8_DD_)													SCROFF //;TMRD_AF_DQ_X1 2175       
%                JSR(DDRTMRS3)						Ca(CYP8_DD_)													SCROFF //; 
%                JSR(DDRTMRS9)						Ca(CYP8_DD_)													SCROFF //;     
%                JSR(DDRTMRS0)						Ca(CYP8_DD_)													SCROFF //;
%                JSR(DDRLATCH)						Ca(CYP8_DD_)													SCROFF //;
%                RTN								Ca(CYP8_DD_)													SCROFF //;


//confirmed
%D_AFDQX1:		 JSR(D_PHASE2)						Ca(CYP8_DD_)													SCROFF //;TMRD_AF_DQ_X1 2175       
%                JSR(DDRTMRS1)						Ca(CYP8_DD_)													SCROFF //; 
%                JSR(DDRTMRS7)						Ca(CYP8_DD_)													SCROFF //;     
%                JSR(DDRTMRS5)						Ca(CYP8_DD_)													SCROFF //;
%                JSR(DDRLATCH)						Ca(CYP8_DD_)													SCROFF //;
%                RTN								Ca(CYP8_DD_)													SCROFF //;

//confirmed
%D_PGMVRFY:      JSR(D_PHASE1)                      Ca(CYP8_DD_)													SCROFF //;TMRD_PGM_VRFY 1A25       
%                JSR(DDRTMRSA)						Ca(CYP8_DD_)													SCROFF //; 
%                JSR(DDRTMRS2)						Ca(CYP8_DD_)													SCROFF //;     
%                JSR(DDRTMRS5)						Ca(CYP8_DD_)													SCROFF //;
%                JSR(DDRLATCH)						Ca(CYP8_DD_)													SCROFF //;
%                RTN								Ca(CYP8_DD_)													SCROFF //;

//confirmed
%D_AFDQPAD:      JSR(D_PHASE1)                      Ca(CYP8_DD_)                                                    SCROFF //;TMRD_AF_DQPAD 1010       
%                JSR(DDRTMRS0)						Ca(CYP8_DD_)                                                    SCROFF //; 
%                JSR(DDRTMRS1)						Ca(CYP8_DD_)                                                    SCROFF //;     
%                JSR(DDRTMRS0)						Ca(CYP8_DD_)                                                    SCROFF //;
%                JSR(DDRLATCH)						Ca(CYP8_DD_)                                                    SCROFF //;
%                RTN								Ca(CYP8_DD_)													SCROFF //;

//confirmed
%D_ANTIRUP:      JSR(D_PHASE1)                      Ca(CYP8_DD_)                                                    SCROFF //;TMRD_ANTI_RUP 1034       
%                JSR(DDRTMRS0)						Ca(CYP8_DD_)                                                    SCROFF //; 
%                JSR(DDRTMRS3)						Ca(CYP8_DD_)                                                    SCROFF //;     
%                JSR(DDRTMRS4)						Ca(CYP8_DD_)                                                    SCROFF //;
%                JSR(DDRLATCH)						Ca(CYP8_DD_)                                                    SCROFF //;
%                RTN								Ca(CYP8_DD_)                                                    SCROFF //;

//confirmed
%D_PSDR:         JSR(D_PHASE1)                      Ca(CYP8_DD_)													SCROFF//;TMRS_PSDR(1021)
%                JSR(DDRTMRS0)						Ca(CYP8_DD_)													SCROFF//;      
%                JSR(DDRTMRS2)						Ca(CYP8_DD_)													SCROFF//;      
%                JSR(DDRTMRS1)						Ca(CYP8_DD_)													SCROFF//;
%                JSR(DDRTMRS)						Ca(CYP8_DD_)													SCROFF//;TMRS LATCH (LAST DDR CMD)
%                STI(8,0xE)						Ca(CYP8_DD_)													SCROFF//;
%				 IDXI(8, BranchSelf)				Ca(CYP8_DD_)													SCROFF//;
%                JSR(SDRTMRS)						Ca(CYP8_DD_)													SCROFF//;TNRS LATCH_EXIT (FIRST SDR CMD)
%                RTN								Ca(CYP8_DD_)													SCROFF//;

//confirmed
%D_PHASE1:       JSR(DDRTMRS0)                      Ca(CYP8_DD_)													SCROFF//; PHASE1 (000)
%                JSR(DDRTMRS0)						Ca(CYP8_DD_)													SCROFF//;      
%                JSR(DDRTMRS0)						Ca(CYP8_DD_)													SCROFF//;
%                JSR(DDRLATCH)						Ca(CYP8_DD_)													SCROFF//;
%                RTN								Ca(CYP8_DD_)													SCROFF//;

//confirmed
%D_PHASE2:       JSR(DDRTMRS1)						Ca(CYP8_DD_)													SCROFF//; PHASE2 (120)
%                JSR(DDRTMRS2)						Ca(CYP8_DD_)													SCROFF//;      
%                JSR(DDRTMRS0)						Ca(CYP8_DD_)													SCROFF//;
%                JSR(DDRLATCH)						Ca(CYP8_DD_)													SCROFF//;
%                RTN								Ca(CYP8_DD_)													SCROFF//; 

%D_PHASE3:       JSR(DDRTMRS3)						Ca(CYP8_DD_)													SCROFF//; PHASE3 (314)
%                JSR(DDRTMRS1)						Ca(CYP8_DD_)													SCROFF//;      
%                JSR(DDRTMRS4)						Ca(CYP8_DD_)													SCROFF//;
%                JSR(DDRLATCH)						Ca(CYP8_DD_)													SCROFF//;
%                RTN								Ca(CYP8_DD_)													SCROFF//; 

%D_DSPBT1A:      JSR(D_PHASE1)                      Ca(CYP8_DD_)													SCROFF//;TMRS_PSDR(1021)
%                JSR(DDRTMRS1)						Ca(CYP8_DD_)													SCROFF//; PHASE2 (120)
%                JSR(DDRTMRS2)						Ca(CYP8_DD_)													SCROFF//;      
%                JSR(DDRTMRS7)						Ca(CYP8_DD_)													SCROFF//;
%                JSR(DDRLATCH)						Ca(CYP8_DD_)													SCROFF//;
%                RTN								Ca(CYP8_DD_)													SCROFF//; 

#endif


//;  -----------------------------------------------------------------------
//;  -----------------------------------------------------------------------
%SDRTMRS:       STI(8,0xE)                 XT YT  Ca(CYP8_DD_)   xSetUDAll(XT_,0x00)								SCROFF//; TMRS LATCH
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)   ySetUDAll(YT_,0x09)								SCROFF//;
%											XT YT  Ca(MRW_DD_)														SCROFF//;       
%               STI(8,0xE)  /*2*/          XT YT  Ca(CYP8_DD_)														SCROFF//; 
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)														SCROFF//;
%               RTN                         XT YT  Ca(CYP8_DD_)														SCROFF//; 

%DDRTMRS:       STI(8,0x0)                  XT YT  Ca(CYP8_DD_)   xSetUDAll(XT_,0x00)								SCROFF//;TMRS LATCH
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)   ySetUDAll(YT_,0x09)								SCROFF//;
%                                           XT YT  Ca(MRW1_DD_)														SCROFF//;      
%                                           XT YT  Ca(MRW2_DD_)														SCROFF//;
%               STI(8,0x2)                 XT YT  Ca(CYP8_DD_)														SCROFF//;
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)														SCROFF//;
%               RTN                         XT YT  Ca(CYP8_DD_)														SCROFF//;

%DDRLATCH:                                  XT YT  Ca(CYP8_DD_)   xSetUDAll(XT_,0x00)								SCROFF//;
%											XT YT  Ca(CYP8_DD_)   ySetUDAll(YT_,0x09)								SCROFF//;
%                                           XT YT  Ca(MRW1_DD_)														SCROFF//;TMRS LATCH     
%                                           XT YT  Ca(MRW2_DD_)														SCROFF//;
%               STI(8,0x1)  /*4*/          XT YT  Ca(CYP8_DD_)														SCROFF//;
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)														SCROFF//;
%                                           XT YT  Ca(MRW1_DD_)														SCROFF//;TMRS LATCH EXIT     
%                                           XT YT  Ca(MRW2_DD_)														SCROFF//;
%               STI(8,0x2)                 XT YT  Ca(CYP8_DD_)														SCROFF//;
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)														SCROFF//;
%               RTN                         XT YT  Ca(CYP8_DD_)														SCROFF//;

%DDRTMRS0:      STI(8,0x0)                 XT YT  Ca(CYP8_DD_)   xSetUDAll(XT_,0x00)								SCROFF//; TMRS 0  MR9  OP0 H , 20190926 (changed 1 to 0 for XT)
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)   ySetUDAll(YT_,0x09)								SCROFF//;
%                                           XT YT  Ca(MRW1_DD_)														SCROFF//;       
%                                           XT YT  Ca(MRW2_DD_)														SCROFF//; 
%               STI(8,0x2)                 XT YT  Ca(CYP8_DD_)														SCROFF//; 
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)														SCROFF//;
%               RTN                         XT YT  Ca(CYP8_DD_)														SCROFF//; 
%DDRTMRS1:      STI(8,0x0)                 XT YT  Ca(CYP8_DD_)   xSetUDAll(XT_,0x01)								SCROFF//; TMRS 1  MR9  OP1 H , 20190926 (changed 2 to 1 for XT)
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)   ySetUDAll(YT_,0x09)								SCROFF//;
%                                           XT YT  Ca(MRW1_DD_)														SCROFF//;       
%                                           XT YT  Ca(MRW2_DD_)														SCROFF//; 
%               STI(8,0x2)                 XT YT  Ca(CYP8_DD_)														SCROFF//; 
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)														SCROFF//;
%               RTN                         XT YT  Ca(CYP8_DD_)														SCROFF//; 
%DDRTMRS2:      STI(8,0x0)                 XT YT  Ca(CYP8_DD_)   xSetUDAll(XT_,0x02)								SCROFF//; TMRS 2  MR9  OP2 H , 20190926 (changed 4 to 2 for XT)
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)   ySetUDAll(YT_,0x09)								SCROFF//;
%                                           XT YT  Ca(MRW1_DD_)														SCROFF//;       
%                                           XT YT  Ca(MRW2_DD_)														SCROFF//; 
%               STI(8,0x2)                 XT YT  Ca(CYP8_DD_)														SCROFF//;
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)														SCROFF//;
%               RTN                         XT YT  Ca(CYP8_DD_)														SCROFF//; 
%DDRTMRS3:      STI(8,0x0)					XT YT  Ca(CYP8_DD_)   xSetUDAll(XT_,0x03)								SCROFF//; TMRS 3  MR9  OP3 H, 20190926 (changed 8 to 3 for XT)------------
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)   ySetUDAll(YT_,0x09)								SCROFF//;
%                                           XT YT  Ca(MRW1_DD_)														SCROFF//;       
%                                           XT YT  Ca(MRW2_DD_)														SCROFF//; 
%               STI(8,0x2)                 XT YT  Ca(CYP8_DD_)														SCROFF//;
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)														SCROFF//;
%               RTN                         XT YT  Ca(CYP8_DD_)														SCROFF//; 
%DDRTMRS4:      STI(8,0x0)                 XT YT  Ca(CYP8_DD_)   xSetUDAll(XT_,0x04)								SCROFF//; TMRS 4  MR9  OP4 H, 20190926 (changed 10 to 4 for XT)
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)   ySetUDAll(YT_,0x09)								SCROFF//;
%                                           XT YT  Ca(MRW1_DD_)														SCROFF//;       
%                                           XT YT  Ca(MRW2_DD_)														SCROFF//; 
%               STI(8,0x2)                 XT YT  Ca(CYP8_DD_)														SCROFF//;
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)														SCROFF//;
%               RTN                         XT YT  Ca(CYP8_DD_)														SCROFF//; 
%DDRTMRS5:      STI(8,0x0)                 XT YT  Ca(CYP8_DD_)   xSetUDAll(XT_,0x05)								SCROFF//; TMRS 5  MR9  OP5 H, 20190926 (changed 20 to 5 for XT)
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)   ySetUDAll(YT_,0x09)								SCROFF//;
%                                           XT YT  Ca(MRW1_DD_)														SCROFF//;       
%                                           XT YT  Ca(MRW2_DD_)														SCROFF//; 
%               STI(8,0x2)                 XT YT  Ca(CYP8_DD_)														SCROFF//;
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)														SCROFF//;
%               RTN                         XT YT  Ca(CYP8_DD_)														SCROFF//; 
%DDRTMRS6:      STI(8,0x0)                 XT YT  Ca(CYP8_DD_)   xSetUDAll(XT_,0x06)								SCROFF//; TMRS 6  MR9  OP6 H, 20190926 (changed 40 to 6 for XT)
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)   ySetUDAll(YT_,0x09)								SCROFF//;
%                                           XT YT  Ca(MRW1_DD_)														SCROFF//;       
%                                           XT YT  Ca(MRW2_DD_)														SCROFF//; 
%               STI(8,0x2)                 XT YT  Ca(CYP8_DD_)														SCROFF//;
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)														SCROFF//;
%               RTN                         XT YT  Ca(CYP8_DD_)														SCROFF//; 
%DDRTMRS7:      STI(8,0x0)					XT YT  Ca(CYP8_DD_)   xSetUDAll(XT_,0x07)								SCROFF//; TMRS 7  MR9  OP7 H, 20190926 (changed 80 to 7 for XT)
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)   ySetUDAll(YT_,0x09)								SCROFF//;
%                                           XT YT  Ca(MRW1_DD_)														SCROFF//;       
%                                           XT YT  Ca(MRW2_DD_)														SCROFF//; 
%               STI(8,0x2)                 XT YT  Ca(CYP8_DD_)														SCROFF//;
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)														SCROFF//;
%               RTN                         XT YT  Ca(CYP8_DD_)														SCROFF//; 
%DDRTMRS8:      STI(8,0x0)                 XT YT  Ca(CYP8_DD_)   xSetUDAll(XT_,0x08)								SCROFF//; TMRS 8  MR73, 20190926 (changed 0 to 8 for XT)
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)   ySetUDAll(YT_,0x09)								SCROFF//;
%                                           XT YT  Ca(MRW1_DD_)														SCROFF//;       
%                                           XT YT  Ca(MRW2_DD_)														SCROFF//; 
%               STI(8,0x2)                 XT YT  Ca(CYP8_DD_)														SCROFF//;
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)														SCROFF//;
%               RTN                         XT YT  Ca(CYP8_DD_)														SCROFF//; 
%DDRTMRS9:      STI(8,0x0)                 XT YT  Ca(CYP8_DD_)   xSetUDAll(XT_,0x09)								SCROFF//; TMRS 9  MR57, 20190926 (changed 0 to 9 for XT)
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)   ySetUDAll(YT_,0x09)								SCROFF//;
%                                           XT YT  Ca(MRW1_DD_)														SCROFF//;       
%                                           XT YT  Ca(MRW2_DD_)														SCROFF//; 
%               STI(8,0x2)                 XT YT  Ca(CYP8_DD_)														SCROFF//;
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)														SCROFF//;
%               RTN                         XT YT  Ca(CYP8_DD_)														SCROFF//; 
%DDRTMRSA:      STI(8,0x0)                 XT YT  Ca(CYP8_DD_)   xSetUDAll(XT_,0x0a)								SCROFF//; TMRS 10 MR59, 20190926 (changed 0 to a for XT)
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)   ySetUDAll(YT_,0x09)								SCROFF//;
%                                           XT YT  Ca(MRW1_DD_)														SCROFF//;       
%                                           XT YT  Ca(MRW2_DD_)														SCROFF//; 
%               STI(8,0x2)                 XT YT  Ca(CYP8_DD_)														SCROFF//;
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)														SCROFF//;
%               RTN                         XT YT  Ca(CYP8_DD_)														SCROFF//; 
//;  ------------------------------------------------------------------------





//added 20191118
%D_DSPBTCS1:    JSR(D_PHASE1)       XT YT  Ca(CYP8_DD_)								SCROFF	//; TMRS_DSPBT(1127)
%									XT YT  Ca(CYP8_DD_)		xSetUDAll(XT_,0x01)
%				JSR(D_MRW_R1)       XT YT  Ca(CYP8_DD_)		ySetUDAll(YT_,0x09)	SCROFF	//XT<#0002 YT<#0009 / T12   ; TMRS 1
%									XT YT  Ca(CYP8_DD_)		xSetUDAll(XT_,0x02)
%				JSR(D_MRW_R1)       XT YT  Ca(CYP8_DD_)		ySetUDAll(YT_,0x09)	SCROFF	//XT<#0004 YT<#0009 / T12   ; TMRS 2
%									XT YT  Ca(CYP8_DD_)		xSetUDAll(XT_,0x07)
%				JSR(D_MRW_R1)       XT YT  Ca(CYP8_DD_)		ySetUDAll(YT_,0x09)	SCROFF	//XT<#0080 YT<#0009 / T12   ; TMRS 7
%									XT YT  Ca(CYP8_DD_)		xSetUDAll(XT_,0x00)
%				JSR(D_MRW_R1)       XT YT  Ca(CYP8_DD_)		ySetUDAll(YT_,0x09)	SCROFF	//XT<#0000 YT<#0009 / T12   ; TMRS LATCH
%									XT YT  Ca(CYP8_DD_)		xSetUDAll(XT_,0x00)
%				JSR(D_MRW_R1)       XT YT  Ca(CYP8_DD_)		ySetUDAll(YT_,0x09)	SCROFF	//XT<#0000 YT<#0009 / T12   ; TMRS LATCH_EXIT
%               STI(8,0x6)         XT YT  Ca(CYP8_DD_)								SCROFF	//;
%				IDXI(8, BranchSelf)	XT YT  Ca(CYP8_DD_)								SCROFF	//;
%RTN								XT YT  Ca(CYP8_DD_)								SCROFF
%D_MRW_R1:      STI(8,0x2)                 XT YT  Ca(CYP8_DD_)														SCROFF//;  
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)														SCROFF//;
//%                                           XT YT  Ca(MRW1_DD_)														SCROFF//;DDR MRW Y(MA) X(OP)       
//%                                           XT YT  Ca(MRW2_DD_)														SCROFF//; 
%                                           XT YT  Ca(MRW1R1_DD_)														SCROFF//;DDR MRW Y(MA) X(OP)       
%                                           XT YT  Ca(MRW2R1_DD_)														SCROFF//; 
%               STI(8,0x2)                 XT YT  Ca(CYP8_DD_)														SCROFF//;
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)														SCROFF//;
%               RTN                         XT YT  Ca(CYP8_DD_)														SCROFF//; 

																														  
%D_DSPBT1_CS1:  STI(8,0x0)                 XT YT  Ca(CYP8_DD_)   xSetUDAll(XT_,0x01)								SCROFF//; TMRS 1  MR9  OP1 H , 20190926 (changed 2 to 1 for XT)
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)   ySetUDAll(YT_,0x09)								SCROFF//;
%                                           XT YT  Ca(MRW1R1_DD_)														SCROFF//;       
%                                           XT YT  Ca(MRW2R1_DD_)														SCROFF//; 
%				STI(8,0x5)                 XT YT  Ca(CYP8_DD_)   xSetUDAll(XT_,0x02)								SCROFF//; TMRS 2  MR9  OP2 H , 20190926 (changed 4 to 2 for XT)
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)   ySetUDAll(YT_,0x09)								SCROFF//;
%                                           XT YT  Ca(MRW1R1_DD_)														SCROFF//;       
%                                           XT YT  Ca(MRW2R1_DD_)														SCROFF//; 
%				STI(8,0x5)                 XT YT  Ca(CYP8_DD_)   xSetUDAll(XT_,0x04)								SCROFF//; TMRS 2  MR9  OP2 H , 20190926 (changed 4 to 2 for XT)
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)   ySetUDAll(YT_,0x09)								SCROFF//;
%                                           XT YT  Ca(MRW1R1_DD_)														SCROFF//;       
%                                           XT YT  Ca(MRW2R1_DD_)														SCROFF//; 
%				STI(8,0x5)                 XT YT  Ca(CYP8_DD_)   xSetUDAll(XT_,0x00)								SCROFF//; TMRS 2  MR9  OP2 H , 20190926 (changed 4 to 2 for XT)
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)   ySetUDAll(YT_,0x09)								SCROFF//;
%                                           XT YT  Ca(MRW1R1_DD_)														SCROFF//;       
%                                           XT YT  Ca(MRW2R1_DD_)														SCROFF//; 
%				STI(8,0x5)                 XT YT  Ca(CYP8_DD_)   xSetUDAll(XT_,0x00)								SCROFF//; TMRS 2  MR9  OP2 H , 20190926 (changed 4 to 2 for XT)
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)   ySetUDAll(YT_,0x09)								SCROFF//;
%                                           XT YT  Ca(MRW1R1_DD_)														SCROFF//;       
%                                           XT YT  Ca(MRW2R1_DD_)														SCROFF//; 
%               RTN                         XT YT  Ca(CYP8_DD_)														SCROFF//; 

%D_DSPBT_CS1:  STI(8,0x0)                 XT YT  Ca(CYP8_DD_)   xSetUDAll(XT_,0x01)								SCROFF//; TMRS 1  MR9  OP1 H , 20190926 (changed 2 to 1 for XT)
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)   ySetUDAll(YT_,0x09)								SCROFF//;
%                                           XT YT  Ca(MRW1R1_DD_)														SCROFF//;       
%                                           XT YT  Ca(MRW2R1_DD_)														SCROFF//; 
%				STI(8,0x5)                 XT YT  Ca(CYP8_DD_)   xSetUDAll(XT_,0x02)								SCROFF//; TMRS 2  MR9  OP2 H , 20190926 (changed 4 to 2 for XT)
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)   ySetUDAll(YT_,0x09)								SCROFF//;
%                                           XT YT  Ca(MRW1R1_DD_)														SCROFF//;       
%                                           XT YT  Ca(MRW2R1_DD_)														SCROFF//; 
%				STI(8,0x5)                 XT YT  Ca(CYP8_DD_)   xSetUDAll(XT_,0x04)								SCROFF//; TMRS 2  MR9  OP2 H , 20190926 (changed 4 to 2 for XT)
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)   ySetUDAll(YT_,0x09)								SCROFF//;
%                                           XT YT  Ca(MRW1R1_DD_)														SCROFF//;       
%                                           XT YT  Ca(MRW2R1_DD_)														SCROFF//; 
%				STI(8,0x5)                 XT YT  Ca(CYP8_DD_)   xSetUDAll(XT_,0x00)								SCROFF//; TMRS 2  MR9  OP2 H , 20190926 (changed 4 to 2 for XT)
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)   ySetUDAll(YT_,0x09)								SCROFF//;
%                                           XT YT  Ca(MRW1R1_DD_)														SCROFF//;       
%                                           XT YT  Ca(MRW2R1_DD_)														SCROFF//; 
%				STI(8,0x5)                 XT YT  Ca(CYP8_DD_)   xSetUDAll(XT_,0x00)								SCROFF//; TMRS 2  MR9  OP2 H , 20190926 (changed 4 to 2 for XT)
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)   ySetUDAll(YT_,0x09)								SCROFF//;
%                                           XT YT  Ca(MRW1R1_DD_)														SCROFF//;       
%                                           XT YT  Ca(MRW2R1_DD_)														SCROFF//; 
%               RTN                         XT YT  Ca(CYP8_DD_)														SCROFF//; 
%D_DSPBT_CS0:  STI(8,0x0)                 XT YT  Ca(CYP8_DD_)   xSetUDAll(XT_,0x01)								SCROFF//; TMRS 1  MR9  OP1 H , 20190926 (changed 2 to 1 for XT)
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)   ySetUDAll(YT_,0x09)								SCROFF//;
%                                           XT YT  Ca(MRW1R1_DD_)														SCROFF//;       
%                                           XT YT  Ca(MRW2R1_DD_)														SCROFF//; 
%				STI(8,0x5)                 XT YT  Ca(CYP8_DD_)   xSetUDAll(XT_,0x02)								SCROFF//; TMRS 2  MR9  OP2 H , 20190926 (changed 4 to 2 for XT)
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)   ySetUDAll(YT_,0x09)								SCROFF//;
%                                           XT YT  Ca(MRW1R1_DD_)														SCROFF//;       
%                                           XT YT  Ca(MRW2R1_DD_)														SCROFF//; 
%				STI(8,0x5)                 XT YT  Ca(CYP8_DD_)   xSetUDAll(XT_,0x04)								SCROFF//; TMRS 2  MR9  OP2 H , 20190926 (changed 4 to 2 for XT)
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)   ySetUDAll(YT_,0x09)								SCROFF//;
%                                           XT YT  Ca(MRW1R1_DD_)														SCROFF//;       
%                                           XT YT  Ca(MRW2R1_DD_)														SCROFF//; 
%				STI(8,0x5)                 XT YT  Ca(CYP8_DD_)   xSetUDAll(XT_,0x00)								SCROFF//; TMRS 2  MR9  OP2 H , 20190926 (changed 4 to 2 for XT)
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)   ySetUDAll(YT_,0x09)								SCROFF//;
%                                           XT YT  Ca(MRW1R1_DD_)														SCROFF//;       
%                                           XT YT  Ca(MRW2R1_DD_)														SCROFF//; 
%				STI(8,0x5)                 XT YT  Ca(CYP8_DD_)   xSetUDAll(XT_,0x00)								SCROFF//; TMRS 2  MR9  OP2 H , 20190926 (changed 4 to 2 for XT)
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)   ySetUDAll(YT_,0x09)								SCROFF//;
%                                           XT YT  Ca(MRW1R1_DD_)														SCROFF//;       
%                                           XT YT  Ca(MRW2R1_DD_)														SCROFF//; 
%               RTN                         XT YT  Ca(CYP8_DD_)														SCROFF//; 
																														  
//;  ------------------------------------------------------------------------





