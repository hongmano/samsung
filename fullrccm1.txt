#include "pat_def_PS.h"
#include "pat_def_magnum6.h"
#include "HEADER.h"

#undef IDXI8
#define IDXI8(myrep)							\n \
	%   STI(8, myrep)			Ca(CYP8_DD_)	\n \
	%   IDXI(8, BranchSelf)  	Ca(CYP8_DD_)

#undef D5_
#undef D6_
#define D5_		1		//see void DRegSet(CString D_set, DWORD d_value)
#define D6_		1		//see void DRegSet(CString D_set, DWORD d_value)

#define XXXX	0
#define OOOO	1
#define SetJamramPtr0			\n \
	datgen1 jamramptrload		\n \
	jamramptr1commonudataval 0		//0 base
#define SetJamramToDmain	\n \
	datgen1 sjam,dmain
#define IncJamramPtr		\n \
	datgen1 jamramincr
#undef SetJamram
#define SetJamram(my1st_X, my1st)																							\n \
	if ((JamramPtr%2)==0)		{																							\n \
		X_addr = (my1st & 0xFFF000) >> 12;																					\n \
		Y_addr = my1st & 0x0000FFF;																							\n \
		for (int idx = 0; idx < 12; idx++) {																				\n \
			iX[idx] = (X_addr >> idx) & 1;																					\n \
			iY[idx] = (Y_addr >> idx) & 1;																					\n \
		}																													\n \
		iEven = iX[8] << 1 | iX[10] << 2 | iX[4] << 3 | iX[6] << 4  | iX[0] << 5  | iX[2] << 6  |							\n \
				iY[8] << 7 | iY[10] << 8 | iY[4] << 9 | iY[6] << 10 | iY[0] << 11 | iY[2] << 12 | my1st_X<<13;				\n \
		iOdd  = iX[9] << 1 | iX[11] << 2 | iX[5] << 3 | iX[7] << 4  | iX[1] << 5  | iX[3] << 6  |							\n \
				iY[9] << 7 | iY[11] << 8 | iY[5] << 9 | iY[7] << 10 | iY[1] << 11 | iY[3] << 12 | my1st_X<<13;;				\n \
	}																														\n \
	if ((JamramPtr%2)==1)		{																							\n \
		X_addr = (my1st & 0xFFF000) >> 12;																					\n \
		Y_addr = my1st & 0x0000FFF;																							\n \
		for (int idx = 0; idx < 12; idx++) {																				\n \
				iX[idx] = (X_addr >> idx) & 1;																				\n \
				iY[idx] = (Y_addr >> idx) & 1;																				\n \
		}																													\n \
		iEven = iEven | iX[8] << 14 | iX[10] << 15 | iX[4] << 16 | iX[6] << 17 | iX[0] << 18 | iX[2] << 19 |				\n \
						iY[8] << 20 | iY[10] << 21 | iY[4] << 22 | iY[6] << 23 | iY[0] << 24 | iY[2] << 25 | my1st_X << 26;	\n \
		iOdd =   iOdd | iX[9] << 14 | iX[11] << 15 | iX[5] << 16 | iX[7] << 17 | iX[1] << 18 | iX[3] << 19 |				\n \
						iY[9] << 20 | iY[11] << 21 | iY[5] << 22 | iY[7] << 23 | iY[1] << 24 | iY[3] << 25 | my1st_X << 26;	\n \
		apg_jam_ram_set((int)(JamramPtr/2), 1, 0, iEven);																	\n \
		apg_jam_ram_set((int)(JamramPtr/2), 1, 1, iOdd);																	\n \
	}																														\n \
	JamramPtr++;																											


PATTERN(PDCSPRCATA1, memory) //20190926 TOF_DDR
	@{

//TOF_DDR + t_d1
#if 1
		//SDR_DRV									//CPE
		CLOCK_PS_ram_set(10, 0, 0xffff, 0x0);		CLOCK_PS_ram_set(10, 1, 0,	0xffffffff);		//CLK rising		PS_CLOCK11
		CLOCK_PS_ram_set(11, 0, 0,		0x0);		CLOCK_PS_ram_set(11, 1, 0,	0x0);				//CLK falling		PS_CLOCK12

		//DDR_DRV									//CPE
		CLOCK_PS_ram_set(20, 0, 0x55555555, 0x0);	//CLOCK_PS_ram_set(20, 1, 0,	0xffffffff);	//CLK		PS_CLOCK21
													//CLOCK_PS_ram_set(20, 1, 0,	0xffffffff); is moved to main(set D5,D6) from PDBSPRC10B3.pat
		CLOCK_PS_ram_set(21, 0, 0, 0);				CLOCK_PS_ram_set(21, 1, 0, 0);					//CLK		PS_CLOCK22

////t_CLK1
#undef CLK_NOP
#define		CLK_NOP		\n \
	pinfunc PS_CLOCK22

#if 1
#define X8_		\n \
			datgen1	odmain
#define X10_	\n \
			datgen1 sdmain,shrdr,dmain,odmain
#define X4_		\n \
			datgen1 sdmain,shrdr,dmain,odmain
#define X6_		\n \
			datgen1 sdmain,shrdr,dmain,odmain
#define X0_		\n \
			datgen1 sdmain,shrdr,dmain,odmain
#define X2_		\n \
			datgen1 sdmain,shrdr,dmain,odmain
//
#define Y8_		\n \
			datgen1 sdmain,shrdr,dmain,odmain
#define Y10_		\n \
			datgen1 sdmain,shrdr,dmain,odmain
#define Y4_		\n \
			datgen1 sdmain,shrdr,dmain,odmain
#define Y6_		\n \
			datgen1 sdmain,shrdr,dmain,odmain
#define Y0_		\n \
			datgen1 sdmain,shrdr,dmain,odmain
#define Y2_		\n \
			datgen1 sdmain,shrdr,dmain,odmain
#define ShiftRightDmain_		\n \
			datgen1 sdmain,shrdr,dmain,odmain
#endif

//SDR
#define		NOP1_M1_	 421
#define		NOP1_M2_	 422
#define		MRW1_M1_	 423
#define		MRW1_M2_	 424
#define		MRW2_M1_	 425
#define		MRW2_M2_	 426
#define		MRW1R1_M1_	 427
#define		MRW1R1_M2_	 428
#define		MRW2R1_M1_	 429
#define		MRW2R1_M2_	 430
#define		MRW1A_M1_	 431
#define		MRW1A_M2_	 432
#define		MRW2A_M1_	 433
#define		MRW2A_M2_	 434
#define		MPCA_M1_	 435
#define		MPCA_M2_	 436
#define		PDNT_M1_	 437
#define		PDNT_M2_	 438
#define		MRW_M1_		 439
#define		MRW_M2_		 440
#define		MRWS1_M1_	 441
#define		MRWS1_M2_	 442
#define		MRWS2_M1_	 443
#define		MRWS2_M2_	 444
#define		MRWS3_M1_	 445
#define		MRWS3_M2_	 446
#define		MRWS4_M1_	 447
#define		MRWS4_M2_	 448
#define		MRWS5_M1_	 449
#define		MRWS5_M2_	 450
#define		MRWS6_M1_	 451
#define		MRWS6_M2_	 452
#define		MRWS7_M1_	 453
#define		MRWS7_M2_	 454
#define		MRWS8_M1_	 455
#define		MRWS8_M2_	 456
#define		AACT_M1_	460
#define		AACT_M2_	461
#define		AWR1_M1_	462
#define		AWR1_M2_	463
#define		AWR3_M1_	464
#define		AWR3_M2_	465
#define		AWR5_M1_	466
#define		AWR5_M2_	467
#define		AWR11_M1_	468
#define		AWR11_M2_	469
#define		AWR13_M1_	470
#define		AWR13_M2_	471
#define		AWR15_M1_	472
#define		AWR15_M2_	473
#define		ARD_M1_		474
#define		ARD_M2_		475
#define		APRE_M1_	476
#define		APRE_M2_	477
#define		AREF_M1_	478
#define		AREF_M2_	479
#define		RESET_M1_	480
#define		RESET_M2_	481
#define		MRR_M1_		482
#define		MRR_M2_		483
#define		CYP1_		490
#define		CYP2_      	491
#define		CYP3_      	492
#define		CYP4_      	493
#define		CYP5_      	494
#define		CYP6_      	495
#define		CYP7_      	496
#define		CYP8_      	497		//DES
#define		CYP9_      	498
#define		CYP10_     	499
#define		CYP11_      500
#define		CYP12_     	501
#define		CYP13_      501
#define		CYP14_     	502
#define		CYP15_      503
#define		CYP16_     	504

//DDR
#define		NOP1_DD_	 321
#define		MRW1_DD_	 323
#define		MRW2_DD_	 325
#define		MRW1R1_DD_	 327
#define		MRW2R1_DD_	 329
#define		MRW1A_DD_	 331
#define		MRW2A_DD_	 333
#define		MPCA_DD_	 335
#define		PDNT_DD_	 337
#define		MRW_DD_		 339
#define		MRWS1_DD_	 341
#define		MRWS2_DD_	 343
#define		MRWS3_DD_	 345
#define		MRWS4_DD_	 347
#define		MRWS5_DD_	 349
#define		MRWS6_DD_	 351
#define		MRWS7_DD_	 353
#define		MRWS8_DD_	 355
 
#define		AACT_DD_	360
#define		AWR1_DD_	362
#define		AWR3_DD_	364
#define		AWR5_DD_	366
#define		AWR11_DD_	368
#define		AWR13_DD_	370
#define		AWR15_DD_	372
#define		ARD_DD_		374
#define		APRE_DD_	376
#define		AREF_DD_	378
#define		RESET_DD_	380

#define		MRR_DD_		382

#define		CYP1_DD_	390
#define		CYP2_DD_    391
#define		CYP3_DD_    392
#define		CYP4_DD_    393
#define		CYP5_DD_    394
#define		CYP6_DD_    395
#define		CYP7_DD_    396
#define		CYP8_DD_    397		//DES
#define		CYP9_DD_    398
#define		CYP10_DD_   399
#define		CYP11_DD_   400
#define		CYP12_DD_   401
#define		CYP13_DD_   401
#define		CYP14_DD_   402
#define		CYP15_DD_   403
#define		CYP16_DD_   404


#define concat(a,b) a ## b

#undef CPE
#define	CPE									\n \
	datgen1 uiinvsns 0x00,uistrobemask 0x00 \n \
	mar	read							\n \
	hspinfunc1 ps_data2					\n \
	datgen1 sdmain,shrdr,dmain,odmain	\n \
	hspinfunc1	adhiz

#undef  INIT
#define INIT   														   \n \
				xalu1 xbase, xcare, coff, zero, dxmain, dxbase, dxfield	\n \
				yalu1 ybase, xcare, coff, zero, dymain, dybase, dyfield	\n \
				zalu1 zbase, xcare, coff, zero, dzmain, dzbase, dzfield	\n \
				walu1 wbase, xcare, coff, zero, dwmain, dwbase, dwfield	\n \
				xalu2 xbase, xcare, coff, zero, dxmain, dxbase, dxfield	\n \
				yalu2 ybase, xcare, coff, zero, dymain, dybase, dyfield	\n \
				zalu2 zbase, xcare, coff, zero, dzmain, dzbase, dzfield	\n \
				walu2 wbase, xcare, coff, zero, dwmain, dwbase, dwfield	\n \
				xalu3 xbase, xcare, coff, zero, dxmain, dxbase, dxfield	\n \
				yalu3 ybase, xcare, coff, zero, dymain, dybase, dyfield	\n \
				zalu3 zbase, xcare, coff, zero, dzmain, dzbase, dzfield	\n \
				walu3 wbase, xcare, coff, zero, dwmain, dwbase, dwfield	\n \
				xalu4 xbase, xcare, coff, zero, dxmain, dxbase, dxfield	\n \
				yalu4 ybase, xcare, coff, zero, dymain, dybase, dyfield	\n \
				zalu4 zbase, xcare, coff, zero, dzmain, dzbase, dzfield	\n \
				walu4 wbase, xcare, coff, zero, dwmain, dwbase, dwfield	

//DPAHEAD
#undef NOP
#define NOP

#undef  NOP_
#define NOP_	\n \
	scheduleroffset dat1offset 0 \n \
	hspinfunc1 ps_data2

#undef  XYCLD
#define XYCLD		\n \
	xalu1	oxmain \n  \
	xalu2	oxmain \n  \
	xalu3	oxmain \n  \
	xalu4	oxmain \n  \
	yalu1	oymain \n  \
	yalu2	oymain \n  \
	yalu3	oymain \n  \
	yalu4	oymain

#undef XT
#define XT		    \n \
	xalu1	oxfield \n  \
	xalu2	oxfield \n  \
	xalu3	oxfield \n  \
	xalu4	oxfield

#undef YT
#define YT		    \n \
	yalu1	oyfield \n  \
	yalu2	oyfield \n  \
	yalu3	oyfield \n  \
	yalu4	oyfield

//apg_auxreg_set(1~4, aux1~64, VALUE);	//AddrAux 1-base
#undef  D1_
#define D1_		21
#undef  D2_
#define D2_		22

//apg_dmain_get(1~4,ui0~ui7);
//data_aux_even_set(alpg1~4, aux0~31, 0xAAAAA);		//alpg 1-base, DataAux 0-base
#undef	_TPH 
#define _TPH	17
#define _TP 	main

//DDR TSET1 for DRV
#define Ca(myPS_CA)							\n \
	hspinfunc1 concat(PS_CA,myPS_CA)		\n \
	scheduleroffset psa1offset				\n \
	TSET(4)									\n \
	pinfunc PS_CLOCK21
#define Cax(myPS_CA)						\n \
	hspinfunc1 concat(PS_CA,myPS_CA)		\n \
	scheduleroffset psa1offset				\n \
	TSET(4)									\n \
	pinfunc PS_CLOCK22
//
#define Ca_WR(myPS_CA)						\n \
	hspinfunc1 concat(PS_CA,myPS_CA)		\n \
	scheduleroffset psa1offset				\n \
	datgen1 uiinvsns 0x00,uistrobemask 0xff \n \
	TSET(4)									\n \
	pinfunc PS_CLOCK21					//bspark stupid dolt dunce nerd babo retard idiot !!!!

//TSET12 for CPE
#define Ca_CPE(myPS_CA)						\n \
	hspinfunc1 concat(PS_CA,myPS_CA)		\n \
	scheduleroffset psa1offset				\n \
	TSET(5)									\n \
	pinfunc PS_CLOCK21
#endif

	int JamramPtr = 0; //zero bvase
	//int dg = 1; //one base
	//unsigned int FAMAPRCCM,FUSE_X;	

	unsigned int X_addr,Y_addr;	
	unsigned int iEven, iOdd, iX[12], iY[12];

//1~500
#if 1
	{

   	SetJamram(XXXX,0x200111);  // TMRSF_DVFSC_RED_P_G0
   	SetJamram(XXXX,0x200131);  // TMRSF_FRPD_F_P1_G0_BD_1B
   	SetJamram(XXXX,0x200151);  // TMRSF_PWRD_CTRL_G0
   	SetJamram(XXXX,0x200191);  // TMRSF_IOPR_EN_P1D_G0
   	SetJamram(XXXX,0x2001B1);  // TMRSF_VINT_FRP_M2_G0
   	SetJamram(XXXX,0x2001D1);  // TMRSF_FRPD_ERR_DQCPY_M1_G0_BD
   	SetJamram(XXXX,0x2001F1);  // TMRS_EDS_ECC_TEST_G0_R
   	SetJamram(XXXX,0x240110);  // TMRSF_SGIO_EN_PULSE4_G0
   	SetJamram(XXXX,0x240170);  // TMRSF_ECCEN_REP_G0
   	SetJamram(XXXX,0x240190);  // TMRSF_SKEIP_FIND_MAX_AT_ERH_CARE_G0
   	SetJamram(XXXX,0x2401D0);  // TMRSF_RANDOM_F_RESET_ON_G0
   	SetJamram(XXXX,0x2401F0);  // TMRSF_FRPD_S_P1_G0_BD_1B
   	SetJamram(XXXX,0x240111);  // TMRSF_PRAS_DSM_P0_VINTY_G0
// 	////  SetJamram(XXXX,0x240131);  // TMRSF_OCDRV_UP_2ND_G0
   	SetJamram(XXXX,0x240151);  // TMRSF_MODE_LAEQ_DELAY_G0
   	SetJamram(XXXX,0x240171);  // TMRSF_PLAS2_OC_2ND_G0
   	SetJamram(XXXX,0x240191);  // TMRSF_PLAS2_SEL0_G0
   	SetJamram(XXXX,0x2401B1);  // TMRS_EPSEC3_ON_G0
   	SetJamram(XXXX,0x2401D1);  // TMRS_HITE0_G0
   	SetJamram(XXXX,0x2401F1);  // TMRSF_ABR_TRAS_M2_G0
   	SetJamram(XXXX,0x280110);  // TMRSF_BSG_START_M1_G0
   	SetJamram(XXXX,0x280130);  // TMRSF_SERIAL_ABR_DIS_G0
   	SetJamram(XXXX,0x280150);  // TMRSF_PCLKWC3_G0_BD_DLY_P1
   	SetJamram(XXXX,0x280170);  // TMRS_PBTBYPASS_INT_G0D
   	////  SetJamram(XXXX,0x280190);  // TMRSF_FRPD_F_M2_G0_AC_0B
   	SetJamram(XXXX,0x2801B0);  // TMRSF_FRPD_F_P1_G0_AC_0B
   	SetJamram(XXXX,0x2801D0);  // TMRS_8WL_G0
   	SetJamram(XXXX,0x2801F0);  // TMRSF_LIOPRB_EN_P1D_G0
   	SetJamram(XXXX,0x280131);  // TMRSF_PNWR_EN_P1_VINTY_G0
   	////  SetJamram(XXXX,0x280151);  // TMRSF_PCLKWC4_DIS_DLY_P2_G0_AC
   	SetJamram(XXXX,0x280171);  // TMRS_MCSL_WR_DIS_G0
   	SetJamram(XXXX,0x280191);  // TMRS_DSF_TEST_Z3_PRE<0>
   	SetJamram(XXXX,0x2801D1);  // TMRS_VPTOVSS_G0
   	SetJamram(XXXX,0x2801F1);  // TMRSF_PTCB3_P0_VINTY_G0
   	SetJamram(XXXX,0x2C0110);  // TMRSF_ONE_TMMT_ANDING_G0
   	SetJamram(XXXX,0x2C0130);  // TMRSF_PDRAPB_P1_VINTY_G0
   	SetJamram(XXXX,0x2C0150);  // TMRSF_OCSA_P1M_P0_VINTY_G0
   	SetJamram(XXXX,0x2C0170);  // TMRSF_OCSA_P2PRE_P_VINTY_G0
   	SetJamram(XXXX,0x2C0190);  // TMRSF_ONE_TMMT_ORING_G0
   	SetJamram(XXXX,0x2C01B0);  // TMRSF_SEN_DIS_VINTY_G0
   	SetJamram(XXXX,0x2C01D0);  // TMRSF_ACT_PULSE_DVFSC_G0
   	SetJamram(XXXX,0x2C01F0);  // TMRSF_ABR_TRAS_M3_G0
   	SetJamram(XXXX,0x2C0111);  // TMRSF_PTC_UP0_G0
   	SetJamram(XXXX,0x2C0131);  // TMRSF_MPTCB_P0_VINTY_G0
// 	SetJamram(XXXX,0x2C0151);  // TMRSF_CSMR_P1_VINTY_G0
   	SetJamram(XXXX,0x2C0171);  // TMRSF_LALAB_SLOWOFF_VINTY_G0
   	SetJamram(XXXX,0x2C0191);  // TMRSF_P2_BETA3_SEN_M1_G0
   	SetJamram(XXXX,0x2C01B1);  // TMRSF_BSG_FLOAT_M0_G0
   	SetJamram(XXXX,0x2C01D1);  // TMRSF_AIVC_CR_G0
   	SetJamram(XXXX,0x2C01F1);  // TMRSF_WCSL_DIS_MAST_P1_G0_BD
   	SetJamram(XXXX,0x201110);  // TMRSF_DVFSC_RED_P_G3
   	SetJamram(XXXX,0x201130);  // TMRSF_FRPD_F_P1_G3_AC_1B
   	SetJamram(XXXX,0x201150);  // TMRSF_PWRD_CTRL_G3
   	SetJamram(XXXX,0x201170);  // TMRSF_WRRPT_CEN_RST_ON_1B_M1_L
   	SetJamram(XXXX,0x201190);  // TMRSF_IOPR_EN_P1D_G3
   	SetJamram(XXXX,0x2011B0);  // TMRSF_VINT_FRP_M2_G3
   	SetJamram(XXXX,0x2011D0);  // TMRSF_FRPD_ERR_DQCPY_M1_G3_BD
   	SetJamram(XXXX,0x2011F0);  // TMRS_EDS_ECC_TEST_G3_R
   	SetJamram(XXXX,0x201111);  // TMRSF_SGIO_EN_PULSE4_G3
   	SetJamram(XXXX,0x201131);  // TMRSF_ONE_TMMT_EN_BA3
   	SetJamram(XXXX,0x201171);  // TMRSF_ECCEN_REP_G3
   	SetJamram(XXXX,0x201191);  // TMRSF_SKEIP_FIND_MAX_AT_ERH_CARE_G3
   	SetJamram(XXXX,0x2011D1);  // TMRSF_RANDOM_F_RESET_ON_G3
   	SetJamram(XXXX,0x2011F1);  // TMRSF_WRRPT_ON_SR_DIS_L
   	SetJamram(XXXX,0x241110);  // TMRSF_PRAS_DSM_P0_VINTY_G3
// 	////  SetJamram(XXXX,0x241130);  // TMRSF_OCDRV_UP_2ND_G3
   	SetJamram(XXXX,0x241150);  // TMRSF_MODE_LAEQ_DELAY_G3
   	SetJamram(XXXX,0x241170);  // TMRSF_PLAS2_OC_2ND_G3
   	SetJamram(XXXX,0x241190);  // TMRSF_PLAS2_SEL0_G3
   	SetJamram(XXXX,0x2411B0);  // TMRS_EPSEC3_ON_G3
   	SetJamram(XXXX,0x2411D0);  // TMRS_HITE0_G3
   	SetJamram(XXXX,0x2411F0);  // TMRSF_ABR_TRAS_M2_G3
   	SetJamram(XXXX,0x241111);  // TMRSF_BSG_START_M1_G3
   	SetJamram(XXXX,0x241131);  // TMRSF_SERIAL_ABR_DIS_G3
   	SetJamram(XXXX,0x241151);  // TMRSF_PCLKWC3_G3_BD_DLY_P1
   	SetJamram(XXXX,0x241171);  // TMRS_PBTBYPASS_INT_G3D
   	////  SetJamram(XXXX,0x241191);  // TMRSF_FRPD_F_M2_G0_AC_1B
   	////  SetJamram(XXXX,0x2411B1);  // TMRSF_FRPD_F_M2_G3_AC_0B
   	SetJamram(XXXX,0x2411D1);  // TMRS_8WL_G3
   	SetJamram(XXXX,0x2411F1);  // TMRSF_LIOPRB_EN_P1D_G3
   	SetJamram(XXXX,0x281110);  // TMRS_EPBT_G3
   	SetJamram(XXXX,0x281130);  // TMRSF_PNWR_EN_P1_VINTY_G3
//   	SetJamram(XXXX,0x281150);  // TMRSF_PCLKWC4_DIS_DLY_P2_G3_AC
   	SetJamram(XXXX,0x281170);  // TMRS_MCSL_WR_DIS_G3
   	SetJamram(XXXX,0x281190);  // TMRS_DSF_TEST_Z2_PRE<0>
   	SetJamram(XXXX,0x2811F0);  // TMRSF_PTCB3_P0_VINTY_G3
   	SetJamram(XXXX,0x281111);  // TMRSF_ONE_TMMT_ANDING_G3
   	SetJamram(XXXX,0x281131);  // TMRSF_PDRAPB_P1_VINTY_G3
   	SetJamram(XXXX,0x281151);  // TMRSF_OCSA_P1M_P0_VINTY_G3
   	SetJamram(XXXX,0x281171);  // TMRSF_OCSA_P2PRE_P_VINTY_G3
   	SetJamram(XXXX,0x281191);  // TMRSF_ONE_TMMT_ORING_G3
   	SetJamram(XXXX,0x2811B1);  // TMRSF_SEN_DIS_VINTY_G3
   	SetJamram(XXXX,0x2811D1);  // TMRSF_ACT_PULSE_DVFSC_G3
   	SetJamram(XXXX,0x2811F1);  // TMRSF_ABR_TRAS_M3_G3
   	SetJamram(XXXX,0x2C1110);  // TMRSF_PTC_UP0_G3
   	SetJamram(XXXX,0x2C1130);  // TMRSF_MPTCB_P0_VINTY_G3
// 	SetJamram(XXXX,0x2C1150);  // TMRSF_CSMR_P1_VINTY_G3
   	SetJamram(XXXX,0x2C1170);  // TMRSF_LALAB_SLOWOFF_VINTY_G3
   	SetJamram(XXXX,0x2C1190);  // TMRSF_P2_BETA3_SEN_M1_G3
   	SetJamram(XXXX,0x2C11B0);  // TMRSF_BSG_FLOAT_M0_G3
   	SetJamram(XXXX,0x2C11D0);  // TMRSF_ONE_TMMT_EN_MST
   	SetJamram(XXXX,0x2C11F0);  // TMRSF_WCSL_DIS_MAST_P1_G3_BD
   	////  SetJamram(XXXX,0x2C1111);  // TMRSF_CURRENT_DIV1_L
   	SetJamram(XXXX,0x2C1131);  // TMRSF_VREF_AMP_UP2_DQ_0B
   	SetJamram(XXXX,0x2C1151);  // TMRSF_FAM_FETCH_NTC_OFF
   	SetJamram(XXXX,0x2C1171);  // TMRSF_AF_PCLKFD_VANTI
   	SetJamram(XXXX,0x2C1191);  // TMRSF_ROS_VALIDATION
   	SetJamram(XXXX,0x2C11B1);  // TMRSF_OSC_FREQ_M1
   	SetJamram(XXXX,0x2C11D1);  // TMRSF_IPGM_TUNE4
   	SetJamram(XXXX,0x2C11F1);  // TMRSF_ZQ_MON_EN
   	////  SetJamram(XXXX,0x202111);  // TMRSF_FRPD_S_M2_G0_BD_0B
   	SetJamram(XXXX,0x202151);  // TMRSF_PCLSAEN_P1_G0
   	SetJamram(XXXX,0x202191);  // TMRSF_IOPR_EN_M1BD_G0
   	SetJamram(XXXX,0x2021B1);  // TMRSF_VINT_FRP_M1_G0
   	SetJamram(XXXX,0x2021D1);  // TMRSF_FRPD_DQCPY_M2_G0_BD
   	SetJamram(XXXX,0x2021F1);  // TMRS_CORRECT_OFF_G0
   	SetJamram(XXXX,0x242110);  // TMRSF_SGIO_EN_PULSE3_G0
   	SetJamram(XXXX,0x242150);  // TMRSF_PCLKWC4_DBIAC_M2_G0
   	SetJamram(XXXX,0x242170);  // TMRSF_REF_2T_G0
   	SetJamram(XXXX,0x242190);  // TMRSF_RANDOM_MASKING_G0
   	////  SetJamram(XXXX,0x2421B0);  // TMRSF_DIRECT_TO_MAX_OFF_G0
   	SetJamram(XXXX,0x2421D0);  // TMRSF_RANDOM_ONLY_G0
   	SetJamram(XXXX,0x2421F0);  // TMRSF_SIVC_IDN_G0
   	SetJamram(XXXX,0x242111);  // TMRSF_PTCB3_P2_MMT_VINTY_G0
   	SetJamram(XXXX,0x242131);  // TMRSF_OCDRV_UP3_G0
   	SetJamram(XXXX,0x242151);  // TMRSF_ERH_RATIO_MIX0_G0
   	SetJamram(XXXX,0x242171);  // TMRSF_LAPG2_OC_2ND_G0
   	SetJamram(XXXX,0x242191);  // TMRSF_REF_PLAS2_OFF_G0
   	SetJamram(XXXX,0x2421B1);  // TMRSF_REF_PPS1_OFF_G0
   	SetJamram(XXXX,0x2421D1);  // TMRS_PRDL_G0
   	SetJamram(XXXX,0x2421F1);  // TMRSF_ABR_TRAS_M_G0
   	SetJamram(XXXX,0x282110);  // TMRSF_BSG_START_M0_G0
   	SetJamram(XXXX,0x282130);  // TMRSF_SERIAL_ABR_DIS_OFF_G0
   	SetJamram(XXXX,0x282150);  // TMRSF_PCLKWC3_G0_BD_DLY_M1
   	SetJamram(XXXX,0x282170);  // TMRS_PBTBYPASS_INT_G0C
   	////  SetJamram(XXXX,0x282190);  // TMRSF_FRPD_S_M2_G0_BD_1B
   	SetJamram(XXXX,0x2821B0);  // TMRSF_FRPD_S_M1_G0_BD_1B
// 	SetJamram(XXXX,0x2821D0);  // TMRSF_OVEND_P1_G0
   	SetJamram(XXXX,0x2821F0);  // TMRSF_LIOPRB_EN_M1D_G0
   	SetJamram(XXXX,0x282111);  // TMRSF_FRPD_DQCPY_M2_G0_AC
   	SetJamram(XXXX,0x282131);  // TMRSF_PNWR_EN_P2_VINTY_G0
   	////  SetJamram(XXXX,0x282151);  // TMRSF_PCLKWC4_DIS_DLY_P2_G0_BD
   	SetJamram(XXXX,0x282171);  // TMRS_DLR_SEL_IOSA_G0_AB
   	SetJamram(XXXX,0x282191);  // TMRS_DSF_TEST_Z3_PRE<1>
   	SetJamram(XXXX,0x2821D1);  // TMRS_VPTOVINT_G0
   	SetJamram(XXXX,0x2821F1);  // TMRSF_PTCB3_M0_VINTY_G0
   	SetJamram(XXXX,0x2C2110);  // TMRSF_PNS2_DLY_M1_VINTY_G0
   	SetJamram(XXXX,0x2C2130);  // TMRSF_PLSAE_PW_CTRL_G0
   	SetJamram(XXXX,0x2C2150);  // TMRSF_OCSA_P1M_P1_VINTY_G0
   	SetJamram(XXXX,0x2C2170);  // TMRS_PTC_DLY_VINTY_G0
   	SetJamram(XXXX,0x2C2190);  // TMRSF_ONE_OFF2_G0
   	SetJamram(XXXX,0x2C21B0);  // TMRS_PSEC_SEN_NORM_G0
   	SetJamram(XXXX,0x2C21D0);  // TMRSF_OC_EN_M_EXTREME_VINTY_G0
   	SetJamram(XXXX,0x2C21F0);  // TMRSF_PPS_ON_G0
   	SetJamram(XXXX,0x2C2111);  // TMRSF_PPS1_SEL0_G0
   	SetJamram(XXXX,0x2C2131);  // TMRSF_PDRAPB_P2_VINTY_G0
// 	SetJamram(XXXX,0x2C2151);  // TMRSF_CSMR_P2_VINTY_G0
   	SetJamram(XXXX,0x2C2171);  // TMRSF_OCSA_DIS_G0
   	SetJamram(XXXX,0x2C2191);  // TMRSF_P2_BETA3_SEN_M0_G0
// 	SetJamram(XXXX,0x2C21B1);  // TMRSF_P2_BETA3_ON_G0
   	SetJamram(XXXX,0x2C21D1);  // TMRSF_AIVC_IDOWN_G0
   	SetJamram(XXXX,0x2C21F1);  // TMRSF_WCSL_DIS_MAST_M1_G0_BD
   	////  SetJamram(XXXX,0x203110);  // TMRSF_FRPD_S_M2_G3_BD_0B
   	SetJamram(XXXX,0x203130);  // TMRSF_RDREP_CEN_OFF_M2_G3
   	SetJamram(XXXX,0x203150);  // TMRSF_PCLSAEN_P1_G3
   	SetJamram(XXXX,0x203170);  // TMRSF_WRRPT_CEN_RST_ON_0B_M1_L
   	SetJamram(XXXX,0x203190);  // TMRSF_IOPR_EN_M1BD_G3
   	SetJamram(XXXX,0x2031B0);  // TMRSF_VINT_FRP_M1_G3
   	SetJamram(XXXX,0x2031D0);  // TMRSF_FRPD_DQCPY_M2_G3_BD
   	SetJamram(XXXX,0x2031F0);  // TMRS_CORRECT_OFF_G3
   	SetJamram(XXXX,0x203111);  // TMRSF_SGIO_EN_PULSE3_G3
   	SetJamram(XXXX,0x203131);  // TMRSF_ONE_TMMT_EN_BA2
   	SetJamram(XXXX,0x203151);  // TMRSF_PCLKWC4_DBIAC_M2_G3
   	SetJamram(XXXX,0x203171);  // TMRSF_REF_2T_G3
   	SetJamram(XXXX,0x203191);  // TMRSF_RANDOM_MASKING_G3
   	////  SetJamram(XXXX,0x2031B1);  // TMRSF_DIRECT_TO_MAX_OFF_G3
   	SetJamram(XXXX,0x2031D1);  // TMRSF_RANDOM_ONLY_G3
   	SetJamram(XXXX,0x2031F1);  // TMRSF_SIVC_IDN_G3
   	SetJamram(XXXX,0x243110);  // TMRSF_PTCB3_P2_MMT_VINTY_G3
   	SetJamram(XXXX,0x243130);  // TMRSF_OCDRV_UP3_G3
   	SetJamram(XXXX,0x243150);  // TMRSF_ERH_RATIO_MIX0_G3
   	SetJamram(XXXX,0x243170);  // TMRSF_LAPG2_OC_2ND_G3
   	SetJamram(XXXX,0x243190);  // TMRSF_REF_PLAS2_OFF_G3
   	SetJamram(XXXX,0x2431B0);  // TMRSF_REF_PPS1_OFF_G3
   	SetJamram(XXXX,0x2431D0);  // TMRS_PRDL_G3
   	SetJamram(XXXX,0x2431F0);  // TMRSF_ABR_TRAS_M_G3
   	SetJamram(XXXX,0x243111);  // TMRSF_BSG_START_M0_G3
   	SetJamram(XXXX,0x243131);  // TMRSF_SERIAL_ABR_DIS_OFF_G3
   	SetJamram(XXXX,0x243151);  // TMRSF_PCLKWC3_G3_BD_DLY_M1
   	SetJamram(XXXX,0x243171);  // TMRS_PBTBYPASS_INT_G3C
   	SetJamram(XXXX,0x243191);  // TMRSF_FRPD_S_P1_G3_BD_1B
   	SetJamram(XXXX,0x2431B1);  // TMRSF_FRPD_S_M1_G3_BD_1B
// 	SetJamram(XXXX,0x2431D1);  // TMRSF_OVEND_P1_G3
   	SetJamram(XXXX,0x2431F1);  // TMRSF_LIOPRB_EN_M1D_G3
   	SetJamram(XXXX,0x283110);  // TMRSF_FRPD_DQCPY_M2_G3_AC
   	SetJamram(XXXX,0x283130);  // TMRSF_PNWR_EN_P2_VINTY_G3
//   	SetJamram(XXXX,0x283150);  // TMRSF_PCLKWC4_DIS_DLY_P2_G3_BD
   	SetJamram(XXXX,0x283170);  // TMRS_DLR_SEL_IOSA_G3_AB
   	SetJamram(XXXX,0x283190);  // TMRS_DSF_TEST_Z2_PRE<1>
   	SetJamram(XXXX,0x2831B0);  // TMRSF_WCSL_DIS_MAST_M2_G3_AC
   	SetJamram(XXXX,0x2831F0);  // TMRSF_PTCB3_M0_VINTY_G3
   	SetJamram(XXXX,0x283111);  // TMRSF_PNS2_DLY_M1_VINTY_G3
   	SetJamram(XXXX,0x283131);  // TMRSF_PLSAE_PW_CTRL_G3
   	SetJamram(XXXX,0x283151);  // TMRSF_OCSA_P1M_P1_VINTY_G3
   	SetJamram(XXXX,0x283171);  // TMRS_PTC_DLY_VINTY_G3
   	SetJamram(XXXX,0x283191);  // TMRSF_ONE_OFF2_G3
   	SetJamram(XXXX,0x2831B1);  // TMRS_PSEC_SEN_NORM_G3
   	SetJamram(XXXX,0x2831D1);  // TMRSF_OC_EN_M_EXTREME_VINTY_G3
   	SetJamram(XXXX,0x2831F1);  // TMRSF_PPS_ON_G3
   	SetJamram(XXXX,0x2C3110);  // TMRSF_PPS1_SEL0_G3
   	SetJamram(XXXX,0x2C3130);  // TMRSF_PDRAPB_P2_VINTY_G3
// 	SetJamram(XXXX,0x2C3150);  // TMRSF_CSMR_P2_VINTY_G3
   	SetJamram(XXXX,0x2C3170);  // TMRSF_OCSA_DIS_G3
   	SetJamram(XXXX,0x2C3190);  // TMRSF_P2_BETA3_SEN_M0_G3
// 	SetJamram(XXXX,0x2C31B0);  // TMRSF_P2_BETA3_ON_G3
   	SetJamram(XXXX,0x2C31D0);  // TMRS_PBT_TGGL_G3
   	SetJamram(XXXX,0x2C31F0);  // TMRSF_WCSL_DIS_MAST_M1_G3_BD
   	SetJamram(XXXX,0x2C3111);  // TMRSF_VREFDQ_TRIM3
   	SetJamram(XXXX,0x2C3151);  // TMRSF_VANTI_PUMP_STBY
   	SetJamram(XXXX,0x2C3171);  // TMRSF_ROS_CLK
   	SetJamram(XXXX,0x2C3191);  // TMRSF_PPR2_PCLK_OSC
   	SetJamram(XXXX,0x2C31B1);  // TMRSF_PPR2_OSC_FREQ1
   	SetJamram(XXXX,0x2C31D1);  // TMRSF_IPGM_TUNE0
   	SetJamram(XXXX,0x2C31F1);  // TMRSF_DQ_MON_EN
   	////  SetJamram(XXXX,0x204111);  // TMRSF_FRPD_F_M2_G0_BD_0B
   	SetJamram(XXXX,0x204131);  // TMRSF_RDREP_CEN_OFF_M2_G0
   	SetJamram(XXXX,0x204151);  // TMRSF_PWACSL2_M1_G0
   	SetJamram(XXXX,0x204191);  // TMRSF_LGIOCON_DIS_M1D_G0
   	SetJamram(XXXX,0x2041B1);  // TMRSF_LIOFLT_OFF_G0
   	SetJamram(XXXX,0x2041D1);  // TMRSF_FRPD_DQCPY_P1_G0_BD
   	SetJamram(XXXX,0x2041F1);  // TMRSF_LSA_BST_OFF_G0
   	SetJamram(XXXX,0x244110);  // TMRSF_SGIO_EN_PULSE2_G0
   	SetJamram(XXXX,0x244170);  // TMRSF_NWEIB_VPP2_FIX_PRE_G0
   	SetJamram(XXXX,0x244190);  // TMRSF_PRBS_MASKING_OFF_G0
   	SetJamram(XXXX,0x2441B0);  // TMRSF_FRPD_F_M1_G0_AC_0B
   	SetJamram(XXXX,0x2441D0);  // TMRSF_DS_MODE_DIS_G0
   	SetJamram(XXXX,0x2441F0);  // TMRSF_SIVCA_IUP_G0
   	SetJamram(XXXX,0x244111);  // TMRSF_PTCB3_P1_MMT_VINTY_G0
   	SetJamram(XXXX,0x244131);  // TMRSF_OCDRV_UP2_G0
   	SetJamram(XXXX,0x244151);  // TMRSF_2STEP_OC_LAB_LAG_G0
// 	SetJamram(XXXX,0x244171);  // TMRSF_LAPG1_OC_2ND_G0
   	SetJamram(XXXX,0x244191);  // TMRSF_PLAS2_OFF_G0
// 	SetJamram(XXXX,0x2441B1);  // TMRSF_LAPG1_OC_ON_G0
   	SetJamram(XXXX,0x2441D1);  // TMRS_WIDE_PRE_SEN_G0
   	SetJamram(XXXX,0x2441F1);  // TMRSF_PRAS_M3_G0
   	SetJamram(XXXX,0x284110);  // TMRSF_BSG_POV_ON_G0
   	SetJamram(XXXX,0x284130);  // TMRSF_SERIAL_PBR_DIS_G0
   	SetJamram(XXXX,0x284150);  // TMRSF_PCLKWC3_G0_AC_DLY_P1
   	SetJamram(XXXX,0x284170);  // TMRS_PBTBYPASS_INT_G0B
   	////  SetJamram(XXXX,0x284190);  // TMRSF_FRPD_F_M2_G0_BD_1B
   	SetJamram(XXXX,0x2841B0);  // TMRSF_FRPD_F_M1_G0_BD_1B
   	SetJamram(XXXX,0x2841D0);  // TMRSF_PSECON_G0
   	SetJamram(XXXX,0x2841F0);  // TMRSF_LSAEN_DIS_P1D_G0
   	SetJamram(XXXX,0x284111);  // TMRSF_FRPD_DQCPY_P1_G0_AC
   	SetJamram(XXXX,0x284131);  // TMRSF_RDREP_CEN_OFF_M1_G0
   	SetJamram(XXXX,0x284151);  // TMRSF_PCLKWC4_DIS_DLY_M2_G0_AC
   	SetJamram(XXXX,0x284171);  // TMRS_WHITE_G0_AC
   	SetJamram(XXXX,0x284191);  // TMRSF_UE_LECCUE_SEL_Z3_PRE
   	SetJamram(XXXX,0x2841D1);  // TMRSF_OC_LAB_LAG_G0
   	SetJamram(XXXX,0x2841F1);  // TMRSF_PTCB_M2_VINTY_G0
   	SetJamram(XXXX,0x2C4110);  // TMRSF_PTCB2_P1_VINTY_G0
   	SetJamram(XXXX,0x2C4130);  // TMRSF_MPTCB_M0_VINTY_G0
   	SetJamram(XXXX,0x2C4150);  // TMRSF_OCSA_P1M_P2_VINTY_G0
   	SetJamram(XXXX,0x2C4170);  // TMRSF_LAEQ_PEQ_VINTY_G0
// 	SetJamram(XXXX,0x2C4190);  // TMRSF_CSMR_DSM_P0_VINTY_G0
   	SetJamram(XXXX,0x2C41B0);  // TMRSF_P2_DELAY_ON_VINTY_G0
   	SetJamram(XXXX,0x2C41D0);  // TMRSF_AIVCA_ON_ALL_TESTMODE_G0
   	SetJamram(XXXX,0x2C41F0);  // TMRSF_PAPER_FREF_OFF_G0
// 	SetJamram(XXXX,0x2C4111);  // TMRSF_PPS1_SEL1_G0
   	SetJamram(XXXX,0x2C4131);  // TMRSF_LAEQ_EN_P_VINTY_G0
// 	SetJamram(XXXX,0x2C4151);  // TMRSF_CSMR_PKG_M0_VINTY_G0
   	SetJamram(XXXX,0x2C4171);  // TMRSF_PXID_GIDL_OFF_G0
   	SetJamram(XXXX,0x2C4191);  // TMRSF_PTC_DLY_M0_G0
   	SetJamram(XXXX,0x2C41B1);  // TMRSF_P2_BETA3_P1_G0
   	SetJamram(XXXX,0x2C41D1);  // TMRSF_RDREP_CEN_ON_P1_G0
   	SetJamram(XXXX,0x2C41F1);  // TMRSF_WCSL_DIS_MAST_P1_G0_AC
   	////  SetJamram(XXXX,0x205110);  // TMRSF_FRPD_F_M2_G3_BD_0B
   	SetJamram(XXXX,0x205130);  // TMRSF_BUSRPT_AP_OFF_L
   	SetJamram(XXXX,0x205150);  // TMRSF_PWACSL2_M1_G3
   	SetJamram(XXXX,0x205170);  // TMRSF_WRRPT_CEN_SET_ON_1B_M1_L
   	SetJamram(XXXX,0x205190);  // TMRSF_LGIOCON_DIS_M1D_G3
   	SetJamram(XXXX,0x2051B0);  // TMRSF_LIOFLT_OFF_G3
   	SetJamram(XXXX,0x2051D0);  // TMRSF_FRPD_DQCPY_P1_G3_BD
   	SetJamram(XXXX,0x2051F0);  // TMRSF_LSA_BST_OFF_G3
   	SetJamram(XXXX,0x205111);  // TMRSF_SGIO_EN_PULSE2_G3
   	SetJamram(XXXX,0x205131);  // TMRSF_ONE_TMMT_EN_BA1
   	SetJamram(XXXX,0x205171);  // TMRSF_NWEIB_VPP2_FIX_PRE_G3
   	SetJamram(XXXX,0x205191);  // TMRSF_PRBS_MASKING_OFF_G3
   	////  SetJamram(XXXX,0x2051B1);  // TMRSF_FRPD_F_M2_G3_AC_1B
   	SetJamram(XXXX,0x2051D1);  // TMRSF_DS_MODE_DIS_G3
   	SetJamram(XXXX,0x2051F1);  // TMRSF_SIVCA_IUP_G3
   	SetJamram(XXXX,0x245110);  // TMRSF_PTCB3_P1_MMT_VINTY_G3
   	SetJamram(XXXX,0x245130);  // TMRSF_OCDRV_UP2_G3
   	SetJamram(XXXX,0x245150);  // TMRSF_2STEP_OC_LAB_LAG_G3
// 	SetJamram(XXXX,0x245170);  // TMRSF_LAPG1_OC_2ND_G3
   	SetJamram(XXXX,0x245190);  // TMRSF_PLAS2_OFF_G3
// 	SetJamram(XXXX,0x2451B0);  // TMRSF_LAPG1_OC_ON_G3
   	SetJamram(XXXX,0x2451D0);  // TMRS_WIDE_PRE_SEN_G3
   	SetJamram(XXXX,0x2451F0);  // TMRSF_PRAS_M3_G3
   	SetJamram(XXXX,0x245111);  // TMRSF_BSG_POV_ON_G3
   	SetJamram(XXXX,0x245131);  // TMRSF_SERIAL_PBR_DIS_G3
   	SetJamram(XXXX,0x245151);  // TMRSF_PCLKWC3_G3_AC_DLY_P1
   	SetJamram(XXXX,0x245171);  // TMRS_PBTBYPASS_INT_G3B
   	SetJamram(XXXX,0x245191);  // TMRSF_FRPD_F_P1_G3_BD_1B
   	SetJamram(XXXX,0x2451B1);  // TMRSF_FRPD_F_M1_G3_BD_1B
   	SetJamram(XXXX,0x2451D1);  // TMRSF_PSECON_G3
   	SetJamram(XXXX,0x2451F1);  // TMRSF_LSAEN_DIS_P1D_G3
   	SetJamram(XXXX,0x285110);  // TMRSF_FRPD_DQCPY_P1_G3_AC
   	SetJamram(XXXX,0x285130);  // TMRSF_RDREP_CEN_OFF_M1_G3
   	SetJamram(XXXX,0x285150);  // TMRSF_PCLKWC4_DIS_DLY_M2_G3_AC
   	SetJamram(XXXX,0x285170);  // TMRS_WHITE_G3_AC
   	SetJamram(XXXX,0x285190);  // TMRSF_UE_LECCUE_SEL_Z2_PRE
   	SetJamram(XXXX,0x2851D0);  // TMRSF_OC_LAB_LAG_G3
   	SetJamram(XXXX,0x2851F0);  // TMRSF_PTCB_M2_VINTY_G3
   	SetJamram(XXXX,0x285111);  // TMRSF_PTCB2_P1_VINTY_G3
   	SetJamram(XXXX,0x285131);  // TMRSF_MPTCB_M0_VINTY_G3
   	SetJamram(XXXX,0x285151);  // TMRSF_OCSA_P1M_P2_VINTY_G3
   	SetJamram(XXXX,0x285171);  // TMRSF_LAEQ_PEQ_VINTY_G3
// 	SetJamram(XXXX,0x285191);  // TMRSF_CSMR_DSM_P0_VINTY_G3
   	SetJamram(XXXX,0x2851B1);  // TMRSF_P2_DELAY_ON_VINTY_G3
   	SetJamram(XXXX,0x2851D1);  // TMRSF_AIVCA_ON_ALL_TESTMODE_G3
   	SetJamram(XXXX,0x2851F1);  // TMRSF_PAPER_FREF_OFF_G3
// 	SetJamram(XXXX,0x2C5110);  // TMRSF_PPS1_SEL1_G3
   	SetJamram(XXXX,0x2C5130);  // TMRSF_LAEQ_EN_P_VINTY_G3
// 	SetJamram(XXXX,0x2C5150);  // TMRSF_CSMR_PKG_M0_VINTY_G3
   	SetJamram(XXXX,0x2C5170);  // TMRSF_PXID_GIDL_OFF_G3
   	SetJamram(XXXX,0x2C5190);  // TMRSF_PTC_DLY_M0_G3
   	SetJamram(XXXX,0x2C51B0);  // TMRSF_P2_BETA3_P1_G3
   	SetJamram(XXXX,0x2C51D0);  // TMRSF_RDREP_CEN_ON_P1_G3
   	SetJamram(XXXX,0x2C51F0);  // TMRSF_WCSL_DIS_MAST_P1_G3_AC
   	SetJamram(XXXX,0x2C5111);  // TMRSF_VREFDQ_TRIM2
   	SetJamram(XXXX,0x2C5131);  // TMRSF_PCLKWC_0B_PULSE_M1
   	SetJamram(XXXX,0x2C5151);  // TMRSF_ONE_RA_PER_BANK
   	SetJamram(XXXX,0x2C5171);  // TMRSF_ROS_POSC_DN
   	SetJamram(XXXX,0x2C5191);  // TMRSF_PGM_SEQ0
   	SetJamram(XXXX,0x2C51B1);  // TMRSF_BANK_PGM_L
   	SetJamram(XXXX,0x2C51D1);  // TMRSF_IPGM_TUNE0_MH
   	SetJamram(XXXX,0x2C51F1);  // TMRSF_CA_MON_EN
   	////  SetJamram(XXXX,0x206111);  // TMRSF_FRPD_S_M2_G0_AC_0B
   	////  SetJamram(XXXX,0x206131);  // TMRSF_RDREP_CEN_ON_M2_G0
   	SetJamram(XXXX,0x206151);  // TMRSF_PCLKWC5_EN_G0
   	SetJamram(XXXX,0x206191);  // TMRSF_LGIOCON_DIS_P1D_G0
   	SetJamram(XXXX,0x2061B1);  // TMRS_PRTC_SD_B0_G0
   	SetJamram(XXXX,0x2061D1);  // TMRSF_FRPD_DQCPY_M1_G0_BD
   	SetJamram(XXXX,0x2061F1);  // TMRSF_LSA_BST_ALWAYS_ON_G0
   	SetJamram(XXXX,0x246110);  // TMRSF_SGIO_EN_PULSE1_G0
   	SetJamram(XXXX,0x246150);  // TMRSF_PCLKWC4_DBIAC_P1_G0
   	SetJamram(XXXX,0x246170);  // TMRSF_MIN_HIT_ADDR_CARE_OFF_G0
   	SetJamram(XXXX,0x246190);  // TMRSF_MASKING_WITH_PICK_OFF_G0
   	SetJamram(XXXX,0x2461D0);  // TMRSF_DS_MODE_IUP_G0
   	SetJamram(XXXX,0x2461F0);  // TMRSF_SIVCA_SINK_UP_G0
   	SetJamram(XXXX,0x246111);  // TMRSF_PTCB3_M_MMT_VINTY_G0
   	SetJamram(XXXX,0x246131);  // TMRSF_OCDRV_UP_G0
   	SetJamram(XXXX,0x246151);  // TMRSF_ROWOPEN_P1_G0
   	SetJamram(XXXX,0x246171);  // TMRS_EDS_ECC_TEST_G0_L
   	SetJamram(XXXX,0x246191);  // TMRSF_PLAS1_OFF_G0
   	SetJamram(XXXX,0x2461B1);  // TMRSF_PPS1_OFF_G0
   	SetJamram(XXXX,0x2461D1);  // TMRS_PRDL_AP_M0_VINTY_G0
   	SetJamram(XXXX,0x2461F1);  // TMRSF_PRAS_P1_G0
   	SetJamram(XXXX,0x286110);  // TMRSF_BSG_POV_P0_G0
   	SetJamram(XXXX,0x286130);  // TMRSF_SERIAL_PBR_DIS_OFF_G0
   	SetJamram(XXXX,0x286150);  // TMRSF_PCLKWC3_G0_AC_DLY_M1
   	SetJamram(XXXX,0x286170);  // TMRS_PBTBYPASS_INT_G0A
   	////  SetJamram(XXXX,0x286190);  // TMRSF_FRPD_S_M2_G0_AC_1B
   	SetJamram(XXXX,0x2861B0);  // TMRSF_FRPD_S_M1_G0_AC_1B
   	SetJamram(XXXX,0x2861D0);  // TMRSF_PWACSL2_P1_G0
   	SetJamram(XXXX,0x2861F0);  // TMRSF_LSAEN_DIS_M1D_G0
   	SetJamram(XXXX,0x286111);  // TMRSF_FRPD_DQCPY_M1_G0_AC
   	SetJamram(XXXX,0x286131);  // TMRSF_RDREP_CEN_OFF_P1_G0
   	SetJamram(XXXX,0x286151);  // TMRSF_PCLKWC4_DIS_DLY_M2_G0_BD
   	SetJamram(XXXX,0x286171);  // TMRSF_AIVCLANG_PRD_CTRL_G0
   	SetJamram(XXXX,0x286191);  // TMRSF_ACT_X8_DIS_OPT1_G0
   	SetJamram(XXXX,0x2861B1);  // TMRSF_WCSL_DIS_MAST_M2_G0_AC
   	SetJamram(XXXX,0x2861D1);  // TMRSF_ONE_SCAN_PORT_G0
   	SetJamram(XXXX,0x2861F1);  // TMRSF_PTCB_M1_VINTY_G0
   	SetJamram(XXXX,0x2C6110);  // TMRSF_PTCB2_M1_VINTY_G0
   	SetJamram(XXXX,0x2C6130);  // TMRSF_MPTCB_P1_VINTY_G0
   	SetJamram(XXXX,0x2C6150);  // TMRSF_OCSA_P1M_P3_VINTY_G0
   	SetJamram(XXXX,0x2C6170);  // TMRSF_PNS2_DLY_M0_VINTY_G0
   	SetJamram(XXXX,0x2C6190);  // TMRSF_BCAT_THINNING_NWEIB_VINTY_G0
   	SetJamram(XXXX,0x2C61B0);  // TMRSF_PPS_P0_VINTY_G0
   	SetJamram(XXXX,0x2C61D0);  // TMRSF_PVINTAS_P0_G0
   	SetJamram(XXXX,0x2C61F0);  // TMRSF_PLAS1_SEL0_G0
// 	////  SetJamram(XXXX,0x2C6111);  // TMRSF_PNS2_SEL0_G0
// 	SetJamram(XXXX,0x2C6131);  // TMRSF_CSMR_M0_VINTY_G0
// 	SetJamram(XXXX,0x2C6151);  // TMRSF_CSMR_PKG_P0_VINTY_G0
   	SetJamram(XXXX,0x2C6171);  // TMRSF_PAPER_PRENI_DIS_PRE_G0
   	SetJamram(XXXX,0x2C6191);  // TMRSF_PTC_DLY_P0_G0
// 	////  SetJamram(XXXX,0x2C61B1);  // TMRSF_P2_BETA3_P0_G0
   	SetJamram(XXXX,0x2C61D1);  // TMRSF_RDREP_CEN_ON_M1_G0
   	SetJamram(XXXX,0x2C61F1);  // TMRSF_WCSL_DIS_MAST_M1_G0_AC
   	////  SetJamram(XXXX,0x207110);  // TMRSF_FRPD_S_M2_G3_AC_0B
   	////  SetJamram(XXXX,0x207130);  // TMRSF_RDREP_CEN_ON_M2_G3
   	SetJamram(XXXX,0x207150);  // TMRSF_PCLKWC5_EN_G3
   	SetJamram(XXXX,0x207170);  // TMRSF_WRRPT_CEN_SET_ON_0B_M1_L
   	SetJamram(XXXX,0x207190);  // TMRSF_LGIOCON_DIS_P1D_G3
   	SetJamram(XXXX,0x2071B0);  // TMRS_PRTC_SD_B0_G3
   	SetJamram(XXXX,0x2071D0);  // TMRSF_FRPD_DQCPY_M1_G3_BD
   	SetJamram(XXXX,0x2071F0);  // TMRSF_LSA_BST_ALWAYS_ON_G3
   	SetJamram(XXXX,0x207111);  // TMRSF_SGIO_EN_PULSE1_G3
   	SetJamram(XXXX,0x207131);  // TMRSF_ONE_TMMT_EN_BA0
   	SetJamram(XXXX,0x207151);  // TMRSF_PCLKWC4_DBIAC_P1_G3
   	SetJamram(XXXX,0x207171);  // TMRSF_MIN_HIT_ADDR_CARE_OFF_G3
   	SetJamram(XXXX,0x207191);  // TMRSF_MASKING_WITH_PICK_OFF_G3
   	SetJamram(XXXX,0x2071B1);  // TMRSF_FRPD_F_M1_G3_AC_1B
   	SetJamram(XXXX,0x2071D1);  // TMRSF_DS_MODE_IUP_G3
   	SetJamram(XXXX,0x2071F1);  // TMRSF_SIVCA_SINK_UP_G3
   	SetJamram(XXXX,0x247110);  // TMRSF_PTCB3_M_MMT_VINTY_G3
   	SetJamram(XXXX,0x247130);  // TMRSF_OCDRV_UP_G3
   	SetJamram(XXXX,0x247150);  // TMRSF_ROWOPEN_P1_G3
   	SetJamram(XXXX,0x247170);  // TMRS_EDS_ECC_TEST_G3_L
   	SetJamram(XXXX,0x247190);  // TMRSF_PLAS1_OFF_G3
   	SetJamram(XXXX,0x2471B0);  // TMRSF_PPS1_OFF_G3
   	SetJamram(XXXX,0x2471D0);  // TMRS_PRDL_AP_M0_VINTY_G3
   	SetJamram(XXXX,0x2471F0);  // TMRSF_PRAS_P1_G3
   	SetJamram(XXXX,0x247111);  // TMRSF_BSG_POV_P0_G3
   	SetJamram(XXXX,0x247131);  // TMRSF_SERIAL_PBR_DIS_OFF_G3
   	SetJamram(XXXX,0x247151);  // TMRSF_PCLKWC3_G3_AC_DLY_M1
   	SetJamram(XXXX,0x247171);  // TMRS_PBTBYPASS_INT_G3A
   	SetJamram(XXXX,0x247191);  // TMRSF_FRPD_S_P1_G3_AC_1B
   	SetJamram(XXXX,0x2471B1);  // TMRSF_FRPD_S_M1_G3_AC_1B
   	SetJamram(XXXX,0x2471D1);  // TMRSF_PWACSL2_P1_G3
   	SetJamram(XXXX,0x2471F1);  // TMRSF_LSAEN_DIS_M1D_G3
   	SetJamram(XXXX,0x287110);  // TMRSF_FRPD_DQCPY_M1_G3_AC
   	SetJamram(XXXX,0x287130);  // TMRSF_RDREP_CEN_OFF_P1_G3
   	SetJamram(XXXX,0x287150);  // TMRSF_PCLKWC4_DIS_DLY_M2_G3_BD
   	SetJamram(XXXX,0x287170);  // TMRSF_AIVCLANG_PRD_CTRL_G3
   	SetJamram(XXXX,0x2871D0);  // TMRSF_ONE_SCAN_PORT_G3
   	SetJamram(XXXX,0x2871F0);  // TMRSF_PTCB_M1_VINTY_G3
   	SetJamram(XXXX,0x287111);  // TMRSF_PTCB2_M1_VINTY_G3
   	SetJamram(XXXX,0x287131);  // TMRSF_MPTCB_P1_VINTY_G3
   	SetJamram(XXXX,0x287151);  // TMRSF_OCSA_P1M_P3_VINTY_G3
   	SetJamram(XXXX,0x287171);  // TMRSF_PNS2_DLY_M0_VINTY_G3
   	SetJamram(XXXX,0x287191);  // TMRSF_BCAT_THINNING_NWEIB_VINTY_G3
   	SetJamram(XXXX,0x2871B1);  // TMRSF_PPS_P0_VINTY_G3
   	SetJamram(XXXX,0x2871D1);  // TMRSF_PVINTAS_P0_G3
   	SetJamram(XXXX,0x2871F1);  // TMRSF_PLAS1_SEL0_G3
// 	////  SetJamram(XXXX,0x2C7110);  // TMRSF_PNS2_SEL0_G3
// 	SetJamram(XXXX,0x2C7130);  // TMRSF_CSMR_M0_VINTY_G3
// 	SetJamram(XXXX,0x2C7150);  // TMRSF_CSMR_PKG_P0_VINTY_G3
   	SetJamram(XXXX,0x2C7170);  // TMRSF_PAPER_PRENI_DIS_PRE_G3
   	SetJamram(XXXX,0x2C7190);  // TMRSF_PTC_DLY_P0_G3
// 	////  SetJamram(XXXX,0x2C71B0);  // TMRSF_P2_BETA3_P0_G3
   	SetJamram(XXXX,0x2C71D0);  // TMRSF_RDREP_CEN_ON_M1_G3
   	SetJamram(XXXX,0x2C71F0);  // TMRSF_WCSL_DIS_MAST_M1_G3_AC
   	SetJamram(XXXX,0x2C7111);  // TMRSF_VREFDQ_TRIM1
   	SetJamram(XXXX,0x2C7131);  // TMRSF_PD_DUTY_UP_DQS_C_0B
   	SetJamram(XXXX,0x2C7151);  // TMRSF_PPR_DQIN_BLOCK_EN
   	SetJamram(XXXX,0x2C7171);  // TMRSF_ROS_POSC_UP
   	////  SetJamram(XXXX,0x2C7191);  // TMRSF_PPR_EN_L
   	SetJamram(XXXX,0x2C71B1);  // TMRSF_PPR2_OSC_FREQ2
   	SetJamram(XXXX,0x2C71D1);  // TMRSF_IPGM_TUNE1
   	SetJamram(XXXX,0x2C71F1);  // TMRSF_TM11DQ01EN
   	SetJamram(XXXX,0x208111);  // TMRSF_FRPD_S_P1_G0_AC_1B
   	////  SetJamram(XXXX,0x208131);  // TMRSF_DVFSC_TRP_M_G0
   	SetJamram(XXXX,0x208151);  // TMRSF_PTCB_P1_VINTY_G0
   	SetJamram(XXXX,0x208191);  // TMRSF_LIOPRB_DIS_P1D_G0
   	SetJamram(XXXX,0x2081B1);  // TMRSF_IOPR_DIS_P1D_G0
   	SetJamram(XXXX,0x2081D1);  // TMRSF_CD_PG_BACTRL_OFF_G0
   	SetJamram(XXXX,0x2081F1);  // TMRSF_LSA_BST_RD_2ND_G0
   	SetJamram(XXXX,0x248110);  // TMRSF_WCSL_DIS_MAST_M2_G0_BD
   	SetJamram(XXXX,0x248130);  // TMRSF_SGIO_REF_CODE3_G0
   	SetJamram(XXXX,0x248150);  // TMRSF_PCLKWC4_DEPTH_P1_G0_AC
   	SetJamram(XXXX,0x248170);  // TMRSF_FRPD_DBI_P1_G0_AC
   	SetJamram(XXXX,0x248190);  // TMRSF_PLSAE_DLY_CTRL_P2_G0
   	SetJamram(XXXX,0x2481B0);  // TMRS_DWL_ODD_G0
   	SetJamram(XXXX,0x2481D0);  // TMRSF_SERIAL_FREF_DIS_OFF_G0
   	SetJamram(XXXX,0x2481F0);  // TMRSF_AIVCLSA_IUP_G0
   	SetJamram(XXXX,0x248111);  // TMRSF_ONE_HACKER_INIT_G0
   	SetJamram(XXXX,0x248131);  // TMRSF_PLAS2_OC_ON_G0
   	SetJamram(XXXX,0x248151);  // TMRS_PSEC_P2_OPEN_G0
   	SetJamram(XXXX,0x248171);  // TMRSF_PXEN_M0_G0
   	SetJamram(XXXX,0x248191);  // TMRSF_REF_PNS1_OFF_G0
   	SetJamram(XXXX,0x2481B1);  // TMRS_PSECON_PI_G0
   	SetJamram(XXXX,0x2481D1);  // TMRSF_AIVCISO_EDGE_OFF_G0
   	SetJamram(XXXX,0x2481F1);  // TMRS_PRDL_AP_P0_VINTY_G0
   	SetJamram(XXXX,0x288110);  // TMRSF_BSG_FLOAT_M1_G0
   	SetJamram(XXXX,0x288130);  // TMRSF_BSG_START_P0_G0
   	SetJamram(XXXX,0x288150);  // TMRSF_PCLKWC4_MAST_P1_G0_BD
   	SetJamram(XXXX,0x288170);  // TMRSF_PCLKWC3_ONLY_G0_BD_DLY_P1
   	SetJamram(XXXX,0x288190);  // TMRSF_SIVC_DD1_SINK_UP_G0
   	SetJamram(XXXX,0x2881B0);  // TMRS_IDD2P_SPMOS_L
   	SetJamram(XXXX,0x2881D0);  // TMRSF_REF_RED_DIS_G0
   	SetJamram(XXXX,0x2881F0);  // TMRSF_LSAEN_P1D_G0
   	SetJamram(XXXX,0x288111);  // TMRSF_FRPD_ERR_DQCPY_M1_G0_AC
   	SetJamram(XXXX,0x288131);  // TMRSF_PNS2_DLY_P1_VINTY_G0
   	SetJamram(XXXX,0x288151);  // TMRSF_PCLKWC4_DIS_DLY_M1_G0_AC
   	SetJamram(XXXX,0x288171);  // TMRSF_RCSLE_AP_PW_M_G0
   	SetJamram(XXXX,0x288191);  // TMRSF_SIVCLP_IUP_G0
   	SetJamram(XXXX,0x2881D1);  // TMRSF_RFM_OFF_G0
   	SetJamram(XXXX,0x2881F1);  // TMRSF_ONE_MIN_MAX_ZERO_G0
   	SetJamram(XXXX,0x2C8110);  // TMRS_SUBADJ_G0
   	SetJamram(XXXX,0x2C8130);  // TMRSF_PDRAPB_M2_VINTY_G0
   	SetJamram(XXXX,0x2C8150);  // TMRSF_PNWR_EN_M1_VINTY_G0
   	SetJamram(XXXX,0x2C8170);  // TMRSF_OCSA_P1M_EXTREME_VINTY_G0
   	SetJamram(XXXX,0x2C8190);  // TMRSF_ONE_OFF_G0
   	SetJamram(XXXX,0x2C81B0);  // TMRSF_PPS_M0_VINTY_G0
   	SetJamram(XXXX,0x2C81D0);  // TMRSF_REF_1P5T_G0
   	SetJamram(XXXX,0x2C81F0);  // TMRSF_LAPG_OC_ON_G0
// 	SetJamram(XXXX,0x2C8111);  // TMRSF_PLAS1_SEL1_G0


	}
#endif

//501~1000
#if 1
	{
   	SetJamram(XXXX,0x2C8131);  // TMRSF_PNS2_SEL1_G0	501
// 	SetJamram(XXXX,0x2C8151);  // TMRSF_CSMR_M1_VINTY_G0	502
   	SetJamram(XXXX,0x2C8171);  // TMRSF_PTCB2_M2_VINTY_G0	503
   	SetJamram(XXXX,0x2C8191);  // TMRSF_NWEIB_VPP2_EN_G0	504
   	SetJamram(XXXX,0x2C81B1);  // TMRSF_P2_BETA3_SEN_P0_G0	505
   	SetJamram(XXXX,0x2C81D1);  // TMRSF_DRFM_ON_G0	506
   	SetJamram(XXXX,0x2C81F1);  // TMRSF_ONE_CARE_3_4TH_X2_ON_G0	507
   	SetJamram(XXXX,0x209110);  // TMRSF_FRPD_F_M1_G3_AC_0B	508
   	////  SetJamram(XXXX,0x209130);  // TMRSF_DVFSC_TRP_M_G3	509
   	SetJamram(XXXX,0x209150);  // TMRSF_PTCB_P1_VINTY_G3	510
   	SetJamram(XXXX,0x209170);  // TMRSF_WRRPT_CEN_RST_ON_1B_P1_L	511
   	SetJamram(XXXX,0x209190);  // TMRSF_LIOPRB_DIS_P1D_G3	512
   	SetJamram(XXXX,0x2091B0);  // TMRSF_IOPR_DIS_P1D_G3	513
   	SetJamram(XXXX,0x2091D0);  // TMRSF_CD_PG_BACTRL_OFF_G3	514
   	SetJamram(XXXX,0x2091F0);  // TMRSF_LSA_BST_RD_2ND_G3	515
   	SetJamram(XXXX,0x209131);  // TMRSF_SGIO_REF_CODE3_G3	516
   	SetJamram(XXXX,0x209151);  // TMRSF_PCLKWC4_DEPTH_P1_G3_AC	517
   	SetJamram(XXXX,0x209171);  // TMRSF_FRPD_DBI_P1_G3_AC	518
   	SetJamram(XXXX,0x209191);  // TMRSF_PLSAE_DLY_CTRL_P2_G3	519
   	SetJamram(XXXX,0x2091B1);  // TMRS_DWL_ODD_G3	520
   	SetJamram(XXXX,0x2091D1);  // TMRSF_SERIAL_FREF_DIS_OFF_G3	521
   	SetJamram(XXXX,0x2091F1);  // TMRSF_AIVCLSA_IUP_G3	522
   	SetJamram(XXXX,0x249110);  // TMRSF_ONE_HACKER_INIT_G3	523
   	SetJamram(XXXX,0x249130);  // TMRSF_PLAS2_OC_ON_G3	524
   	SetJamram(XXXX,0x249150);  // TMRS_PSEC_P2_OPEN_G3	525
   	SetJamram(XXXX,0x249170);  // TMRSF_PXEN_M0_G3	526
   	SetJamram(XXXX,0x249190);  // TMRSF_REF_PNS1_OFF_G3	527
   	SetJamram(XXXX,0x2491B0);  // TMRS_PSECON_PI_G3	528
   	SetJamram(XXXX,0x2491D0);  // TMRSF_AIVCISO_EDGE_OFF_G3	529
   	SetJamram(XXXX,0x2491F0);  // TMRS_PRDL_AP_P0_VINTY_G3	530
   	SetJamram(XXXX,0x249111);  // TMRSF_BSG_FLOAT_M1_G3	531
   	SetJamram(XXXX,0x249131);  // TMRSF_BSG_START_P0_G3	532
   	SetJamram(XXXX,0x249151);  // TMRSF_PCLKWC4_MAST_P1_G3_BD	533
   	SetJamram(XXXX,0x249171);  // TMRSF_PCLKWC3_ONLY_G3_BD_DLY_P1	534
   	SetJamram(XXXX,0x249191);  // TMRSF_FRPD_F_P1_G0_AC_1B	535
   	SetJamram(XXXX,0x2491B1);  // TMRSF_FRPD_F_M1_G0_AC_1B	536
   	SetJamram(XXXX,0x2491D1);  // TMRSF_REF_RED_DIS_G3	537
   	SetJamram(XXXX,0x2491F1);  // TMRSF_LSAEN_P1D_G3	538
   	SetJamram(XXXX,0x289110);  // TMRSF_FRPD_ERR_DQCPY_M1_G3_AC	539
   	SetJamram(XXXX,0x289130);  // TMRSF_PNS2_DLY_P1_VINTY_G3	540
   	SetJamram(XXXX,0x289150);  // TMRSF_PCLKWC4_DIS_DLY_M1_G3_AC	541
   	SetJamram(XXXX,0x289170);  // TMRSF_RCSLE_AP_PW_M_G3	542
   	SetJamram(XXXX,0x2891D0);  // TMRSF_RFM_OFF_G3	543
   	SetJamram(XXXX,0x2891F0);  // TMRSF_ONE_MIN_MAX_ZERO_G3	544
   	SetJamram(XXXX,0x289111);  // TMRS_SUBADJ_G3	545
   	SetJamram(XXXX,0x289131);  // TMRSF_PDRAPB_M2_VINTY_G3	546
   	SetJamram(XXXX,0x289151);  // TMRSF_PNWR_EN_M1_VINTY_G3	547
   	SetJamram(XXXX,0x289171);  // TMRSF_OCSA_P1M_EXTREME_VINTY_G3	548
   	SetJamram(XXXX,0x289191);  // TMRSF_ONE_OFF_G3	549
   	SetJamram(XXXX,0x2891B1);  // TMRSF_PPS_M0_VINTY_G3	550
   	SetJamram(XXXX,0x2891D1);  // TMRSF_REF_1P5T_G3	551
   	SetJamram(XXXX,0x2891F1);  // TMRSF_LAPG_OC_ON_G3	552
// 	SetJamram(XXXX,0x2C9110);  // TMRSF_PLAS1_SEL1_G3	553
   	SetJamram(XXXX,0x2C9130);  // TMRSF_PNS2_SEL1_G3	554
// 	SetJamram(XXXX,0x2C9150);  // TMRSF_CSMR_M1_VINTY_G3	555
   	SetJamram(XXXX,0x2C9170);  // TMRSF_PTCB2_M2_VINTY_G3	556
   	SetJamram(XXXX,0x2C9190);  // TMRSF_NWEIB_VPP2_EN_G3	557
   	SetJamram(XXXX,0x2C91B0);  // TMRSF_P2_BETA3_SEN_P0_G3	558
   	SetJamram(XXXX,0x2C91D0);  // TMRSF_DRFM_ON_G3	559
   	SetJamram(XXXX,0x2C91F0);  // TMRSF_ONE_CARE_3_4TH_X2_ON_G3	560
   	SetJamram(XXXX,0x2C9111);  // TMRSF_VREFDQ_OFF	561
   	SetJamram(XXXX,0x2C9131);  // TMRSF_VREF_AMP_DN1_DQ_0B	562
   	SetJamram(XXXX,0x2C9151);  // TMRSF_CURRENT_DIV0_L	563
   	SetJamram(XXXX,0x2C9171);  // TMRSF_PD_DUTY_DN_DQS_C_0B	564
   	SetJamram(XXXX,0x2C9191);  // TMRSF_ROS_RUP_2X	565
   	SetJamram(XXXX,0x2C91B1);  // TMRSF_INVALID_PPR_DIS	566
   	SetJamram(XXXX,0x2C91D1);  // TMRSF_IPGM_TUNE1_H	567
   	SetJamram(XXXX,0x2C91F1);  // TMRSF_VANTI_PUMP0_OFF	568
   	SetJamram(XXXX,0x20A111);  // TMRSF_FRPD_S_P1_G0_BD_0B	569
   	SetJamram(XXXX,0x20A131);  // TMRSF_FRPD_S_M1_G0_BD_0B	570
   	SetJamram(XXXX,0x20A151);  // TMRSF_OCSA_NOR_REF_VINTY_G0	571
   	SetJamram(XXXX,0x20A191);  // TMRSF_LIOPRB_DIS_M1D_G0	572
   	SetJamram(XXXX,0x20A1B1);  // TMRSF_ORG_DVFSC_PLSAEN_G0	573
   	SetJamram(XXXX,0x20A1D1);  // TMRS_PRTC_DLR_G0	574
   	SetJamram(XXXX,0x20A1F1);  // TMRS_ERRBNKSEL_G0	575
   	SetJamram(XXXX,0x24A110);  // TMRSF_GIOSPLIT_G0	576
   	SetJamram(XXXX,0x24A130);  // TMRSF_SGIO_REF_CODE2_G0	577
   	SetJamram(XXXX,0x24A150);  // TMRSF_PCLKWC4_DEPTH_P1_G0_BD	578
   	SetJamram(XXXX,0x24A170);  // TMRSF_FRPD_DBI_P1_G0_BD	579
   	SetJamram(XXXX,0x24A190);  // TMRSF_PLSAE_DLY_CTRL_M2_G0	580
   	SetJamram(XXXX,0x24A1B0);  // TMRSF_SEED_UPDATE_OFF_G0	581
   	SetJamram(XXXX,0x24A1D0);  // TMRSF_SERIAL_FREF_DIS_G0	582
   	SetJamram(XXXX,0x24A1F0);  // TMRSF_AIVCLP_IDDX_UP2_G0	583
   	SetJamram(XXXX,0x24A111);  // TMRSF_ONE_COUNTER_RESET_G0	584
   	SetJamram(XXXX,0x24A131);  // TMRSF_PLAS1_OC_OFF_G0	585
   	////  SetJamram(XXXX,0x24A151);  // TMRSF_FAST_OC_OFFB_G0	586
   	SetJamram(XXXX,0x24A171);  // TMRSF_PXEN_M1_G0	587
   	SetJamram(XXXX,0x24A191);  // TMRSF_VRC_ON_VINTY_G0	588
   	SetJamram(XXXX,0x24A1B1);  // TMRSF_IDD3N_ADJ_G0	589
   	SetJamram(XXXX,0x24A1D1);  // TMRSF_RD_PG_COND_G0	590
   	SetJamram(XXXX,0x24A1F1);  // TMRSF_PNS1_SEL0_G0	591
   	SetJamram(XXXX,0x28A110);  // TMRSF_BSG_PRE_M0_G0	592
   	SetJamram(XXXX,0x28A130);  // TMRSF_BSG_START_P1_G0	593
   	SetJamram(XXXX,0x28A150);  // TMRSF_PCLKWC4_MAST_M1_G0_BD	594
   	SetJamram(XXXX,0x28A170);  // TMRSF_PCLKWC3_ONLY_G0_BD_DLY_M1	595
   	SetJamram(XXXX,0x28A190);  // TMRS_DLR_SEL_IOSA_G0_CD	596
   	SetJamram(XXXX,0x28A1B0);  // TMRS_IDD2P_SNMOS_L	597
   	SetJamram(XXXX,0x28A1D0);  // TMRS_MWL4_C2C_G0	598
   	SetJamram(XXXX,0x28A1F0);  // TMRSF_LSAEN_M1D_G0	599
   	SetJamram(XXXX,0x28A131);  // TMRSF_PNS2_DLY_P0_VINTY_G0	600
   	SetJamram(XXXX,0x28A151);  // TMRSF_PCLKWC4_DIS_DLY_M1_G0_BD	601
   	SetJamram(XXXX,0x28A171);  // TMRSF_RCSLE_AP_PW_P1_G0	602
   	SetJamram(XXXX,0x28A191);  // TMRSF_SIVCLSA_IUP_G0	603
   	SetJamram(XXXX,0x28A1D1);  // TMRSF_LAEQ_EN_M_VINTY_G0	604
   	SetJamram(XXXX,0x28A1F1);  // TMRSF_ONE_OSC_FAST_G0	605
   	SetJamram(XXXX,0x2CA110);  // TMRSF_REF_LAB1VT_G0	606
   	SetJamram(XXXX,0x2CA130);  // TMRSF_PRAS_M2_VINTY_G0	607
// 	SetJamram(XXXX,0x2CA150);  // TMRSF_OCSA_P1M_M0_VINTY_G0	608
   	SetJamram(XXXX,0x2CA170);  // TMRSF_CRFSA_P2P_P0_VINTY_G0	609
   	SetJamram(XXXX,0x2CA190);  // TMRS_MRS_N_G0	610
   	SetJamram(XXXX,0x2CA1B0);  // TMRSF_PPS1_SEN_EN_G0	611
   	SetJamram(XXXX,0x2CA1D0);  // TMRSF_REF_1P3T_G0	612
   	SetJamram(XXXX,0x2CA1F0);  // TMRSF_PVINTAS_M0_G0	613
   	SetJamram(XXXX,0x2CA111);  // TMRSF_REF_PLAS1_OFF_G0	614
   	SetJamram(XXXX,0x2CA131);  // TMRSF_PNS3_SEL0_G0	615
// 	SetJamram(XXXX,0x2CA151);  // TMRSF_CSMR_M2_VINTY_G0	616
   	SetJamram(XXXX,0x2CA171);  // TMRSF_PTCB3_M2_VINTY_G0	617
   	SetJamram(XXXX,0x2CA191);  // TMRSF_REF_NWEIB_TOGGLE_G0	618
   	SetJamram(XXXX,0x2CA1B1);  // TMRSF_P2_BETA3_SEN_P1_G0	619
   	SetJamram(XXXX,0x2CA1D1);  // TMRS_MWL20_WRED_G0	620
   	////  SetJamram(XXXX,0x2CA1F1);  // TMRSF_ONE_CARE_3_4TH_ON_G0	621
   	SetJamram(XXXX,0x20B110);  // TMRSF_FRPD_S_P1_G3_BD_0B	622
   	SetJamram(XXXX,0x20B130);  // TMRSF_FRPD_S_M1_G3_BD_0B	623
   	SetJamram(XXXX,0x20B150);  // TMRSF_OCSA_NOR_REF_VINTY_G3	624
   	SetJamram(XXXX,0x20B170);  // TMRSF_WRRPT_CEN_RST_ON_0B_P1_L	625
   	SetJamram(XXXX,0x20B190);  // TMRSF_LIOPRB_DIS_M1D_G3	626
   	SetJamram(XXXX,0x20B1B0);  // TMRSF_ORG_DVFSC_PLSAEN_G3	627
   	SetJamram(XXXX,0x20B1D0);  // TMRS_PRTC_DLR_G3	628
   	SetJamram(XXXX,0x20B1F0);  // TMRS_ERRBNKSEL_G3	629
   	SetJamram(XXXX,0x20B111);  // TMRSF_GIOSPLIT_G3	630
   	SetJamram(XXXX,0x20B131);  // TMRSF_SGIO_REF_CODE2_G3	631
   	SetJamram(XXXX,0x20B151);  // TMRSF_PCLKWC4_DEPTH_P1_G3_BD	632
   	SetJamram(XXXX,0x20B171);  // TMRSF_FRPD_DBI_P1_G3_BD	633
   	SetJamram(XXXX,0x20B191);  // TMRSF_PLSAE_DLY_CTRL_M2_G3	634
   	SetJamram(XXXX,0x20B1B1);  // TMRSF_SEED_UPDATE_OFF_G3	635
   	SetJamram(XXXX,0x20B1D1);  // TMRSF_SERIAL_FREF_DIS_G3	636
   	SetJamram(XXXX,0x20B1F1);  // TMRSF_AIVCLP_IDDX_UP2_G3	637
   	SetJamram(XXXX,0x24B110);  // TMRSF_ONE_COUNTER_RESET_G3	638
   	SetJamram(XXXX,0x24B130);  // TMRSF_PLAS1_OC_OFF_G3	639
   	////  SetJamram(XXXX,0x24B150);  // TMRSF_FAST_OC_OFFB_G3	640
   	SetJamram(XXXX,0x24B170);  // TMRSF_PXEN_M1_G3	641
   	SetJamram(XXXX,0x24B190);  // TMRSF_VRC_ON_VINTY_G3	642
   	SetJamram(XXXX,0x24B1B0);  // TMRSF_IDD3N_ADJ_G3	643
   	SetJamram(XXXX,0x24B1D0);  // TMRSF_RD_PG_COND_G3	644
   	SetJamram(XXXX,0x24B1F0);  // TMRSF_PNS1_SEL0_G3	645
   	SetJamram(XXXX,0x24B111);  // TMRSF_BSG_PRE_M0_G3	646
   	SetJamram(XXXX,0x24B131);  // TMRSF_BSG_START_P1_G3	647
   	SetJamram(XXXX,0x24B151);  // TMRSF_PCLKWC4_MAST_M1_G3_BD	648
   	SetJamram(XXXX,0x24B171);  // TMRSF_PCLKWC3_ONLY_G3_BD_DLY_M1	649
   	SetJamram(XXXX,0x24B191);  // TMRS_DLR_SEL_IOSA_G3_CD	650
   	////  SetJamram(XXXX,0x24B1B1);  // TMRSF_FRPD_S_M2_G3_BD_1B	651
   	SetJamram(XXXX,0x24B1D1);  // TMRS_MWL4_C2C_G3	652
   	SetJamram(XXXX,0x24B1F1);  // TMRSF_LSAEN_M1D_G3	653
   	SetJamram(XXXX,0x28B110);  // TMRS_ERRINJ_L	654
   	SetJamram(XXXX,0x28B130);  // TMRSF_PNS2_DLY_P0_VINTY_G3	655
   	SetJamram(XXXX,0x28B150);  // TMRSF_PCLKWC4_DIS_DLY_M1_G3_BD	656
   	SetJamram(XXXX,0x28B170);  // TMRSF_RCSLE_AP_PW_P1_G3	657
   	SetJamram(XXXX,0x28B190);  // TMRSF_ACT_X8_DIS_OPT1_G3	658
   	SetJamram(XXXX,0x28B1D0);  // TMRSF_LAEQ_EN_M_VINTY_G3	659
   	SetJamram(XXXX,0x28B1F0);  // TMRSF_ONE_OSC_FAST_G3	660
   	SetJamram(XXXX,0x28B111);  // TMRSF_REF_LAB1VT_G3	661
   	SetJamram(XXXX,0x28B131);  // TMRSF_PRAS_M2_VINTY_G3	662
// 	SetJamram(XXXX,0x28B151);  // TMRSF_OCSA_P1M_M0_VINTY_G3	663
   	SetJamram(XXXX,0x28B171);  // TMRSF_CRFSA_P2P_P0_VINTY_G3	664
   	SetJamram(XXXX,0x28B191);  // TMRS_MRS_N_G3	665
   	SetJamram(XXXX,0x28B1B1);  // TMRSF_PPS1_SEN_EN_G3	666
   	SetJamram(XXXX,0x28B1D1);  // TMRSF_REF_1P3T_G3	667
   	SetJamram(XXXX,0x28B1F1);  // TMRSF_PVINTAS_M0_G3	668
   	SetJamram(XXXX,0x2CB110);  // TMRSF_REF_PLAS1_OFF_G3	669
   	SetJamram(XXXX,0x2CB130);  // TMRSF_PNS3_SEL0_G3	670
// 	SetJamram(XXXX,0x2CB150);  // TMRSF_CSMR_M2_VINTY_G3	671
   	SetJamram(XXXX,0x2CB170);  // TMRSF_PTCB3_M2_VINTY_G3	672
   	SetJamram(XXXX,0x2CB190);  // TMRSF_REF_NWEIB_TOGGLE_G3	673
   	SetJamram(XXXX,0x2CB1B0);  // TMRSF_P2_BETA3_SEN_P1_G3	674
   	SetJamram(XXXX,0x2CB1D0);  // TMRS_MWL20_WRED_G3	675
   	////  SetJamram(XXXX,0x2CB1F0);  // TMRSF_ONE_CARE_3_4TH_ON_G3	676
   	SetJamram(XXXX,0x2CB111);  // TMRSF_ADD_RES_FOOTER0_L	677
   	SetJamram(XXXX,0x2CB131);  // TMRSF_VREF_AMP_UP1_DQ_0B	678
   	SetJamram(XXXX,0x2CB151);  // TMRSF_ECS_KEEP_GOING	679
   	SetJamram(XXXX,0x2CB171);  // TMRSF_PREAMP_BUF_CURRENT_DN7	680
   	SetJamram(XXXX,0x2CB191);  // TMRSF_ROS_FREQ_DIV	681
   	SetJamram(XXXX,0x2CB1B1);  // TMRSF_AIVCA_EDGE_CURRENT_DN_L	682
   	SetJamram(XXXX,0x2CB1D1);  // TMRSF_IPGM_TUNE1_Q	683
   	SetJamram(XXXX,0x2CB1F1);  // TMRSF_VANTIP_DN3	684
   	SetJamram(XXXX,0x20C111);  // TMRSF_FRPD_F_P1_G0_BD_0B	685
   	SetJamram(XXXX,0x20C131);  // TMRSF_FRPD_F_M1_G0_BD_0B	686
// 	////  SetJamram(XXXX,0x20C151);  // TMRSF_OCSA_REFOFF1_VINTY_G0	687
   	SetJamram(XXXX,0x20C191);  // TMRSF_MPDT_DIS_P1_G0	688
   	SetJamram(XXXX,0x20C1B1);  // TMRSF_VINT_FRP_P2_G0	689
   	SetJamram(XXXX,0x20C1D1);  // TMRS_WHITE_G0_BD	690
   	SetJamram(XXXX,0x20C1F1);  // TMRS_IEPBT_D0_G0	691
   	SetJamram(XXXX,0x24C130);  // TMRSF_SGIO_REF_CODE1_G0	692
   	SetJamram(XXXX,0x24C170);  // TMRSF_FRPD_DBI_M1_G0_AC	693
   	SetJamram(XXXX,0x24C190);  // TMRSF_PLSAE_DLY_CTRL_P1_G0	694
   	SetJamram(XXXX,0x24C1B0);  // TMRSF_RANDOM_F_PICK_ON_G0	695
   	SetJamram(XXXX,0x24C1D0);  // TMRSF_ERH_RATIO_MIX2_G0	696
   	SetJamram(XXXX,0x24C1F0);  // TMRSF_AIVCLP_IDDX_UP1_G0	697
   	SetJamram(XXXX,0x24C111);  // TMRSF_FREF_LTRAS_OFF_G0	698
   	SetJamram(XXXX,0x24C131);  // TMRSF_OCDRV_UP3_2ND_G0	699
   	SetJamram(XXXX,0x24C151);  // TMRSF_EPSEC12_ON_G0	700
   	SetJamram(XXXX,0x24C171);  // TMRSF_PXEN_P1_G0	701
   	SetJamram(XXXX,0x24C191);  // TMRSF_PNS2_DLY_P2_VINTY_G0	702
   	SetJamram(XXXX,0x24C1B1);  // TMRSF_REF_PNS3_OFF_G0	703
   	SetJamram(XXXX,0x24C1D1);  // TMRSF_PRD_PG_OFF_G0	704
   	SetJamram(XXXX,0x24C1F1);  // TMRS_PRDL_AP_G0	705
   	SetJamram(XXXX,0x28C110);  // TMRSF_BSG_PRE_M1_G0	706
   	SetJamram(XXXX,0x28C130);  // TMRSF_BSG_ON_G0	707
   	SetJamram(XXXX,0x28C150);  // TMRSF_PCLKWC4_MAST_P1_G0_AC	708
   	SetJamram(XXXX,0x28C170);  // TMRSF_PCLKWC3_ONLY_G0_AC_DLY_P1	709
   	SetJamram(XXXX,0x28C190);  // TMRSF_SFREF_SENSING_MINUS_ONE_G0	710
   	SetJamram(XXXX,0x28C1B0);  // TMRS_IDD2P_PMOS_L	711
   	SetJamram(XXXX,0x28C1D0);  // TMRSF_DWL_G0	712
   	SetJamram(XXXX,0x28C1F0);  // TMRSF_LSAEN_EN_P1D_G0	713
   	SetJamram(XXXX,0x28C111);  // TMRS_ERRINJEN_G0	714
   	////  SetJamram(XXXX,0x28C131);  // TMRSF_FRPD_ERR_M1_G0_AC	715
   	SetJamram(XXXX,0x28C151);  // TMRSF_PCLKWC4_DEPTH_M1_G0_AC	716
   	SetJamram(XXXX,0x28C171);  // TMRSF_PCLKWC4_DIS_DLY_P1_G0_AC	717
   	SetJamram(XXXX,0x28C191);  // TMRSF_SIVCPG_IUP_G0	718
   	SetJamram(XXXX,0x28C1D1);  // TMRSF_OCSA_P1M_P4_VINTY_G0	719
   	SetJamram(XXXX,0x28C1F1);  // TMRSF_FREF_LTRAS_COUNT_X2_G0	720
   	SetJamram(XXXX,0x2CC110);  // TMRS_VCM_MON_G0	721
   	SetJamram(XXXX,0x2CC130);  // TMRSF_PRAS_M1_VINTY_G0	722
// 	SetJamram(XXXX,0x2CC150);  // TMRSF_OCSA_P1M_M1_VINTY_G0	723
   	SetJamram(XXXX,0x2CC170);  // TMRSF_P2P3_FAST_DIS_VINTY_G0	724
   	SetJamram(XXXX,0x2CC190);  // TMRS_MRS_P_G0	725
   	SetJamram(XXXX,0x2CC1B0);  // TMRSF_P2_FAST_OFF_VINTY_G0	726
   	SetJamram(XXXX,0x2CC1D0);  // TMRSF_REF_1P15T_G0	727
   	SetJamram(XXXX,0x2CC1F0);  // TMRSF_ICC3POFF_G0	728
   	SetJamram(XXXX,0x2CC111);  // TMRS_ALABD_G0	729
// 	////  SetJamram(XXXX,0x2CC131);  // TMRSF_PNS3_SEL1_G0	730
// 	SetJamram(XXXX,0x2CC151);  // TMRSF_CSMR_M3_VINTY_G0	731
   	SetJamram(XXXX,0x2CC171);  // TMRSF_PTCB3_M1_VINTY_G0	732
   	SetJamram(XXXX,0x2CC191);  // TMRSF_NWEIB_VPP_REF_G0	733
   	SetJamram(XXXX,0x2CC1B1);  // TMRSF_P2_BETA3_M0_G0	734
   	SetJamram(XXXX,0x2CC1D1);  // TMRS_SIMPX_G0	735
   	SetJamram(XXXX,0x2CC1F1);  // TMRSF_ONE_CARE_3_4TH_CODE1_G0	736
   	SetJamram(XXXX,0x20D110);  // TMRSF_FRPD_F_P1_G3_BD_0B	737
   	SetJamram(XXXX,0x20D130);  // TMRSF_FRPD_F_M1_G3_BD_0B	738
// 	////  SetJamram(XXXX,0x20D150);  // TMRSF_OCSA_REFOFF1_VINTY_G3	739
   	SetJamram(XXXX,0x20D170);  // TMRSF_WRRPT_CEN_SET_ON_1B_P1_L	740
   	SetJamram(XXXX,0x20D190);  // TMRSF_MPDT_DIS_P1_G3	741
   	SetJamram(XXXX,0x20D1B0);  // TMRSF_VINT_FRP_P2_G3	742
   	SetJamram(XXXX,0x20D1D0);  // TMRS_WHITE_G3_BD	743
   	SetJamram(XXXX,0x20D1F0);  // TMRS_IEPBT_D0_G3	744
   	SetJamram(XXXX,0x20D131);  // TMRSF_SGIO_REF_CODE1_G3	745
   	SetJamram(XXXX,0x20D171);  // TMRSF_FRPD_DBI_M1_G3_AC	746
   	SetJamram(XXXX,0x20D191);  // TMRSF_PLSAE_DLY_CTRL_P1_G3	747
   	SetJamram(XXXX,0x20D1B1);  // TMRSF_RANDOM_F_PICK_ON_G3	748
   	SetJamram(XXXX,0x20D1D1);  // TMRSF_ERH_RATIO_MIX2_G3	749
   	SetJamram(XXXX,0x20D1F1);  // TMRSF_AIVCLP_IDDX_UP1_G3	750
   	SetJamram(XXXX,0x24D110);  // TMRSF_FREF_LTRAS_OFF_G3	751
   	SetJamram(XXXX,0x24D130);  // TMRSF_OCDRV_UP3_2ND_G3	752
   	SetJamram(XXXX,0x24D150);  // TMRSF_EPSEC12_ON_G3	753
   	SetJamram(XXXX,0x24D170);  // TMRSF_PXEN_P1_G3	754
   	SetJamram(XXXX,0x24D190);  // TMRSF_PNS2_DLY_P2_VINTY_G3	755
   	SetJamram(XXXX,0x24D1B0);  // TMRSF_REF_PNS3_OFF_G3	756
   	SetJamram(XXXX,0x24D1D0);  // TMRSF_PRD_PG_OFF_G3	757
   	SetJamram(XXXX,0x24D1F0);  // TMRS_PRDL_AP_G3	758
   	SetJamram(XXXX,0x24D111);  // TMRSF_BSG_PRE_M1_G3	759
   	SetJamram(XXXX,0x24D131);  // TMRSF_BSG_ON_G3	760
   	SetJamram(XXXX,0x24D151);  // TMRSF_PCLKWC4_MAST_P1_G3_AC	761
   	SetJamram(XXXX,0x24D171);  // TMRSF_PCLKWC3_ONLY_G3_AC_DLY_P1	762
   	SetJamram(XXXX,0x24D191);  // TMRSF_SFREF_SENSING_MINUS_ONE_G3	763
   	////  SetJamram(XXXX,0x24D1B1);  // TMRSF_FRPD_F_M2_G3_BD_1B	764
   	SetJamram(XXXX,0x24D1D1);  // TMRSF_DWL_G3	765
   	SetJamram(XXXX,0x24D1F1);  // TMRSF_LSAEN_EN_P1D_G3	766
   	SetJamram(XXXX,0x28D110);  // TMRS_ERRINJEN_G3	767
   	////  SetJamram(XXXX,0x28D130);  // TMRSF_FRPD_ERR_M1_G3_AC	768
   	SetJamram(XXXX,0x28D150);  // TMRSF_PCLKWC4_DEPTH_M1_G3_AC	769
   	SetJamram(XXXX,0x28D170);  // TMRSF_PCLKWC4_DIS_DLY_P1_G3_AC	770
   	SetJamram(XXXX,0x28D190);  // TMRSF_SIVCY_IUP_G3	771
   	SetJamram(XXXX,0x28D1B0);  // TMRSF_WCSL_DIS_MAST_M2_G3_BD	772
   	SetJamram(XXXX,0x28D1D0);  // TMRSF_OCSA_P1M_P4_VINTY_G3	773
   	SetJamram(XXXX,0x28D1F0);  // TMRSF_FREF_LTRAS_COUNT_X2_G3	774
   	SetJamram(XXXX,0x28D111);  // TMRS_VCM_MON_G3	775
   	SetJamram(XXXX,0x28D131);  // TMRSF_PRAS_M1_VINTY_G3	776
// 	SetJamram(XXXX,0x28D151);  // TMRSF_OCSA_P1M_M1_VINTY_G3	777
   	SetJamram(XXXX,0x28D171);  // TMRSF_P2P3_FAST_DIS_VINTY_G3	778
   	SetJamram(XXXX,0x28D191);  // TMRS_MRS_P_G3	779
   	SetJamram(XXXX,0x28D1B1);  // TMRSF_P2_FAST_OFF_VINTY_G3	780
   	SetJamram(XXXX,0x28D1D1);  // TMRSF_REF_1P15T_G3	781
   	SetJamram(XXXX,0x28D1F1);  // TMRSF_ICC3POFF_G3	782
   	SetJamram(XXXX,0x2CD110);  // TMRS_ALABD_G3	783
// 	////  SetJamram(XXXX,0x2CD130);  // TMRSF_PNS3_SEL1_G3	784
// 	SetJamram(XXXX,0x2CD150);  // TMRSF_CSMR_M3_VINTY_G3	785
   	SetJamram(XXXX,0x2CD170);  // TMRSF_PTCB3_M1_VINTY_G3	786
   	SetJamram(XXXX,0x2CD190);  // TMRSF_NWEIB_VPP_REF_G3	787
   	SetJamram(XXXX,0x2CD1B0);  // TMRSF_P2_BETA3_M0_G3	788
   	SetJamram(XXXX,0x2CD1D0);  // TMRS_SIMPX_G3	789
   	SetJamram(XXXX,0x2CD1F0);  // TMRSF_ONE_CARE_3_4TH_CODE1_G3	790
   	SetJamram(XXXX,0x2CD111);  // TMRSF_VREFDQ_DN	791
   	SetJamram(XXXX,0x2CD131);  // TMRSF_VREF_SEWCK_EN	792
   	SetJamram(XXXX,0x2CD151);  // TMRSF_DQ_PIN_BLOCK_EN	793
   	SetJamram(XXXX,0x2CD171);  // TMRSF_IVC_6400_ON_L	794
   	SetJamram(XXXX,0x2CD191);  // TMRSF_FAM_RDOUT	795
   	SetJamram(XXXX,0x2CD1B1);  // TMRSF_VANTIP_DN1	796
   	SetJamram(XXXX,0x2CD1D1);  // TMRSF_IPGM_TUNE2	797
   	SetJamram(XXXX,0x2CD1F1);  // TMRSF_VANTIP_UP1	798
   	SetJamram(XXXX,0x20E111);  // TMRSF_FRPD_S_P1_G0_AC_0B	799
   	SetJamram(XXXX,0x20E131);  // TMRSF_FRPD_S_M1_G0_AC_0B	800
// 	////  SetJamram(XXXX,0x20E151);  // TMRSF_OCSA_REFOFF0_VINTY_G0	801
   	SetJamram(XXXX,0x20E191);  // TMRSF_MPDT_DIS_M1_G0	802
   	SetJamram(XXXX,0x20E1B1);  // TMRSF_VINT_FRP_P1_G0	803
   	SetJamram(XXXX,0x20E1D1);  // TMRS_PBT_DLR_EN_G0	804
   	SetJamram(XXXX,0x20E1F1);  // TMRS_IEPBT_D1_G0	805
   	SetJamram(XXXX,0x24E130);  // TMRSF_SGIO_SEL_G0	806
   	SetJamram(XXXX,0x24E150);  // TMRSF_PCLKWC4_DBIAC_M1_G0	807
   	SetJamram(XXXX,0x24E170);  // TMRSF_FRPD_DBI_M1_G0_BD	808
   	SetJamram(XXXX,0x24E190);  // TMRSF_PLSAE_DLY_CTRL_M1_G0	809
   	SetJamram(XXXX,0x24E1B0);  // TMRSF_RANDOM_F_CARE_ON_G0	810
   	SetJamram(XXXX,0x24E1D0);  // TMRSF_ERH_RATIO_MIX1_G0	811
   	SetJamram(XXXX,0x24E1F0);  // TMRSF_AIVCPG_IUP_G0	812
   	SetJamram(XXXX,0x24E111);  // TMRSF_ONE_ALWAYS_DRA_ON_G0	813
   	SetJamram(XXXX,0x24E131);  // TMRSF_OCDRV_UP2_2ND_G0	814
   	SetJamram(XXXX,0x24E151);  // TMRS_TMMT_G0	815
   	SetJamram(XXXX,0x24E171);  // TMRSF_PLAS1_OR_EBS_SEL_G0	816
   	SetJamram(XXXX,0x24E191);  // TMRSF_PLAS2_SEL1_G0	817
   	SetJamram(XXXX,0x24E1B1);  // TMRSF_REF_PNS2_OFF_G0	818
   	SetJamram(XXXX,0x24E1D1);  // TMRSF_ROWOPEN_P0_G0	819
   	SetJamram(XXXX,0x24E1F1);  // TMRS_AP2_EN_G0	820
   	SetJamram(XXXX,0x28E110);  // TMRSF_BSG_POV_M0_G0	821
   	SetJamram(XXXX,0x28E130);  // TMRSF_BSG_PSDD_G0	822
   	SetJamram(XXXX,0x28E150);  // TMRSF_PCLKWC4_MAST_M1_G0_AC	823
   	SetJamram(XXXX,0x28E170);  // TMRSF_PCLKWC3_ONLY_G0_AC_DLY_M1	824
   	SetJamram(XXXX,0x28E190);  // TMRS_IDD2PX2_L	825
   	SetJamram(XXXX,0x28E1B0);  // TMRS_IDD2P_NMOS_L	826
   	SetJamram(XXXX,0x28E1D0);  // TMRS_MARS_4PXI_RD_G0	827
   	SetJamram(XXXX,0x28E1F0);  // TMRSF_LSAEN_EN_M1D_G0	828
   	SetJamram(XXXX,0x28E111);  // TMRS_RBLPBT_ON_G0	829
   	////  SetJamram(XXXX,0x28E131);  // TMRSF_FRPD_ERR_M1_G0_BD	830
   	SetJamram(XXXX,0x28E151);  // TMRSF_PCLKWC4_DEPTH_M1_G0_BD	831
   	SetJamram(XXXX,0x28E171);  // TMRSF_PCLKWC4_DIS_DLY_P1_G0_BD	832
   	SetJamram(XXXX,0x28E191);  // TMRSF_SIVCLANG_IUP_G0	833
// 	SetJamram(XXXX,0x28E1D1);  // TMRSF_CSMR_P3_VINTY_G0	834
   	SetJamram(XXXX,0x28E1F1);  // TMRSF_FREF_LTRAS_OSC_FAST_G0	835
   	SetJamram(XXXX,0x2CE110);  // TMRS_MARS_G0	836
   	SetJamram(XXXX,0x2CE130);  // TMRSF_PDRAPB_M1_VINTY_G0	837
   	SetJamram(XXXX,0x2CE150);  // TMRSF_OCSA_P1M_M2_VINTY_G0	838
   	SetJamram(XXXX,0x2CE170);  // TMRSF_OCSA_P2PRE_M_VINTY_G0	839
   	SetJamram(XXXX,0x2CE190);  // TMRS_CBR_SENDIS_PRE_G0	840
   	SetJamram(XXXX,0x2CE1B0);  // TMRSF_LAPG_OC_2ND_G0	841
   	SetJamram(XXXX,0x2CE1D0);  // TMRSF_PDRAPB_M3_VINTY_G0	842
   	SetJamram(XXXX,0x2CE1F0);  // TMRSF_ICC3NOFF_G0	843
   	SetJamram(XXXX,0x2CE111);  // TMRSF_PTC_UP1_G0	844
// 	SetJamram(XXXX,0x2CE131);  // TMRSF_PNS1_SEL1_G0	845
// 	SetJamram(XXXX,0x2CE151);  // TMRSF_CSMR_P0_VINTY_G0	846
   	SetJamram(XXXX,0x2CE171);  // TMRSF_PTCB3_P1_VINTY_G0	847
   	SetJamram(XXXX,0x2CE191);  // TMRSF_NWEIB_VPP2_DIS_G0	848
   	SetJamram(XXXX,0x2CE1B1);  // TMRSF_P2_BETA3_M1_G0	849
   	SetJamram(XXXX,0x2CE1D1);  // TMRS_DWL_ODD_34_G0	850
   	SetJamram(XXXX,0x2CE1F1);  // TMRSF_ONE_CARE_3_4TH_CODE0_G0	851
   	SetJamram(XXXX,0x20F110);  // TMRSF_FRPD_S_P1_G3_AC_0B	852
   	SetJamram(XXXX,0x20F130);  // TMRSF_FRPD_S_M1_G3_AC_0B	853
// 	////  SetJamram(XXXX,0x20F150);  // TMRSF_OCSA_REFOFF0_VINTY_G3	854
   	SetJamram(XXXX,0x20F170);  // TMRSF_WRRPT_CEN_SET_ON_0B_P1_L	855
   	SetJamram(XXXX,0x20F190);  // TMRSF_MPDT_DIS_M1_G3	856
   	SetJamram(XXXX,0x20F1B0);  // TMRSF_VINT_FRP_P1_G3	857
   	SetJamram(XXXX,0x20F1D0);  // TMRS_PBT_DLR_EN_G3	858
   	SetJamram(XXXX,0x20F1F0);  // TMRS_IEPBT_D1_G3	859
   	SetJamram(XXXX,0x20F131);  // TMRSF_SGIO_SEL_G3	860
   	SetJamram(XXXX,0x20F151);  // TMRSF_PCLKWC4_DBIAC_M1_G3	861
   	SetJamram(XXXX,0x20F171);  // TMRSF_FRPD_DBI_M1_G3_BD	862
   	SetJamram(XXXX,0x20F191);  // TMRSF_PLSAE_DLY_CTRL_M1_G3	863
   	SetJamram(XXXX,0x20F1B1);  // TMRSF_RANDOM_F_CARE_ON_G3	864
   	SetJamram(XXXX,0x20F1D1);  // TMRSF_ERH_RATIO_MIX1_G3	865
   	SetJamram(XXXX,0x20F1F1);  // TMRSF_AIVCPG_IUP_G3	866
   	SetJamram(XXXX,0x24F110);  // TMRSF_ONE_ALWAYS_DRA_ON_G3	867
   	SetJamram(XXXX,0x24F130);  // TMRSF_OCDRV_UP2_2ND_G3	868
   	SetJamram(XXXX,0x24F150);  // TMRS_TMMT_G3	869
   	SetJamram(XXXX,0x24F170);  // TMRSF_PLAS1_OR_EBS_SEL_G3	870
   	SetJamram(XXXX,0x24F190);  // TMRSF_PLAS2_SEL1_G3	871
   	SetJamram(XXXX,0x24F1B0);  // TMRSF_REF_PNS2_OFF_G3	872
   	SetJamram(XXXX,0x24F1D0);  // TMRSF_ROWOPEN_P0_G3	873
   	SetJamram(XXXX,0x24F1F0);  // TMRS_AP2_EN_G3	874
   	SetJamram(XXXX,0x24F111);  // TMRSF_BSG_POV_M0_G3	875
   	SetJamram(XXXX,0x24F131);  // TMRSF_BSG_PSDD_G3	876
   	SetJamram(XXXX,0x24F151);  // TMRSF_PCLKWC4_MAST_M1_G3_AC	877
   	SetJamram(XXXX,0x24F171);  // TMRSF_PCLKWC3_ONLY_G3_AC_DLY_M1	878
   	SetJamram(XXXX,0x24F191);  // TMRSF_FRPD_F_P1_G3_AC_0B	879
   	////  SetJamram(XXXX,0x24F1B1);  // TMRSF_FRPD_S_M2_G3_AC_1B	880
   	SetJamram(XXXX,0x24F1D1);  // TMRS_MARS_4PXI_RD_G3	881
   	SetJamram(XXXX,0x24F1F1);  // TMRSF_LSAEN_EN_M1D_G3	882
   	SetJamram(XXXX,0x28F110);  // TMRS_RBLPBT_ON_G3	883
   	////  SetJamram(XXXX,0x28F130);  // TMRSF_FRPD_ERR_M1_G3_BD	884
   	SetJamram(XXXX,0x28F150);  // TMRSF_PCLKWC4_DEPTH_M1_G3_BD	885
   	SetJamram(XXXX,0x28F170);  // TMRSF_PCLKWC4_DIS_DLY_P1_G3_BD	886
   	SetJamram(XXXX,0x28F190);  // TMRSF_SIVC_DD1_SINK_UP	887
// 	SetJamram(XXXX,0x28F1D0);  // TMRSF_CSMR_P3_VINTY_G3	888
   	SetJamram(XXXX,0x28F1F0);  // TMRSF_FREF_LTRAS_OSC_FAST_G3	889
   	SetJamram(XXXX,0x28F111);  // TMRS_MARS_G3	890
   	SetJamram(XXXX,0x28F131);  // TMRSF_PDRAPB_M1_VINTY_G3	891
   	SetJamram(XXXX,0x28F151);  // TMRSF_OCSA_P1M_M2_VINTY_G3	892
   	SetJamram(XXXX,0x28F171);  // TMRSF_OCSA_P2PRE_M_VINTY_G3	893
   	SetJamram(XXXX,0x28F191);  // TMRS_CBR_SENDIS_PRE_G3	894
   	SetJamram(XXXX,0x28F1B1);  // TMRSF_LAPG_OC_2ND_G3	895
   	SetJamram(XXXX,0x28F1D1);  // TMRSF_PDRAPB_M3_VINTY_G3	896
   	SetJamram(XXXX,0x28F1F1);  // TMRSF_ICC3NOFF_G3	897
   	SetJamram(XXXX,0x2CF110);  // TMRSF_PTC_UP1_G3	898
// 	SetJamram(XXXX,0x2CF130);  // TMRSF_PNS1_SEL1_G3	899
// 	SetJamram(XXXX,0x2CF150);  // TMRSF_CSMR_P0_VINTY_G3	900
   	SetJamram(XXXX,0x2CF170);  // TMRSF_PTCB3_P1_VINTY_G3	901
   	SetJamram(XXXX,0x2CF190);  // TMRSF_NWEIB_VPP2_DIS_G3	902
   	SetJamram(XXXX,0x2CF1B0);  // TMRSF_P2_BETA3_M1_G3	903
   	SetJamram(XXXX,0x2CF1D0);  // TMRS_DWL_ODD_34_G3	904
   	SetJamram(XXXX,0x2CF1F0);  // TMRSF_ONE_CARE_3_4TH_CODE0_G3	905
   	SetJamram(XXXX,0x2CF111);  // TMRSF_LF_DCA_SEL_0B	906
   	SetJamram(XXXX,0x2CF131);  // TMRSF_VREF_AMP_DN2_DQ_0B	907
   	////  SetJamram(XXXX,0x2CF151);  // TMRSF_PREAMP_BUF_CURRENT_UP9	908
   	SetJamram(XXXX,0x2CF171);  // TMRSF_VANTIP_UP3	909
   	SetJamram(XXXX,0x2CF191);  // TMRSF_PGM_SEQ1	910
   	SetJamram(XXXX,0x2CF1B1);  // TMRSF_VANTIP_DN2	911
   	SetJamram(XXXX,0x2CF1D1);  // TMRSF_IPGM_TUNE8	912
   	SetJamram(XXXX,0x2CF1F1);  // TMRSF_VANTIP_UP2	913
   	SetJamram(XXXX,0x440110);  // TMRSF_DVFSC_RED_P_G2	914
   	SetJamram(XXXX,0x440130);  // TMRSF_BUSRPT_AP_OFF_C	915
   	SetJamram(XXXX,0x440150);  // TMRSF_PWRD_CTRL_G2	916
   	SetJamram(XXXX,0x440170);  // TMRSF_WRRPT_CEN_RST_ON_1B_M1_C	917
   	SetJamram(XXXX,0x440190);  // TMRSF_IOPR_EN_P1D_G2	918
   	SetJamram(XXXX,0x4401B0);  // TMRSF_VINT_FRP_M2_G2	919
   	SetJamram(XXXX,0x4401D0);  // TMRSF_FRPD_ERR_DQCPY_M1_G2_BD	920
   	SetJamram(XXXX,0x4401F0);  // TMRS_EDS_ECC_TEST_G2_R	921
   	SetJamram(XXXX,0x440111);  // TMRSF_SGIO_EN_PULSE4_G2	922
   	SetJamram(XXXX,0x440131);  // TMRS_IDD2P_SPMOS	923
   	SetJamram(XXXX,0x440171);  // TMRSF_ECCEN_REP_G2	924
   	SetJamram(XXXX,0x440191);  // TMRSF_SKEIP_FIND_MAX_AT_ERH_CARE_G2	925
   	SetJamram(XXXX,0x4401B1);  // TMRSF_WRRPT_ON_SR_DIS_C	926
   	SetJamram(XXXX,0x4401D1);  // TMRSF_RANDOM_F_RESET_ON_G2	927
   	SetJamram(XXXX,0x4401F1);  // TMRSF_FRPD_F_M1_G1_BD_0B	928
   	SetJamram(XXXX,0x480110);  // TMRSF_PRAS_DSM_P0_VINTY_G2	929
// 	////  SetJamram(XXXX,0x480130);  // TMRSF_OCDRV_UP_2ND_G2	930
   	SetJamram(XXXX,0x480150);  // TMRSF_MODE_LAEQ_DELAY_G2	931
   	SetJamram(XXXX,0x480170);  // TMRSF_PLAS2_OC_2ND_G2	932
   	SetJamram(XXXX,0x480190);  // TMRSF_PLAS2_SEL0_G2	933
   	SetJamram(XXXX,0x4801B0);  // TMRS_EPSEC3_ON_G2	934
   	SetJamram(XXXX,0x4801D0);  // TMRS_HITE0_G2	935
   	SetJamram(XXXX,0x4801F0);  // TMRSF_ABR_TRAS_M2_G2	936
   	SetJamram(XXXX,0x480111);  // TMRSF_BSG_START_M1_G2	937
   	SetJamram(XXXX,0x480131);  // TMRSF_SERIAL_ABR_DIS_G2	938
   	SetJamram(XXXX,0x480151);  // TMRSF_PCLKWC3_G2_BD_DLY_P1	939
   	SetJamram(XXXX,0x480171);  // TMRS_PBTBYPASS_INT_G2D	940
   	SetJamram(XXXX,0x480191);  // TMRSF_FRPD_S_M2_G1_BD_0B	941
   	SetJamram(XXXX,0x4801B1);  // TMRSF_FRPD_F_M2_G2_AC_0B	942
   	SetJamram(XXXX,0x4801D1);  // TMRS_8WL_G2	943
   	SetJamram(XXXX,0x4801F1);  // TMRSF_LIOPRB_EN_P1D_G2	944
   	SetJamram(XXXX,0x4C0110);  // TMRS_EPBT_G2	945
   	SetJamram(XXXX,0x4C0130);  // TMRSF_PNWR_EN_P1_VINTY_G2	946
//   	SetJamram(XXXX,0x4C0150);  // TMRSF_PCLKWC4_DIS_DLY_P2_G2_AC	947
   	SetJamram(XXXX,0x4C0170);  // TMRS_MCSL_WR_DIS_G2	948
   	SetJamram(XXXX,0x4C0190);  // TMRS_DSF_TEST_Z1_PRE<0>	949
   	SetJamram(XXXX,0x4C01B0);  // TMRSF_WCSL_DIS_MAST_M2_G2_BD	950
   	SetJamram(XXXX,0x4C01F0);  // TMRSF_PTCB3_P0_VINTY_G2	951
   	SetJamram(XXXX,0x4C0111);  // TMRSF_ONE_TMMT_ANDING_G2	952
   	SetJamram(XXXX,0x4C0131);  // TMRSF_PDRAPB_P1_VINTY_G2	953
   	SetJamram(XXXX,0x4C0151);  // TMRSF_OCSA_P1M_P0_VINTY_G2	954
   	SetJamram(XXXX,0x4C0171);  // TMRSF_OCSA_P2PRE_P_VINTY_G2	955
   	SetJamram(XXXX,0x4C0191);  // TMRSF_ONE_TMMT_ORING_G2	956
   	SetJamram(XXXX,0x4C01B1);  // TMRSF_SEN_DIS_VINTY_G2	957
   	SetJamram(XXXX,0x4C01D1);  // TMRSF_ACT_PULSE_DVFSC_G2	958
   	SetJamram(XXXX,0x4C01F1);  // TMRSF_ABR_TRAS_M3_G2	959
   	SetJamram(XXXX,0x401110);  // TMRSF_PTC_UP0_G2	960
   	SetJamram(XXXX,0x401130);  // TMRSF_MPTCB_P0_VINTY_G2	961
// 	SetJamram(XXXX,0x401150);  // TMRSF_CSMR_P1_VINTY_G2	962
   	SetJamram(XXXX,0x401170);  // TMRSF_LALAB_SLOWOFF_VINTY_G2	963
   	SetJamram(XXXX,0x401190);  // TMRSF_P2_BETA3_SEN_M1_G2	964
   	SetJamram(XXXX,0x4011B0);  // TMRSF_BSG_FLOAT_M0_G2	965
   	SetJamram(XXXX,0x4011D0);  // TMRSF_AIVC_CR_G2	966
   	SetJamram(XXXX,0x4011F0);  // TMRSF_WCSL_DIS_MAST_P1_G2_BD	967
   	SetJamram(XXXX,0x401111);  // TMRS_EDS_ECC_TMMT_RD_PTN	968
   	SetJamram(XXXX,0x401131);  // TMRSF_VBSG_LEAK	969
   	SetJamram(XXXX,0x401151);  // TMRSF_PWRD_CTRL_G1	970
   	SetJamram(XXXX,0x401171);  // TMRSF_WRRPT_CEN_RST_ON_1B_M1_R	971
   	SetJamram(XXXX,0x401191);  // TMRSF_IOPR_EN_P1D_G1	972
   	SetJamram(XXXX,0x4011B1);  // TMRSF_VINT_FRP_M2_G1	973
   	SetJamram(XXXX,0x4011D1);  // TMRSF_FRPD_ERR_DQCPY_M1_G1_BD	974
   	SetJamram(XXXX,0x4011F1);  // TMRS_EDS_ECC_TEST_G1_R	975
   	SetJamram(XXXX,0x441110);  // TMRSF_SGIO_EN_PULSE4_G1	976
   	SetJamram(XXXX,0x441130);  // TMRSF_VINTLP_SINK2	977
   	SetJamram(XXXX,0x441150);  // TMRSF_FRPD_F_P1_G1_AC_0B	978
   	SetJamram(XXXX,0x441170);  // TMRSF_ECCEN_REP_G1	979
   	SetJamram(XXXX,0x441190);  // TMRSF_SKEIP_FIND_MAX_AT_ERH_CARE_G1	980
   	SetJamram(XXXX,0x4411B0);  // TMRSF_DSF_RD_OUT_EN	981
   	SetJamram(XXXX,0x4411D0);  // TMRSF_RANDOM_F_RESET_ON_G1	982
   	SetJamram(XXXX,0x4411F0);  // TMRSF_FRPD_S_M1_G1_BD_1B	983
   	SetJamram(XXXX,0x441111);  // TMRSF_PRAS_DSM_P0_VINTY_G1	984
// 	////  SetJamram(XXXX,0x441131);  // TMRSF_OCDRV_UP_2ND_G1	985
   	SetJamram(XXXX,0x441151);  // TMRSF_MODE_LAEQ_DELAY_G1	986
   	SetJamram(XXXX,0x441171);  // TMRSF_PLAS2_OC_2ND_G1	987
   	SetJamram(XXXX,0x441191);  // TMRSF_PLAS2_SEL0_G1	988
   	SetJamram(XXXX,0x4411B1);  // TMRS_EPSEC3_ON_G1	989
   	SetJamram(XXXX,0x4411D1);  // TMRS_HITE0_G1	990
   	SetJamram(XXXX,0x4411F1);  // TMRSF_ABR_TRAS_M2_G1	991
   	SetJamram(XXXX,0x481110);  // TMRSF_BSG_START_M1_G1	992
   	SetJamram(XXXX,0x481130);  // TMRSF_SERIAL_ABR_DIS_G1	993
   	SetJamram(XXXX,0x481150);  // TMRSF_PCLKWC3_G1_BD_DLY_P1	994
   	SetJamram(XXXX,0x481170);  // TMRS_PBTBYPASS_INT_G1D	995
   	SetJamram(XXXX,0x481190);  // TMRSF_FRPD_S_P1_G1_AC_0B	996
   	////  SetJamram(XXXX,0x4811B0);  // TMRSF_DVFSC_TRP_M_G1	997
   	SetJamram(XXXX,0x4811D0);  // TMRS_8WL_G1	998
   	SetJamram(XXXX,0x4811F0);  // TMRSF_LIOPRB_EN_P1D_G1	999
   	SetJamram(XXXX,0x481131);  // TMRSF_PNWR_EN_P1_VINTY_G1	1000


}
#endif

//1001~1500
#if 1
	{
//   	SetJamram(XXXX,0x481151);  // TMRSF_PCLKWC4_DIS_DLY_P2_G1_AC
   	SetJamram(XXXX,0x481171);  // TMRS_MCSL_WR_DIS_G1
   	SetJamram(XXXX,0x481191);  // TMRS_DSF_TEST_PRE<0>
   	SetJamram(XXXX,0x4811F1);  // TMRSF_PTCB3_P0_VINTY_G1
   	SetJamram(XXXX,0x4C1110);  // TMRSF_ONE_TMMT_ANDING_G1
   	SetJamram(XXXX,0x4C1130);  // TMRSF_PDRAPB_P1_VINTY_G1
   	SetJamram(XXXX,0x4C1150);  // TMRSF_OCSA_P1M_P0_VINTY_G1
   	SetJamram(XXXX,0x4C1170);  // TMRSF_OCSA_P2PRE_P_VINTY_G1
   	SetJamram(XXXX,0x4C1190);  // TMRSF_ONE_TMMT_ORING_G1
   	SetJamram(XXXX,0x4C11B0);  // TMRSF_SEN_DIS_VINTY_G1
   	SetJamram(XXXX,0x4C11D0);  // TMRSF_ACT_PULSE_DVFSC_G1
   	SetJamram(XXXX,0x4C11F0);  // TMRSF_ABR_TRAS_M3_G1
   	SetJamram(XXXX,0x4C1111);  // TMRSF_PTC_UP0_G1
   	SetJamram(XXXX,0x4C1131);  // TMRSF_MPTCB_P0_VINTY_G1
// 	SetJamram(XXXX,0x4C1151);  // TMRSF_CSMR_P1_VINTY_G1
   	SetJamram(XXXX,0x4C1171);  // TMRSF_LALAB_SLOWOFF_VINTY_G1
   	SetJamram(XXXX,0x4C1191);  // TMRSF_P2_BETA3_SEN_M1_G1
   	SetJamram(XXXX,0x4C11B1);  // TMRSF_BSG_FLOAT_M0_G1
   	SetJamram(XXXX,0x4C11D1);  // TMRSF_FRPD_S_P1_G1_AC_1B
   	SetJamram(XXXX,0x4C11F1);  // TMRSF_WCSL_DIS_MAST_P1_G1_BD
   	SetJamram(XXXX,0x442110);  // TMRSF_FRPD_S_M2_G2_BD_0B
   	SetJamram(XXXX,0x442150);  // TMRSF_PCLSAEN_P1_G2
   	SetJamram(XXXX,0x442170);  // TMRSF_WRRPT_CEN_RST_ON_0B_M1_C
   	SetJamram(XXXX,0x442190);  // TMRSF_IOPR_EN_M1BD_G2
   	SetJamram(XXXX,0x4421B0);  // TMRSF_VINT_FRP_M1_G2
   	SetJamram(XXXX,0x4421D0);  // TMRSF_FRPD_DQCPY_M2_G2_BD
   	SetJamram(XXXX,0x4421F0);  // TMRS_CORRECT_OFF_G2
   	SetJamram(XXXX,0x442111);  // TMRSF_SGIO_EN_PULSE3_G2
   	SetJamram(XXXX,0x442131);  // TMRS_IDD2P_SNMOS
   	SetJamram(XXXX,0x442151);  // TMRSF_PCLKWC4_DBIAC_M2_G2
   	SetJamram(XXXX,0x442171);  // TMRSF_REF_2T_G2
   	SetJamram(XXXX,0x442191);  // TMRSF_RANDOM_MASKING_G2
   	////  SetJamram(XXXX,0x4421B1);  // TMRSF_DIRECT_TO_MAX_OFF_G2
   	SetJamram(XXXX,0x4421D1);  // TMRSF_RANDOM_ONLY_G2
   	SetJamram(XXXX,0x4421F1);  // TMRSF_SIVC_IDN_G2
   	SetJamram(XXXX,0x482110);  // TMRSF_PTCB3_P2_MMT_VINTY_G2
   	SetJamram(XXXX,0x482130);  // TMRSF_OCDRV_UP3_G2
   	SetJamram(XXXX,0x482150);  // TMRSF_ERH_RATIO_MIX0_G2
   	SetJamram(XXXX,0x482170);  // TMRSF_LAPG2_OC_2ND_G2
   	SetJamram(XXXX,0x482190);  // TMRSF_REF_PLAS2_OFF_G2
   	SetJamram(XXXX,0x4821B0);  // TMRSF_REF_PPS1_OFF_G2
   	SetJamram(XXXX,0x4821D0);  // TMRS_PRDL_G2
   	SetJamram(XXXX,0x4821F0);  // TMRSF_ABR_TRAS_M_G2
   	SetJamram(XXXX,0x482111);  // TMRSF_BSG_START_M0_G2
   	SetJamram(XXXX,0x482131);  // TMRSF_SERIAL_ABR_DIS_OFF_G2
   	SetJamram(XXXX,0x482151);  // TMRSF_PCLKWC3_G2_BD_DLY_M1
   	SetJamram(XXXX,0x482171);  // TMRS_PBTBYPASS_INT_G2C
   	SetJamram(XXXX,0x482191);  // TMRSF_FRPD_S_P1_G2_BD_1B
   	SetJamram(XXXX,0x4821B1);  // TMRSF_FRPD_S_M1_G2_BD_1B
// 	SetJamram(XXXX,0x4821D1);  // TMRSF_OVEND_P1_G2
   	SetJamram(XXXX,0x4821F1);  // TMRSF_LIOPRB_EN_M1D_G2
   	SetJamram(XXXX,0x4C2110);  // TMRSF_FRPD_DQCPY_M2_G2_AC
   	SetJamram(XXXX,0x4C2130);  // TMRSF_PNWR_EN_P2_VINTY_G2
//   	SetJamram(XXXX,0x4C2150);  // TMRSF_PCLKWC4_DIS_DLY_P2_G2_BD
   	SetJamram(XXXX,0x4C2170);  // TMRS_DLR_SEL_IOSA_G2_AB
   	SetJamram(XXXX,0x4C2190);  // TMRS_DSF_TEST_Z1_PRE<1>
   	SetJamram(XXXX,0x4C21F0);  // TMRSF_PTCB3_M0_VINTY_G2
   	SetJamram(XXXX,0x4C2111);  // TMRSF_PNS2_DLY_M1_VINTY_G2
   	SetJamram(XXXX,0x4C2131);  // TMRSF_PLSAE_PW_CTRL_G2
   	SetJamram(XXXX,0x4C2151);  // TMRSF_OCSA_P1M_P1_VINTY_G2
   	SetJamram(XXXX,0x4C2171);  // TMRS_PTC_DLY_VINTY_G2
   	SetJamram(XXXX,0x4C2191);  // TMRSF_ONE_OFF2_G2
   	SetJamram(XXXX,0x4C21B1);  // TMRS_PSEC_SEN_NORM_G2
   	SetJamram(XXXX,0x4C21D1);  // TMRSF_OC_EN_M_EXTREME_VINTY_G2
   	SetJamram(XXXX,0x4C21F1);  // TMRSF_PPS_ON_G2
   	SetJamram(XXXX,0x403110);  // TMRSF_PPS1_SEL0_G2
   	SetJamram(XXXX,0x403130);  // TMRSF_PDRAPB_P2_VINTY_G2
// 	SetJamram(XXXX,0x403150);  // TMRSF_CSMR_P2_VINTY_G2
   	SetJamram(XXXX,0x403170);  // TMRSF_OCSA_DIS_G2
   	SetJamram(XXXX,0x403190);  // TMRSF_P2_BETA3_SEN_M0_G2
// 	SetJamram(XXXX,0x4031B0);  // TMRSF_P2_BETA3_ON_G2
   	SetJamram(XXXX,0x4031D0);  // TMRSF_AIVC_IDOWN_G2
   	SetJamram(XXXX,0x4031F0);  // TMRSF_WCSL_DIS_MAST_M1_G2_BD
   	SetJamram(XXXX,0x403111);  // TMRSF_ECCEN_DIS
   	SetJamram(XXXX,0x403131);  // TMRSF_VBSG_DZ_UP
   	SetJamram(XXXX,0x403151);  // TMRSF_PCLSAEN_P1_G1
   	SetJamram(XXXX,0x403171);  // TMRSF_WRRPT_CEN_RST_ON_0B_M1_R
   	SetJamram(XXXX,0x403191);  // TMRSF_IOPR_EN_M1BD_G1
   	SetJamram(XXXX,0x4031B1);  // TMRSF_VINT_FRP_M1_G1
   	SetJamram(XXXX,0x4031D1);  // TMRSF_FRPD_DQCPY_M2_G1_BD
   	SetJamram(XXXX,0x4031F1);  // TMRS_CORRECT_OFF_G1
   	SetJamram(XXXX,0x443110);  // TMRSF_SGIO_EN_PULSE3_G1
   	SetJamram(XXXX,0x443130);  // TMRSF_VINTLP_SINK1
   	SetJamram(XXXX,0x443150);  // TMRSF_PCLKWC4_DBIAC_M2_G1
   	SetJamram(XXXX,0x443170);  // TMRSF_REF_2T_G1
   	SetJamram(XXXX,0x443190);  // TMRSF_RANDOM_MASKING_G1
   	////  SetJamram(XXXX,0x4431B0);  // TMRSF_DIRECT_TO_MAX_OFF_G1
   	SetJamram(XXXX,0x4431D0);  // TMRSF_RANDOM_ONLY_G1
   	SetJamram(XXXX,0x4431F0);  // TMRSF_SIVC_IDN_G1
   	SetJamram(XXXX,0x443111);  // TMRSF_PTCB3_P2_MMT_VINTY_G1
   	SetJamram(XXXX,0x443131);  // TMRSF_OCDRV_UP3_G1
   	SetJamram(XXXX,0x443151);  // TMRSF_ERH_RATIO_MIX0_G1
   	SetJamram(XXXX,0x443171);  // TMRSF_LAPG2_OC_2ND_G1
   	SetJamram(XXXX,0x443191);  // TMRSF_REF_PLAS2_OFF_G1
   	SetJamram(XXXX,0x4431B1);  // TMRSF_REF_PPS1_OFF_G1
   	SetJamram(XXXX,0x4431D1);  // TMRS_PRDL_G1
   	SetJamram(XXXX,0x4431F1);  // TMRSF_ABR_TRAS_M_G1
   	SetJamram(XXXX,0x483110);  // TMRSF_BSG_START_M0_G1
   	SetJamram(XXXX,0x483130);  // TMRSF_SERIAL_ABR_DIS_OFF_G1
   	SetJamram(XXXX,0x483150);  // TMRSF_PCLKWC3_G1_BD_DLY_M1
   	SetJamram(XXXX,0x483170);  // TMRS_PBTBYPASS_INT_G1C
   	SetJamram(XXXX,0x483190);  // TMRSF_FRPD_S_M2_G1_AC_0B
   	SetJamram(XXXX,0x4831B0);  // TMRSF_ACT_X8_DIS_OPT1_G1
// 	SetJamram(XXXX,0x4831D0);  // TMRSF_OVEND_P1_G1
   	SetJamram(XXXX,0x4831F0);  // TMRSF_LIOPRB_EN_M1D_G1
   	SetJamram(XXXX,0x483111);  // TMRSF_FRPD_DQCPY_M2_G1_AC
   	SetJamram(XXXX,0x483131);  // TMRSF_PNWR_EN_P2_VINTY_G1
//   	SetJamram(XXXX,0x483151);  // TMRSF_PCLKWC4_DIS_DLY_P2_G1_BD
   	SetJamram(XXXX,0x483171);  // TMRS_DLR_SEL_IOSA_G1_AB
   	SetJamram(XXXX,0x483191);  // TMRS_DSF_TEST_PRE<1>
   	SetJamram(XXXX,0x4831F1);  // TMRSF_PTCB3_M0_VINTY_G1
   	SetJamram(XXXX,0x4C3110);  // TMRSF_PNS2_DLY_M1_VINTY_G1
   	SetJamram(XXXX,0x4C3130);  // TMRSF_PLSAE_PW_CTRL_G1
   	SetJamram(XXXX,0x4C3150);  // TMRSF_OCSA_P1M_P1_VINTY_G1
   	SetJamram(XXXX,0x4C3170);  // TMRS_PTC_DLY_VINTY_G1
   	SetJamram(XXXX,0x4C3190);  // TMRSF_ONE_OFF2_G1
   	SetJamram(XXXX,0x4C31B0);  // TMRS_PSEC_SEN_NORM_G1
   	SetJamram(XXXX,0x4C31D0);  // TMRSF_OC_EN_M_EXTREME_VINTY_G1
   	SetJamram(XXXX,0x4C31F0);  // TMRSF_PPS_ON_G1
   	SetJamram(XXXX,0x4C3111);  // TMRSF_PPS1_SEL0_G1
   	SetJamram(XXXX,0x4C3131);  // TMRSF_PDRAPB_P2_VINTY_G1
// 	SetJamram(XXXX,0x4C3151);  // TMRSF_CSMR_P2_VINTY_G1
   	SetJamram(XXXX,0x4C3171);  // TMRSF_OCSA_DIS_G1
   	SetJamram(XXXX,0x4C3191);  // TMRSF_P2_BETA3_SEN_M0_G1
// 	SetJamram(XXXX,0x4C31B1);  // TMRSF_P2_BETA3_ON_G1
   	SetJamram(XXXX,0x4C31D1);  // TMRSF_FRPD_S_M2_G1_AC_1B
   	SetJamram(XXXX,0x4C31F1);  // TMRSF_WCSL_DIS_MAST_M1_G1_BD
   	SetJamram(XXXX,0x444110);  // TMRSF_FRPD_F_M2_G2_BD_0B
   	SetJamram(XXXX,0x444130);  // TMRSF_RDREP_CEN_OFF_M2_G2
   	SetJamram(XXXX,0x444150);  // TMRSF_PWACSL2_M1_G2
   	SetJamram(XXXX,0x444170);  // TMRSF_WRRPT_CEN_SET_ON_1B_M1_C
   	SetJamram(XXXX,0x444190);  // TMRSF_LGIOCON_DIS_M1D_G2
   	SetJamram(XXXX,0x4441B0);  // TMRSF_LIOFLT_OFF_G2
   	SetJamram(XXXX,0x4441D0);  // TMRSF_FRPD_DQCPY_P1_G2_BD
   	SetJamram(XXXX,0x4441F0);  // TMRSF_LSA_BST_OFF_G2
   	SetJamram(XXXX,0x444111);  // TMRSF_SGIO_EN_PULSE2_G2
   	SetJamram(XXXX,0x444131);  // TMRS_IDD2P_PMOS
   	SetJamram(XXXX,0x444171);  // TMRSF_NWEIB_VPP2_FIX_PRE_G2
   	SetJamram(XXXX,0x444191);  // TMRSF_PRBS_MASKING_OFF_G2
   	SetJamram(XXXX,0x4441B1);  // TMRSF_FRPD_F_M2_G1_BD_0B
   	SetJamram(XXXX,0x4441D1);  // TMRSF_DS_MODE_DIS_G2
   	SetJamram(XXXX,0x4441F1);  // TMRSF_SIVCA_IUP_G2
   	SetJamram(XXXX,0x484110);  // TMRSF_PTCB3_P1_MMT_VINTY_G2
   	SetJamram(XXXX,0x484130);  // TMRSF_OCDRV_UP2_G2
   	SetJamram(XXXX,0x484150);  // TMRSF_2STEP_OC_LAB_LAG_G2
// 	SetJamram(XXXX,0x484170);  // TMRSF_LAPG1_OC_2ND_G2
   	SetJamram(XXXX,0x484190);  // TMRSF_PLAS2_OFF_G2
// 	SetJamram(XXXX,0x4841B0);  // TMRSF_LAPG1_OC_ON_G2
   	SetJamram(XXXX,0x4841D0);  // TMRS_WIDE_PRE_SEN_G2
   	SetJamram(XXXX,0x4841F0);  // TMRSF_PRAS_M3_G2
   	SetJamram(XXXX,0x484111);  // TMRSF_BSG_POV_ON_G2
   	SetJamram(XXXX,0x484131);  // TMRSF_SERIAL_PBR_DIS_G2
   	SetJamram(XXXX,0x484151);  // TMRSF_PCLKWC3_G2_AC_DLY_P1
   	SetJamram(XXXX,0x484171);  // TMRS_PBTBYPASS_INT_G2B
   	SetJamram(XXXX,0x484191);  // TMRSF_FRPD_F_P1_G2_BD_1B
   	SetJamram(XXXX,0x4841B1);  // TMRSF_FRPD_F_M1_G2_BD_1B
   	SetJamram(XXXX,0x4841D1);  // TMRSF_PSECON_G2
   	SetJamram(XXXX,0x4841F1);  // TMRSF_LSAEN_DIS_P1D_G2
   	SetJamram(XXXX,0x4C4110);  // TMRSF_FRPD_DQCPY_P1_G2_AC
   	SetJamram(XXXX,0x4C4130);  // TMRSF_RDREP_CEN_OFF_M1_G2
   	SetJamram(XXXX,0x4C4150);  // TMRSF_PCLKWC4_DIS_DLY_M2_G2_AC
   	SetJamram(XXXX,0x4C4170);  // TMRS_WHITE_G2_AC
   	SetJamram(XXXX,0x4C4190);  // TMRSF_UE_LECCUE_SEL_Z1_PRE
   	SetJamram(XXXX,0x4C41D0);  // TMRSF_OC_LAB_LAG_G2
   	SetJamram(XXXX,0x4C41F0);  // TMRSF_PTCB_M2_VINTY_G2
   	SetJamram(XXXX,0x4C4111);  // TMRSF_PTCB2_P1_VINTY_G2
   	SetJamram(XXXX,0x4C4131);  // TMRSF_MPTCB_M0_VINTY_G2
   	SetJamram(XXXX,0x4C4151);  // TMRSF_OCSA_P1M_P2_VINTY_G2
   	SetJamram(XXXX,0x4C4171);  // TMRSF_LAEQ_PEQ_VINTY_G2
// 	SetJamram(XXXX,0x4C4191);  // TMRSF_CSMR_DSM_P0_VINTY_G2
   	SetJamram(XXXX,0x4C41B1);  // TMRSF_P2_DELAY_ON_VINTY_G2
   	SetJamram(XXXX,0x4C41D1);  // TMRSF_AIVCA_ON_ALL_TESTMODE_G2
   	SetJamram(XXXX,0x4C41F1);  // TMRSF_PAPER_FREF_OFF_G2
// 	SetJamram(XXXX,0x405110);  // TMRSF_PPS1_SEL1_G2
   	SetJamram(XXXX,0x405130);  // TMRSF_LAEQ_EN_P_VINTY_G2
// 	SetJamram(XXXX,0x405150);  // TMRSF_CSMR_PKG_M0_VINTY_G2
   	SetJamram(XXXX,0x405170);  // TMRSF_PXID_GIDL_OFF_G2
   	SetJamram(XXXX,0x405190);  // TMRSF_PTC_DLY_M0_G2
   	SetJamram(XXXX,0x4051B0);  // TMRSF_P2_BETA3_P1_G2
   	SetJamram(XXXX,0x4051D0);  // TMRSF_RDREP_CEN_ON_M1_G2
   	SetJamram(XXXX,0x4051F0);  // TMRSF_WCSL_DIS_MAST_P1_G2_AC
   	SetJamram(XXXX,0x405111);  // TMRSF_ECCEN_INI
   	SetJamram(XXXX,0x405131);  // TMRSF_VBSG_DZ_DN
   	SetJamram(XXXX,0x405151);  // TMRSF_PWACSL2_M1_G1
   	SetJamram(XXXX,0x405171);  // TMRSF_WRRPT_CEN_SET_ON_1B_M1_R
   	SetJamram(XXXX,0x405191);  // TMRSF_LGIOCON_DIS_M1D_G1
   	SetJamram(XXXX,0x4051B1);  // TMRSF_LIOFLT_OFF_G1
   	SetJamram(XXXX,0x4051D1);  // TMRSF_FRPD_DQCPY_P1_G1_BD
   	SetJamram(XXXX,0x4051F1);  // TMRSF_LSA_BST_OFF_G1
   	SetJamram(XXXX,0x445110);  // TMRSF_SGIO_EN_PULSE2_G1
   	SetJamram(XXXX,0x445130);  // TMRSF_VINTLP_SINK0
   	SetJamram(XXXX,0x445150);  // TMRSF_FRPD_F_M1_G1_AC_0B
   	SetJamram(XXXX,0x445170);  // TMRSF_NWEIB_VPP2_FIX_PRE_G1
   	SetJamram(XXXX,0x445190);  // TMRSF_PRBS_MASKING_OFF_G1
   	SetJamram(XXXX,0x4451B0);  // TMRSF_FRPD_S_P1_G1_BD_1B
   	SetJamram(XXXX,0x4451D0);  // TMRSF_DS_MODE_DIS_G1
   	SetJamram(XXXX,0x4451F0);  // TMRSF_SIVCA_IUP_G1
   	SetJamram(XXXX,0x445111);  // TMRSF_PTCB3_P1_MMT_VINTY_G1
   	SetJamram(XXXX,0x445131);  // TMRSF_OCDRV_UP2_G1
   	SetJamram(XXXX,0x445151);  // TMRSF_2STEP_OC_LAB_LAG_G1
// 	SetJamram(XXXX,0x445171);  // TMRSF_LAPG1_OC_2ND_G1
   	SetJamram(XXXX,0x445191);  // TMRSF_PLAS2_OFF_G1
// 	SetJamram(XXXX,0x4451B1);  // TMRSF_LAPG1_OC_ON_G1
   	SetJamram(XXXX,0x4451D1);  // TMRS_WIDE_PRE_SEN_G1
   	SetJamram(XXXX,0x4451F1);  // TMRSF_PRAS_M3_G1
   	SetJamram(XXXX,0x485110);  // TMRSF_BSG_POV_ON_G1
   	SetJamram(XXXX,0x485130);  // TMRSF_SERIAL_PBR_DIS_G1
   	SetJamram(XXXX,0x485150);  // TMRSF_PCLKWC3_G1_AC_DLY_P1
   	SetJamram(XXXX,0x485170);  // TMRS_PBTBYPASS_INT_G1B
   	SetJamram(XXXX,0x485190);  // TMRSF_FRPD_F_P1_G1_BD_1B
   	SetJamram(XXXX,0x4851B0);  // TMRSF_FRPD_F_M1_G1_BD_1B
   	SetJamram(XXXX,0x4851D0);  // TMRSF_PSECON_G1
   	SetJamram(XXXX,0x4851F0);  // TMRSF_LSAEN_DIS_P1D_G1
   	SetJamram(XXXX,0x485111);  // TMRSF_FRPD_DQCPY_P1_G1_AC
   	SetJamram(XXXX,0x485151);  // TMRSF_PCLKWC4_DIS_DLY_M2_G1_AC
   	SetJamram(XXXX,0x485171);  // TMRS_WHITE_G1_AC
   	SetJamram(XXXX,0x485191);  // TMRSF_UE_LECCUE_SEL_PRE
   	SetJamram(XXXX,0x4851B1);  // TMRSF_WCSL_DIS_MAST_M2_G1_BD
   	SetJamram(XXXX,0x4851D1);  // TMRSF_OC_LAB_LAG_G1
   	SetJamram(XXXX,0x4851F1);  // TMRSF_PTCB_M2_VINTY_G1
   	SetJamram(XXXX,0x4C5110);  // TMRSF_PTCB2_P1_VINTY_G1
   	SetJamram(XXXX,0x4C5130);  // TMRSF_MPTCB_M0_VINTY_G1
   	SetJamram(XXXX,0x4C5150);  // TMRSF_OCSA_P1M_P2_VINTY_G1
   	SetJamram(XXXX,0x4C5170);  // TMRSF_LAEQ_PEQ_VINTY_G1
// 	SetJamram(XXXX,0x4C5190);  // TMRSF_CSMR_DSM_P0_VINTY_G1
   	SetJamram(XXXX,0x4C51B0);  // TMRSF_P2_DELAY_ON_VINTY_G1
   	SetJamram(XXXX,0x4C51D0);  // TMRSF_AIVCA_ON_ALL_TESTMODE_G1
   	SetJamram(XXXX,0x4C51F0);  // TMRSF_PAPER_FREF_OFF_G1
// 	SetJamram(XXXX,0x4C5111);  // TMRSF_PPS1_SEL1_G1
   	SetJamram(XXXX,0x4C5131);  // TMRSF_LAEQ_EN_P_VINTY_G1
// 	SetJamram(XXXX,0x4C5151);  // TMRSF_CSMR_PKG_M0_VINTY_G1
   	SetJamram(XXXX,0x4C5171);  // TMRSF_PXID_GIDL_OFF_G1
   	SetJamram(XXXX,0x4C5191);  // TMRSF_PTC_DLY_M0_G1
   	SetJamram(XXXX,0x4C51B1);  // TMRSF_P2_BETA3_P1_G1
   	SetJamram(XXXX,0x4C51F1);  // TMRSF_WCSL_DIS_MAST_P1_G1_AC
   	SetJamram(XXXX,0x446110);  // TMRSF_FRPD_S_M2_G2_AC_0B
   	SetJamram(XXXX,0x446130);  // TMRSF_RDREP_CEN_ON_M2_G2
   	SetJamram(XXXX,0x446150);  // TMRSF_PCLKWC5_EN_G2
   	SetJamram(XXXX,0x446170);  // TMRSF_WRRPT_CEN_SET_ON_0B_M1_C
   	SetJamram(XXXX,0x446190);  // TMRSF_LGIOCON_DIS_P1D_G2
   	SetJamram(XXXX,0x4461B0);  // TMRS_PRTC_SD_B0_G2
   	SetJamram(XXXX,0x4461D0);  // TMRSF_FRPD_DQCPY_M1_G2_BD
   	SetJamram(XXXX,0x4461F0);  // TMRSF_LSA_BST_ALWAYS_ON_G2
   	SetJamram(XXXX,0x446111);  // TMRSF_SGIO_EN_PULSE1_G2
   	SetJamram(XXXX,0x446131);  // TMRS_IDD2P_NMOS
   	SetJamram(XXXX,0x446151);  // TMRSF_PCLKWC4_DBIAC_P1_G2
   	SetJamram(XXXX,0x446171);  // TMRSF_MIN_HIT_ADDR_CARE_OFF_G2
   	SetJamram(XXXX,0x446191);  // TMRSF_MASKING_WITH_PICK_OFF_G2
   	SetJamram(XXXX,0x4461B1);  // TMRSF_FRPD_F_P1_G1_BD_0B
   	SetJamram(XXXX,0x4461D1);  // TMRSF_DS_MODE_IUP_G2
   	SetJamram(XXXX,0x4461F1);  // TMRSF_SIVCA_SINK_UP_G2
   	SetJamram(XXXX,0x486110);  // TMRSF_PTCB3_M_MMT_VINTY_G2
   	SetJamram(XXXX,0x486130);  // TMRSF_OCDRV_UP_G2
   	SetJamram(XXXX,0x486150);  // TMRSF_ROWOPEN_P1_G2
   	SetJamram(XXXX,0x486170);  // TMRS_EDS_ECC_TEST_G2
   	SetJamram(XXXX,0x486190);  // TMRSF_PLAS1_OFF_G2
   	SetJamram(XXXX,0x4861B0);  // TMRSF_PPS1_OFF_G2
   	SetJamram(XXXX,0x4861D0);  // TMRS_PRDL_AP_M0_VINTY_G2
   	SetJamram(XXXX,0x4861F0);  // TMRSF_PRAS_P1_G2
   	SetJamram(XXXX,0x486111);  // TMRSF_BSG_POV_P0_G2
   	SetJamram(XXXX,0x486131);  // TMRSF_SERIAL_PBR_DIS_OFF_G2
   	SetJamram(XXXX,0x486151);  // TMRSF_PCLKWC3_G2_AC_DLY_M1
   	SetJamram(XXXX,0x486171);  // TMRS_PBTBYPASS_INT_G2A
   	SetJamram(XXXX,0x486191);  // TMRSF_FRPD_S_P1_G2_AC_1B
   	SetJamram(XXXX,0x4861B1);  // TMRSF_FRPD_S_M1_G2_AC_1B
   	SetJamram(XXXX,0x4861D1);  // TMRSF_PWACSL2_P1_G2
   	SetJamram(XXXX,0x4861F1);  // TMRSF_LSAEN_DIS_M1D_G2
   	SetJamram(XXXX,0x4C6110);  // TMRSF_FRPD_DQCPY_M1_G2_AC
   	SetJamram(XXXX,0x4C6130);  // TMRSF_RDREP_CEN_OFF_P1_G2
   	SetJamram(XXXX,0x4C6150);  // TMRSF_PCLKWC4_DIS_DLY_M2_G2_BD
   	SetJamram(XXXX,0x4C6170);  // TMRSF_AIVCLANG_PRD_CTRL_G2
   	SetJamram(XXXX,0x4C6190);  // TMRSF_ACT_X8_DIS_OPT1_G2
   	SetJamram(XXXX,0x4C61D0);  // TMRSF_ONE_SCAN_PORT_G2
   	SetJamram(XXXX,0x4C61F0);  // TMRSF_PTCB_M1_VINTY_G2
   	SetJamram(XXXX,0x4C6111);  // TMRSF_PTCB2_M1_VINTY_G2
   	SetJamram(XXXX,0x4C6131);  // TMRSF_MPTCB_P1_VINTY_G2
   	SetJamram(XXXX,0x4C6151);  // TMRSF_OCSA_P1M_P3_VINTY_G2
   	SetJamram(XXXX,0x4C6171);  // TMRSF_PNS2_DLY_M0_VINTY_G2
   	SetJamram(XXXX,0x4C6191);  // TMRSF_BCAT_THINNING_NWEIB_VINTY_G2
   	SetJamram(XXXX,0x4C61B1);  // TMRSF_PPS_P0_VINTY_G2
   	SetJamram(XXXX,0x4C61D1);  // TMRSF_PVINTAS_P0_G2
   	SetJamram(XXXX,0x4C61F1);  // TMRSF_PLAS1_SEL0_G2
// 	////  SetJamram(XXXX,0x407110);  // TMRSF_PNS2_SEL0_G2
// 	SetJamram(XXXX,0x407130);  // TMRSF_CSMR_M0_VINTY_G2
// 	SetJamram(XXXX,0x407150);  // TMRSF_CSMR_PKG_P0_VINTY_G2
   	SetJamram(XXXX,0x407170);  // TMRSF_PAPER_PRENI_DIS_PRE_G2
   	SetJamram(XXXX,0x407190);  // TMRSF_PTC_DLY_P0_G2
// 	////  SetJamram(XXXX,0x4071B0);  // TMRSF_P2_BETA3_P0_G2
   	SetJamram(XXXX,0x4071D0);  // TMRSF_RDREP_CEN_ON_P1_G2
   	SetJamram(XXXX,0x4071F0);  // TMRSF_WCSL_DIS_MAST_M1_G2_AC
   	SetJamram(XXXX,0x407111);  // TMRS_ERRPTN_SNDRM<8>
   	SetJamram(XXXX,0x407131);  // TMRSF_VBSG_EN
   	SetJamram(XXXX,0x407151);  // TMRSF_PCLKWC5_EN_G1
   	SetJamram(XXXX,0x407171);  // TMRSF_WRRPT_CEN_SET_ON_0B_M1_R
   	SetJamram(XXXX,0x407191);  // TMRSF_LGIOCON_DIS_P1D_G1
   	SetJamram(XXXX,0x4071B1);  // TMRS_PRTC_SD_B0_G1
   	SetJamram(XXXX,0x4071D1);  // TMRSF_FRPD_DQCPY_M1_G1_BD
   	SetJamram(XXXX,0x4071F1);  // TMRSF_LSA_BST_ALWAYS_ON_G1
   	SetJamram(XXXX,0x447110);  // TMRSF_SGIO_EN_PULSE1_G1
   	SetJamram(XXXX,0x447130);  // TMRSF_VINTLP_SINK_ACT_ONLY
   	SetJamram(XXXX,0x447150);  // TMRSF_PCLKWC4_DBIAC_P1_G1
   	SetJamram(XXXX,0x447170);  // TMRSF_MIN_HIT_ADDR_CARE_OFF_G1
   	SetJamram(XXXX,0x447190);  // TMRSF_MASKING_WITH_PICK_OFF_G1
   	SetJamram(XXXX,0x4471B0);  // TMRSF_FRPD_S_M2_G1_BD_1B
   	SetJamram(XXXX,0x4471D0);  // TMRSF_DS_MODE_IUP_G1
   	SetJamram(XXXX,0x4471F0);  // TMRSF_SIVCA_SINK_UP_G1
   	SetJamram(XXXX,0x447111);  // TMRSF_PTCB3_M_MMT_VINTY_G1
   	SetJamram(XXXX,0x447131);  // TMRSF_OCDRV_UP_G1
   	SetJamram(XXXX,0x447151);  // TMRSF_ROWOPEN_P1_G1
   	SetJamram(XXXX,0x447171);  // TMRS_EDS_ECC_TEST_G1_L
   	SetJamram(XXXX,0x447191);  // TMRSF_PLAS1_OFF_G1
   	SetJamram(XXXX,0x4471B1);  // TMRSF_PPS1_OFF_G1
   	SetJamram(XXXX,0x4471D1);  // TMRS_PRDL_AP_M0_VINTY_G1
   	SetJamram(XXXX,0x4471F1);  // TMRSF_PRAS_P1_G1
   	SetJamram(XXXX,0x487110);  // TMRSF_BSG_POV_P0_G1
   	SetJamram(XXXX,0x487130);  // TMRSF_SERIAL_PBR_DIS_OFF_G1
   	SetJamram(XXXX,0x487150);  // TMRSF_PCLKWC3_G1_AC_DLY_M1
   	SetJamram(XXXX,0x487170);  // TMRS_PBTBYPASS_INT_G1A
   	SetJamram(XXXX,0x487190);  // TMRSF_FRPD_F_M2_G1_AC_1B
   	SetJamram(XXXX,0x4871D0);  // TMRSF_PWACSL2_P1_G1
   	SetJamram(XXXX,0x4871F0);  // TMRSF_LSAEN_DIS_M1D_G1
   	SetJamram(XXXX,0x487111);  // TMRSF_FRPD_DQCPY_M1_G1_AC
   	SetJamram(XXXX,0x487151);  // TMRSF_PCLKWC4_DIS_DLY_M2_G1_BD
   	SetJamram(XXXX,0x487171);  // TMRSF_AIVCLANG_PRD_CTRL_G1
   	SetJamram(XXXX,0x487191);  // TMRSF_WRRPT_ON_SR_DIS_R
   	SetJamram(XXXX,0x4871D1);  // TMRSF_ONE_SCAN_PORT_G1
   	SetJamram(XXXX,0x4871F1);  // TMRSF_PTCB_M1_VINTY_G1
   	SetJamram(XXXX,0x4C7110);  // TMRSF_PTCB2_M1_VINTY_G1
   	SetJamram(XXXX,0x4C7130);  // TMRSF_MPTCB_P1_VINTY_G1
   	SetJamram(XXXX,0x4C7150);  // TMRSF_OCSA_P1M_P3_VINTY_G1
   	SetJamram(XXXX,0x4C7170);  // TMRSF_PNS2_DLY_M0_VINTY_G1
   	SetJamram(XXXX,0x4C7190);  // TMRSF_BCAT_THINNING_NWEIB_VINTY_G1
   	SetJamram(XXXX,0x4C71B0);  // TMRSF_PPS_P0_VINTY_G1
   	SetJamram(XXXX,0x4C71D0);  // TMRSF_PVINTAS_P0_G1
   	SetJamram(XXXX,0x4C71F0);  // TMRSF_PLAS1_SEL0_G1
// 	////  SetJamram(XXXX,0x4C7111);  // TMRSF_PNS2_SEL0_G1
// 	SetJamram(XXXX,0x4C7131);  // TMRSF_CSMR_M0_VINTY_G1
// 	SetJamram(XXXX,0x4C7151);  // TMRSF_CSMR_PKG_P0_VINTY_G1
   	SetJamram(XXXX,0x4C7171);  // TMRSF_PAPER_PRENI_DIS_PRE_G1
 	SetJamram(XXXX,0x4C7191);  // TMRSF_PTC_DLY_P0_G1
// 	////  SetJamram(XXXX,0x4C71B1);  // TMRSF_P2_BETA3_P0_G1
   	SetJamram(XXXX,0x4C71D1);  // TMRSF_SIVCY_IUP_G1
   	SetJamram(XXXX,0x4C71F1);  // TMRSF_WCSL_DIS_MAST_M1_G1_AC
   	SetJamram(XXXX,0x448110);  // TMRSF_FRPD_F_M1_G2_AC_0B
   	////  SetJamram(XXXX,0x448130);  // TMRSF_DVFSC_TRP_M_G2
   	SetJamram(XXXX,0x448150);  // TMRSF_PTCB_P1_VINTY_G2
   	SetJamram(XXXX,0x448170);  // TMRSF_WRRPT_CEN_RST_ON_1B_P1_C
   	SetJamram(XXXX,0x448190);  // TMRSF_LIOPRB_DIS_P1D_G2
   	SetJamram(XXXX,0x4481B0);  // TMRSF_IOPR_DIS_P1D_G2
   	SetJamram(XXXX,0x4481D0);  // TMRSF_CD_PG_BACTRL_OFF_G2
   	SetJamram(XXXX,0x4481F0);  // TMRSF_LSA_BST_RD_2ND_G2
   	SetJamram(XXXX,0x448131);  // TMRSF_SGIO_REF_CODE3_G2
   	SetJamram(XXXX,0x448151);  // TMRSF_PCLKWC4_DEPTH_P1_G2_AC
   	SetJamram(XXXX,0x448171);  // TMRSF_FRPD_DBI_P1_G2_AC
   	SetJamram(XXXX,0x448191);  // TMRSF_PLSAE_DLY_CTRL_P2_G2
   	SetJamram(XXXX,0x4481B1);  // TMRS_DWL_ODD_G2
   	SetJamram(XXXX,0x4481D1);  // TMRSF_SERIAL_FREF_DIS_OFF_G2
   	SetJamram(XXXX,0x4481F1);  // TMRSF_AIVCLSA_IUP_G2
   	SetJamram(XXXX,0x488110);  // TMRSF_ONE_HACKER_INIT_G2
   	SetJamram(XXXX,0x488130);  // TMRSF_PLAS2_OC_ON_G2
   	SetJamram(XXXX,0x488150);  // TMRS_PSEC_P2_OPEN_G2
   	SetJamram(XXXX,0x488170);  // TMRSF_PXEN_M0_G2
   	SetJamram(XXXX,0x488190);  // TMRSF_REF_PNS1_OFF_G2
   	SetJamram(XXXX,0x4881B0);  // TMRS_PSECON_PI_G2
   	SetJamram(XXXX,0x4881D0);  // TMRSF_AIVCISO_EDGE_OFF_G2
   	SetJamram(XXXX,0x4881F0);  // TMRS_PRDL_AP_P0_VINTY_G2
   	SetJamram(XXXX,0x488111);  // TMRSF_BSG_FLOAT_M1_G2
   	SetJamram(XXXX,0x488131);  // TMRSF_BSG_START_P0_G2
   	SetJamram(XXXX,0x488151);  // TMRSF_PCLKWC4_MAST_P1_G2_BD
   	SetJamram(XXXX,0x488171);  // TMRSF_PCLKWC3_ONLY_G2_BD_DLY_P1
   	SetJamram(XXXX,0x488191);  // TMRSF_FRPD_S_P1_G1_BD_0B
   	SetJamram(XXXX,0x4881B1);  // TMRSF_FRPD_S_M1_G1_BD_0B
   	SetJamram(XXXX,0x4881D1);  // TMRSF_REF_RED_DIS_G2
   	SetJamram(XXXX,0x4881F1);  // TMRSF_LSAEN_P1D_G2
   	SetJamram(XXXX,0x4C8110);  // TMRSF_FRPD_ERR_DQCPY_M1_G2_AC
   	SetJamram(XXXX,0x4C8130);  // TMRSF_PNS2_DLY_P1_VINTY_G2
   	SetJamram(XXXX,0x4C8150);  // TMRSF_PCLKWC4_DIS_DLY_M1_G2_AC
   	SetJamram(XXXX,0x4C8170);  // TMRSF_RCSLE_AP_PW_M_G2
   	SetJamram(XXXX,0x4C8190);  // TMRSF_FRPD_F_P1_G2_AC_1B
   	SetJamram(XXXX,0x4C81D0);  // TMRSF_RFM_OFF_G2
   	SetJamram(XXXX,0x4C81F0);  // TMRSF_ONE_MIN_MAX_ZERO_G2
   	SetJamram(XXXX,0x4C8111);  // TMRS_SUBADJ_G2
   	SetJamram(XXXX,0x4C8131);  // TMRSF_PDRAPB_M2_VINTY_G2
   	SetJamram(XXXX,0x4C8151);  // TMRSF_PNWR_EN_M1_VINTY_G2
   	SetJamram(XXXX,0x4C8171);  // TMRSF_OCSA_P1M_EXTREME_VINTY_G2
   	SetJamram(XXXX,0x4C8191);  // TMRSF_ONE_OFF_G2
   	SetJamram(XXXX,0x4C81B1);  // TMRSF_PPS_M0_VINTY_G2
   	SetJamram(XXXX,0x4C81D1);  // TMRSF_REF_1P5T_G2
   	SetJamram(XXXX,0x4C81F1);  // TMRSF_LAPG_OC_ON_G2
// 	SetJamram(XXXX,0x409110);  // TMRSF_PLAS1_SEL1_G2
   	SetJamram(XXXX,0x409130);  // TMRSF_PNS2_SEL1_G2
// 	SetJamram(XXXX,0x409150);  // TMRSF_CSMR_M1_VINTY_G2
   	SetJamram(XXXX,0x409170);  // TMRSF_PTCB2_M2_VINTY_G2
   	SetJamram(XXXX,0x409190);  // TMRSF_NWEIB_VPP2_EN_G2
   	SetJamram(XXXX,0x4091B0);  // TMRSF_P2_BETA3_SEN_P0_G2
   	SetJamram(XXXX,0x4091D0);  // TMRSF_DRFM_ON_G2
   	SetJamram(XXXX,0x4091F0);  // TMRSF_ONE_CARE_3_4TH_X2_ON_G2
   	SetJamram(XXXX,0x409111);  // TMRSF_BUSRPT_AP_OFF_R
   	SetJamram(XXXX,0x409131);  // TMRS_ERRPTN_SNDRM<7>
   	SetJamram(XXXX,0x409151);  // TMRSF_PTCB_P1_VINTY_G1
   	SetJamram(XXXX,0x409171);  // TMRSF_WRRPT_CEN_RST_ON_1B_P1_R
   	SetJamram(XXXX,0x409191);  // TMRSF_LIOPRB_DIS_P1D_G1
   	SetJamram(XXXX,0x4091B1);  // TMRSF_IOPR_DIS_P1D_G1
   	SetJamram(XXXX,0x4091D1);  // TMRSF_CD_PG_BACTRL_OFF_G1
   	SetJamram(XXXX,0x4091F1);  // TMRSF_LSA_BST_RD_2ND_G1
   	SetJamram(XXXX,0x449130);  // TMRSF_SGIO_REF_CODE3_G1
	SetJamram(XXXX, 0x449150);  // TMRSF_PCLKWC4_DEPTH_P1_G1_AC
	SetJamram(XXXX, 0x449170);  // TMRSF_FRPD_DBI_P1_G1_AC
	SetJamram(XXXX, 0x449190);  // TMRSF_PLSAE_DLY_CTRL_P2_G1
	SetJamram(XXXX, 0x4491B0);  // TMRS_DWL_ODD_G1
	SetJamram(XXXX, 0x4491D0);  // TMRSF_SERIAL_FREF_DIS_OFF_G1
	SetJamram(XXXX, 0x4491F0);  // TMRSF_AIVCLSA_IUP_G1
	SetJamram(XXXX, 0x449111);  // TMRSF_ONE_HACKER_INIT_G1
	SetJamram(XXXX, 0x449131);  // TMRSF_PLAS2_OC_ON_G1
	SetJamram(XXXX, 0x449151);  // TMRS_PSEC_P2_OPEN_G1
	SetJamram(XXXX, 0x449171);  // TMRSF_PXEN_M0_G1
	SetJamram(XXXX, 0x449191);  // TMRSF_REF_PNS1_OFF_G1
	SetJamram(XXXX, 0x4491B1);  // TMRS_PSECON_PI_G1
	SetJamram(XXXX, 0x4491D1);  // TMRSF_AIVCISO_EDGE_OFF_G1
	SetJamram(XXXX, 0x4491F1);  // TMRS_PRDL_AP_P0_VINTY_G1
	SetJamram(XXXX, 0x489110);  // TMRSF_BSG_FLOAT_M1_G1
	SetJamram(XXXX, 0x489130);  // TMRSF_BSG_START_P0_G1
	SetJamram(XXXX, 0x489150);  // TMRSF_PCLKWC4_MAST_P1_G1_BD
	SetJamram(XXXX, 0x489170);  // TMRSF_PCLKWC3_ONLY_G1_BD_DLY_P1
	SetJamram(XXXX, 0x489190);  // TMRSF_FRPD_S_M1_G1_AC_1B
	SetJamram(XXXX, 0x4891B0);  // TMRSF_DVFSC_RED_P_G1
	SetJamram(XXXX, 0x4891D0);  // TMRSF_REF_RED_DIS_G1
	SetJamram(XXXX, 0x4891F0);  // TMRSF_LSAEN_P1D_G1
	SetJamram(XXXX, 0x489111);  // TMRSF_FRPD_ERR_DQCPY_M1_G1_AC
	SetJamram(XXXX, 0x489131);  // TMRSF_PNS2_DLY_P1_VINTY_G1
	SetJamram(XXXX, 0x489151);  // TMRSF_PCLKWC4_DIS_DLY_M1_G1_AC
	SetJamram(XXXX, 0x489171);  // TMRSF_RCSLE_AP_PW_M_G1
	SetJamram(XXXX, 0x489191);  // TMRSF_SIVCLSA_IUP_G1
	SetJamram(XXXX, 0x4891D1);  // TMRSF_RFM_OFF_G1
	SetJamram(XXXX, 0x4891F1);  // TMRSF_ONE_MIN_MAX_ZERO_G1
	SetJamram(XXXX, 0x4C9110);  // TMRS_SUBADJ_G1
	SetJamram(XXXX, 0x4C9130);  // TMRSF_PDRAPB_M2_VINTY_G1
	SetJamram(XXXX, 0x4C9150);  // TMRSF_PNWR_EN_M1_VINTY_G1
	SetJamram(XXXX, 0x4C9170);  // TMRSF_OCSA_P1M_EXTREME_VINTY_G1
	SetJamram(XXXX, 0x4C9190);  // TMRSF_ONE_OFF_G1
	SetJamram(XXXX, 0x4C91B0);  // TMRSF_PPS_M0_VINTY_G1
	SetJamram(XXXX, 0x4C91D0);  // TMRSF_REF_1P5T_G1
	SetJamram(XXXX, 0x4C91F0);  // TMRSF_LAPG_OC_ON_G1
// 	SetJamram(XXXX,0x4C9111);  // TMRSF_PLAS1_SEL1_G1
	SetJamram(XXXX, 0x4C9131);  // TMRSF_PNS2_SEL1_G1
//	SetJamram(XXXX, 0x4C9151);  // TMRSF_CSMR_M1_VINTY_G1
	SetJamram(XXXX, 0x4C9171);  // TMRSF_PTCB2_M2_VINTY_G1
	SetJamram(XXXX, 0x4C9191);  // TMRSF_NWEIB_VPP2_EN_G1
	SetJamram(XXXX, 0x4C91B1);  // TMRSF_P2_BETA3_SEN_P0_G1
	SetJamram(XXXX, 0x4C91D1);  // TMRSF_DRFM_ON_G1
	SetJamram(XXXX, 0x4C91F1);  // TMRSF_ONE_CARE_3_4TH_X2_ON_G1
	SetJamram(XXXX, 0x44A110);  // TMRSF_FRPD_S_P1_G2_BD_0B
	SetJamram(XXXX, 0x44A130);  // TMRSF_FRPD_S_M1_G2_BD_0B
	SetJamram(XXXX, 0x44A150);  // TMRSF_OCSA_NOR_REF_VINTY_G2
	SetJamram(XXXX, 0x44A170);  // TMRSF_WRRPT_CEN_RST_ON_0B_P1_C
	SetJamram(XXXX, 0x44A190);  // TMRSF_LIOPRB_DIS_M1D_G2
	SetJamram(XXXX, 0x44A1B0);  // TMRSF_ORG_DVFSC_PLSAEN_G2
	SetJamram(XXXX, 0x44A1D0);  // TMRS_PRTC_DLR_G2
	SetJamram(XXXX, 0x44A1F0);  // TMRS_ERRBNKSEL_G2
	SetJamram(XXXX, 0x44A111);  // TMRSF_GIOSPLIT_G2
	SetJamram(XXXX, 0x44A131);  // TMRSF_SGIO_REF_CODE2_G2
	SetJamram(XXXX, 0x44A151);  // TMRSF_PCLKWC4_DEPTH_P1_G2_BD
	SetJamram(XXXX, 0x44A171);  // TMRSF_FRPD_DBI_P1_G2_BD
	SetJamram(XXXX, 0x44A191);  // TMRSF_PLSAE_DLY_CTRL_M2_G2
	SetJamram(XXXX, 0x44A1B1);  // TMRSF_SEED_UPDATE_OFF_G2
	SetJamram(XXXX, 0x44A1D1);  // TMRSF_SERIAL_FREF_DIS_G2
	SetJamram(XXXX, 0x44A1F1);  // TMRSF_AIVCLP_IDDX_UP2_G2
	SetJamram(XXXX, 0x48A110);  // TMRSF_ONE_COUNTER_RESET_G2
	SetJamram(XXXX, 0x48A130);  // TMRSF_PLAS1_OC_OFF_G2
	//SetJamram(XXXX, 0x48A150);  // TMRSF_FAST_OC_OFFB_G2
	SetJamram(XXXX, 0x48A170);  // TMRSF_PXEN_M1_G2
	SetJamram(XXXX, 0x48A190);  // TMRSF_VRC_ON_VINTY_G2
	SetJamram(XXXX, 0x48A1B0);  // TMRSF_IDD3N_ADJ_G2
	SetJamram(XXXX, 0x48A1D0);  // TMRSF_RD_PG_COND_G2
	SetJamram(XXXX, 0x48A1F0);  // TMRSF_PNS1_SEL0_G2
	SetJamram(XXXX, 0x48A111);  // TMRSF_BSG_PRE_M0_G2
	SetJamram(XXXX, 0x48A131);  // TMRSF_BSG_START_P1_G2
	SetJamram(XXXX, 0x48A151);  // TMRSF_PCLKWC4_MAST_M1_G2_BD
	SetJamram(XXXX, 0x48A171);  // TMRSF_PCLKWC3_ONLY_G2_BD_DLY_M1
	SetJamram(XXXX, 0x48A191);  // TMRS_DLR_SEL_IOSA_G2_CD
	SetJamram(XXXX, 0x48A1B1);  // TMRSF_FRPD_S_M2_G2_BD_1B
	SetJamram(XXXX, 0x48A1D1);  // TMRS_MWL4_C2C_G2
	SetJamram(XXXX, 0x48A1F1);  // TMRSF_LSAEN_M1D_G2
	SetJamram(XXXX, 0x4CA110);  // TMRS_ERRINJ_C
	SetJamram(XXXX, 0x4CA130);  // TMRSF_PNS2_DLY_P0_VINTY_G2
	SetJamram(XXXX, 0x4CA150);  // TMRSF_PCLKWC4_DIS_DLY_M1_G2_BD
	SetJamram(XXXX, 0x4CA170);  // TMRSF_RCSLE_AP_PW_P1_G2
	SetJamram(XXXX, 0x4CA190);  // TMRSF_FRPD_F_M2_G2_AC_1B
	SetJamram(XXXX, 0x4CA1D0);  // TMRSF_LAEQ_EN_M_VINTY_G2
	SetJamram(XXXX, 0x4CA1F0);  // TMRSF_ONE_OSC_FAST_G2
	SetJamram(XXXX, 0x4CA111);  // TMRSF_REF_LAB1VT_G2
	SetJamram(XXXX, 0x4CA131);  // TMRSF_PRAS_M2_VINTY_G2
// 	SetJamram(XXXX,0x4CA151);  // TMRSF_OCSA_P1M_M0_VINTY_G2
	SetJamram(XXXX, 0x4CA171);  // TMRSF_CRFSA_P2P_P0_VINTY_G2
	SetJamram(XXXX, 0x4CA191);  // TMRS_MRS_N_G2
	SetJamram(XXXX, 0x4CA1B1);  // TMRSF_PPS1_SEN_EN_G2
	SetJamram(XXXX, 0x4CA1D1);  // TMRSF_REF_1P3T_G2
	SetJamram(XXXX, 0x4CA1F1);  // TMRSF_PVINTAS_M0_G2
	SetJamram(XXXX, 0x40B110);  // TMRSF_REF_PLAS1_OFF_G2
	SetJamram(XXXX, 0x40B130);  // TMRSF_PNS3_SEL0_G2

	}
#endif

	//1501~2000
#if 1
	{
// 	SetJamram(XXXX,0x40B150);  // TMRSF_CSMR_M2_VINTY_G2
   	SetJamram(XXXX,0x40B170);  // TMRSF_PTCB3_M2_VINTY_G2
   	SetJamram(XXXX,0x40B190);  // TMRSF_REF_NWEIB_TOGGLE_G2
   	SetJamram(XXXX,0x40B1B0);  // TMRSF_P2_BETA3_SEN_P1_G2
   	SetJamram(XXXX,0x40B1D0);  // TMRS_MWL20_WRED_G2
   	////  SetJamram(XXXX,0x40B1F0);  // TMRSF_ONE_CARE_3_4TH_ON_G2
   	SetJamram(XXXX,0x40B111);  // TMRSF_ONE_TMMT_EN_MST_RR
   	SetJamram(XXXX,0x40B131);  // TMRS_ERRPTN_SNDRM<6>
   	SetJamram(XXXX,0x40B151);  // TMRSF_OCSA_NOR_REF_VINTY_G1
   	SetJamram(XXXX,0x40B171);  // TMRSF_WRRPT_CEN_RST_ON_0B_P1_R
   	SetJamram(XXXX,0x40B191);  // TMRSF_LIOPRB_DIS_M1D_G1
   	SetJamram(XXXX,0x40B1B1);  // TMRSF_ORG_DVFSC_PLSAEN_G1
   	SetJamram(XXXX,0x40B1D1);  // TMRS_PRTC_DLR_G1
   	SetJamram(XXXX,0x40B1F1);  // TMRS_ERRBNKSEL_G1
   	SetJamram(XXXX,0x44B110);  // TMRSF_GIOSPLIT_G1
   	SetJamram(XXXX,0x44B130);  // TMRSF_SGIO_REF_CODE2_G1
   	SetJamram(XXXX,0x44B150);  // TMRSF_PCLKWC4_DEPTH_P1_G1_BD
   	SetJamram(XXXX,0x44B170);  // TMRSF_FRPD_DBI_P1_G1_BD
   	SetJamram(XXXX,0x44B190);  // TMRSF_PLSAE_DLY_CTRL_M2_G1
   	SetJamram(XXXX,0x44B1B0);  // TMRSF_SEED_UPDATE_OFF_G1
   	SetJamram(XXXX,0x44B1D0);  // TMRSF_SERIAL_FREF_DIS_G1
   	SetJamram(XXXX,0x44B1F0);  // TMRSF_AIVCLP_IDDX_UP2_G1
   	SetJamram(XXXX,0x44B111);  // TMRSF_ONE_COUNTER_RESET_G1
   	SetJamram(XXXX,0x44B131);  // TMRSF_PLAS1_OC_OFF_G1
   	////  SetJamram(XXXX,0x44B151);  // TMRSF_FAST_OC_OFFB_G1
   	SetJamram(XXXX,0x44B171);  // TMRSF_PXEN_M1_G1
   	SetJamram(XXXX,0x44B191);  // TMRSF_VRC_ON_VINTY_G1
   	SetJamram(XXXX,0x44B1B1);  // TMRSF_IDD3N_ADJ_G1
   	SetJamram(XXXX,0x44B1D1);  // TMRSF_RD_PG_COND_G1
   	SetJamram(XXXX,0x44B1F1);  // TMRSF_PNS1_SEL0_G1
   	SetJamram(XXXX,0x48B110);  // TMRSF_BSG_PRE_M0_G1
   	SetJamram(XXXX,0x48B130);  // TMRSF_BSG_START_P1_G1
   	SetJamram(XXXX,0x48B150);  // TMRSF_PCLKWC4_MAST_M1_G1_BD
   	SetJamram(XXXX,0x48B170);  // TMRSF_PCLKWC3_ONLY_G1_BD_DLY_M1
   	SetJamram(XXXX,0x48B190);  // TMRS_DLR_SEL_IOSA_G1_CD
   	SetJamram(XXXX,0x48B1B0);  // TMRSF_FRPD_S_M1_G1_AC_0B
   	SetJamram(XXXX,0x48B1D0);  // TMRS_MWL4_C2C_G1
   	SetJamram(XXXX,0x48B1F0);  // TMRSF_LSAEN_M1D_G1
   	SetJamram(XXXX,0x48B111);  // TMRS_ERRINJ_R
   	SetJamram(XXXX,0x48B131);  // TMRSF_PNS2_DLY_P0_VINTY_G1
   	SetJamram(XXXX,0x48B151);  // TMRSF_PCLKWC4_DIS_DLY_M1_G1_BD
   	SetJamram(XXXX,0x48B171);  // TMRSF_RCSLE_AP_PW_P1_G1
   	SetJamram(XXXX,0x48B191);  // TMRSF_SIVCLP_IUP_G1
   	SetJamram(XXXX,0x48B1B1);  // TMRSF_WCSL_DIS_MAST_M2_G1_AC
   	SetJamram(XXXX,0x48B1D1);  // TMRSF_LAEQ_EN_M_VINTY_G1
   	SetJamram(XXXX,0x48B1F1);  // TMRSF_ONE_OSC_FAST_G1
   	SetJamram(XXXX,0x4CB110);  // TMRSF_REF_LAB1VT_G1
   	SetJamram(XXXX,0x4CB130);  // TMRSF_PRAS_M2_VINTY_G1
// 	SetJamram(XXXX,0x4CB150);  // TMRSF_OCSA_P1M_M0_VINTY_G1
   	SetJamram(XXXX,0x4CB170);  // TMRSF_CRFSA_P2P_P0_VINTY_G1
   	SetJamram(XXXX,0x4CB190);  // TMRS_MRS_N_G1
   	SetJamram(XXXX,0x4CB1B0);  // TMRSF_PPS1_SEN_EN_G1
   	SetJamram(XXXX,0x4CB1D0);  // TMRSF_REF_1P3T_G1
   	SetJamram(XXXX,0x4CB1F0);  // TMRSF_PVINTAS_M0_G1
   	SetJamram(XXXX,0x4CB111);  // TMRSF_REF_PLAS1_OFF_G1
   	SetJamram(XXXX,0x4CB131);  // TMRSF_PNS3_SEL0_G1
// 	SetJamram(XXXX,0x4CB151);  // TMRSF_CSMR_M2_VINTY_G1
   	SetJamram(XXXX,0x4CB171);  // TMRSF_PTCB3_M2_VINTY_G1
   	SetJamram(XXXX,0x4CB191);  // TMRSF_REF_NWEIB_TOGGLE_G1
   	SetJamram(XXXX,0x4CB1B1);  // TMRSF_P2_BETA3_SEN_P1_G1
   	SetJamram(XXXX,0x4CB1D1);  // TMRS_MWL20_WRED_G1
   	////  SetJamram(XXXX,0x4CB1F1);  // TMRSF_ONE_CARE_3_4TH_ON_G1
   	SetJamram(XXXX,0x44C110);  // TMRSF_FRPD_F_P1_G2_BD_0B
   	SetJamram(XXXX,0x44C130);  // TMRSF_FRPD_F_M1_G2_BD_0B
// 	////  SetJamram(XXXX,0x44C150);  // TMRSF_OCSA_REFOFF1_VINTY_G2
   	SetJamram(XXXX,0x44C170);  // TMRSF_WRRPT_CEN_SET_ON_1B_P1_C
   	SetJamram(XXXX,0x44C190);  // TMRSF_MPDT_DIS_P1_G2
   	SetJamram(XXXX,0x44C1B0);  // TMRSF_VINT_FRP_P2_G2
   	SetJamram(XXXX,0x44C1D0);  // TMRS_WHITE_G2_BD
   	SetJamram(XXXX,0x44C1F0);  // TMRS_IEPBT_D0_G2
   	SetJamram(XXXX,0x44C131);  // TMRSF_SGIO_REF_CODE1_G2
   	SetJamram(XXXX,0x44C171);  // TMRSF_FRPD_DBI_M1_G2_AC
   	SetJamram(XXXX,0x44C191);  // TMRSF_PLSAE_DLY_CTRL_P1_G2
   	SetJamram(XXXX,0x44C1B1);  // TMRSF_RANDOM_F_PICK_ON_G2
   	SetJamram(XXXX,0x44C1D1);  // TMRSF_ERH_RATIO_MIX2_G2
   	SetJamram(XXXX,0x44C1F1);  // TMRSF_AIVCLP_IDDX_UP1_G2
   	SetJamram(XXXX,0x48C110);  // TMRSF_FREF_LTRAS_OFF_G2
   	SetJamram(XXXX,0x48C130);  // TMRSF_OCDRV_UP3_2ND_G2
   	SetJamram(XXXX,0x48C150);  // TMRSF_EPSEC12_ON_G2
   	SetJamram(XXXX,0x48C170);  // TMRSF_PXEN_P1_G2
   	SetJamram(XXXX,0x48C190);  // TMRSF_PNS2_DLY_P2_VINTY_G2
   	SetJamram(XXXX,0x48C1B0);  // TMRSF_REF_PNS3_OFF_G2
   	SetJamram(XXXX,0x48C1D0);  // TMRSF_PRD_PG_OFF_G2
   	SetJamram(XXXX,0x48C1F0);  // TMRS_PRDL_AP_G2
   	SetJamram(XXXX,0x48C111);  // TMRSF_BSG_PRE_M1_G2
   	SetJamram(XXXX,0x48C131);  // TMRSF_BSG_ON_G2
   	SetJamram(XXXX,0x48C151);  // TMRSF_PCLKWC4_MAST_P1_G2_AC
   	SetJamram(XXXX,0x48C171);  // TMRSF_PCLKWC3_ONLY_G2_AC_DLY_P1
   	SetJamram(XXXX,0x48C191);  // TMRSF_SFREF_SENSING_MINUS_ONE_G2
   	SetJamram(XXXX,0x48C1B1);  // TMRSF_FRPD_F_M2_G2_BD_1B
   	SetJamram(XXXX,0x48C1D1);  // TMRSF_DWL_G2
   	SetJamram(XXXX,0x48C1F1);  // TMRSF_LSAEN_EN_P1D_G2
   	SetJamram(XXXX,0x4CC110);  // TMRS_ERRINJEN_G2
   	////  SetJamram(XXXX,0x4CC130);  // TMRSF_FRPD_ERR_M1_G2_AC
   	SetJamram(XXXX,0x4CC150);  // TMRSF_PCLKWC4_DEPTH_M1_G2_AC
   	SetJamram(XXXX,0x4CC170);  // TMRSF_PCLKWC4_DIS_DLY_P1_G2_AC
   	SetJamram(XXXX,0x4CC190);  // TMRSF_FRPD_F_M1_G2_AC_1B
   	SetJamram(XXXX,0x4CC1D0);  // TMRSF_OCSA_P1M_P4_VINTY_G2
   	SetJamram(XXXX,0x4CC1F0);  // TMRSF_FREF_LTRAS_COUNT_X2_G2
   	SetJamram(XXXX,0x4CC111);  // TMRS_VCM_MON_G2
   	SetJamram(XXXX,0x4CC131);  // TMRSF_PRAS_M1_VINTY_G2
// 	SetJamram(XXXX,0x4CC151);  // TMRSF_OCSA_P1M_M1_VINTY_G2
   	SetJamram(XXXX,0x4CC171);  // TMRSF_P2P3_FAST_DIS_VINTY_G2
   	SetJamram(XXXX,0x4CC191);  // TMRS_MRS_P_G2
   	SetJamram(XXXX,0x4CC1B1);  // TMRSF_P2_FAST_OFF_VINTY_G2
   	SetJamram(XXXX,0x4CC1D1);  // TMRSF_REF_1P15T_G2
   	SetJamram(XXXX,0x4CC1F1);  // TMRSF_ICC3POFF_G2
   	SetJamram(XXXX,0x40D110);  // TMRS_ALABD_G2
// 	////  SetJamram(XXXX,0x40D130);  // TMRSF_PNS3_SEL1_G2
// 	SetJamram(XXXX,0x40D150);  // TMRSF_CSMR_M3_VINTY_G2
   	SetJamram(XXXX,0x40D170);  // TMRSF_PTCB3_M1_VINTY_G2
   	SetJamram(XXXX,0x40D190);  // TMRSF_NWEIB_VPP_REF_G2
   	SetJamram(XXXX,0x40D1B0);  // TMRSF_P2_BETA3_M0_G2
   	SetJamram(XXXX,0x40D1D0);  // TMRS_SIMPX_G2
   	SetJamram(XXXX,0x40D1F0);  // TMRSF_ONE_CARE_3_4TH_CODE1_G2
   	SetJamram(XXXX,0x40D111);  // TMRS_ERRINJ_DSF
   	SetJamram(XXXX,0x40D131);  // TMRSF_VBSG_ACT_IDN
// 	////  SetJamram(XXXX,0x40D151);  // TMRSF_OCSA_REFOFF1_VINTY_G1
   	SetJamram(XXXX,0x40D171);  // TMRSF_WRRPT_CEN_SET_ON_1B_P1_R
   	SetJamram(XXXX,0x40D191);  // TMRSF_MPDT_DIS_P1_G1
   	SetJamram(XXXX,0x40D1B1);  // TMRSF_VINT_FRP_P2_G1
   	SetJamram(XXXX,0x40D1D1);  // TMRS_WHITE_G1_BD
   	SetJamram(XXXX,0x40D1F1);  // TMRS_IEPBT_D0_G1
   	SetJamram(XXXX,0x44D130);  // TMRSF_SGIO_REF_CODE1_G1
   	SetJamram(XXXX,0x44D150);  // TMRSF_FRPD_F_M2_G1_AC_0B
   	SetJamram(XXXX,0x44D170);  // TMRSF_FRPD_DBI_M1_G1_AC
   	SetJamram(XXXX,0x44D190);  // TMRSF_PLSAE_DLY_CTRL_P1_G1
   	SetJamram(XXXX,0x44D1B0);  // TMRSF_RANDOM_F_PICK_ON_G1
   	SetJamram(XXXX,0x44D1D0);  // TMRSF_ERH_RATIO_MIX2_G1
   	SetJamram(XXXX,0x44D1F0);  // TMRSF_AIVCLP_IDDX_UP1_G1
   	SetJamram(XXXX,0x44D111);  // TMRSF_FREF_LTRAS_OFF_G1
   	SetJamram(XXXX,0x44D131);  // TMRSF_OCDRV_UP3_2ND_G1
   	SetJamram(XXXX,0x44D151);  // TMRSF_EPSEC12_ON_G1
   	SetJamram(XXXX,0x44D171);  // TMRSF_PXEN_P1_G1
   	SetJamram(XXXX,0x44D191);  // TMRSF_PNS2_DLY_P2_VINTY_G1
   	SetJamram(XXXX,0x44D1B1);  // TMRSF_REF_PNS3_OFF_G1
   	SetJamram(XXXX,0x44D1D1);  // TMRSF_PRD_PG_OFF_G1
   	SetJamram(XXXX,0x44D1F1);  // TMRS_PRDL_AP_G1
   	SetJamram(XXXX,0x48D110);  // TMRSF_BSG_PRE_M1_G1
   	SetJamram(XXXX,0x48D130);  // TMRSF_BSG_ON_G1
   	SetJamram(XXXX,0x48D150);  // TMRSF_PCLKWC4_MAST_P1_G1_AC
   	SetJamram(XXXX,0x48D170);  // TMRSF_PCLKWC3_ONLY_G1_AC_DLY_P1
   	SetJamram(XXXX,0x48D190);  // TMRSF_SFREF_SENSING_MINUS_ONE_G1
   	SetJamram(XXXX,0x48D1B0);  // TMRSF_FRPD_F_M2_G1_BD_1B
   	SetJamram(XXXX,0x48D1D0);  // TMRSF_DWL_G1
   	SetJamram(XXXX,0x48D1F0);  // TMRSF_LSAEN_EN_P1D_G1
   	SetJamram(XXXX,0x48D111);  // TMRS_ERRINJEN_G1
   	////  SetJamram(XXXX,0x48D131);  // TMRSF_FRPD_ERR_M1_G1_AC
   	SetJamram(XXXX,0x48D151);  // TMRSF_PCLKWC4_DEPTH_M1_G1_AC
   	SetJamram(XXXX,0x48D171);  // TMRSF_PCLKWC4_DIS_DLY_P1_G1_AC
   	SetJamram(XXXX,0x48D191);  // TMRSF_SIVCPG_IUP_G1
   	SetJamram(XXXX,0x48D1D1);  // TMRSF_OCSA_P1M_P4_VINTY_G1
   	SetJamram(XXXX,0x48D1F1);  // TMRSF_FREF_LTRAS_COUNT_X2_G1
   	SetJamram(XXXX,0x4CD110);  // TMRS_VCM_MON_G1
   	SetJamram(XXXX,0x4CD130);  // TMRSF_PRAS_M1_VINTY_G1
// 	SetJamram(XXXX,0x4CD150);  // TMRSF_OCSA_P1M_M1_VINTY_G1
   	SetJamram(XXXX,0x4CD170);  // TMRSF_P2P3_FAST_DIS_VINTY_G1
   	SetJamram(XXXX,0x4CD190);  // TMRS_MRS_P_G1
   	SetJamram(XXXX,0x4CD1B0);  // TMRSF_P2_FAST_OFF_VINTY_G1
   	SetJamram(XXXX,0x4CD1D0);  // TMRSF_REF_1P15T_G1
   	SetJamram(XXXX,0x4CD1F0);  // TMRSF_ICC3POFF_G1
   	SetJamram(XXXX,0x4CD111);  // TMRS_ALABD_G1
// 	////  SetJamram(XXXX,0x4CD131);  // TMRSF_PNS3_SEL1_G1
// 	SetJamram(XXXX,0x4CD151);  // TMRSF_CSMR_M3_VINTY_G1
   	SetJamram(XXXX,0x4CD171);  // TMRSF_PTCB3_M1_VINTY_G1
   	SetJamram(XXXX,0x4CD191);  // TMRSF_NWEIB_VPP_REF_G1
   	SetJamram(XXXX,0x4CD1B1);  // TMRSF_P2_BETA3_M0_G1
   	SetJamram(XXXX,0x4CD1D1);  // TMRS_SIMPX_G1
   	SetJamram(XXXX,0x4CD1F1);  // TMRSF_ONE_CARE_3_4TH_CODE1_G1
   	SetJamram(XXXX,0x44E110);  // TMRSF_FRPD_S_P1_G2_AC_0B
   	SetJamram(XXXX,0x44E130);  // TMRSF_FRPD_S_M1_G2_AC_0B
// 	////  SetJamram(XXXX,0x44E150);  // TMRSF_OCSA_REFOFF0_VINTY_G2
   	SetJamram(XXXX,0x44E170);  // TMRSF_WRRPT_CEN_SET_ON_0B_P1_C
   	SetJamram(XXXX,0x44E190);  // TMRSF_MPDT_DIS_M1_G2
   	SetJamram(XXXX,0x44E1B0);  // TMRSF_VINT_FRP_P1_G2
   	SetJamram(XXXX,0x44E1D0);  // TMRS_PBT_DLR_EN_G2
   	SetJamram(XXXX,0x44E1F0);  // TMRS_IEPBT_D1_G2
   	SetJamram(XXXX,0x44E131);  // TMRSF_SGIO_SEL_G2
   	SetJamram(XXXX,0x44E151);  // TMRSF_PCLKWC4_DBIAC_M1_G2
   	SetJamram(XXXX,0x44E171);  // TMRSF_FRPD_DBI_M1_G2_BD
   	SetJamram(XXXX,0x44E191);  // TMRSF_PLSAE_DLY_CTRL_M1_G2
   	SetJamram(XXXX,0x44E1B1);  // TMRSF_RANDOM_F_CARE_ON_G2
   	SetJamram(XXXX,0x44E1D1);  // TMRSF_ERH_RATIO_MIX1_G2
   	SetJamram(XXXX,0x44E1F1);  // TMRSF_AIVCPG_IUP_G2
   	SetJamram(XXXX,0x48E110);  // TMRSF_ONE_ALWAYS_DRA_ON_G2
   	SetJamram(XXXX,0x48E130);  // TMRSF_OCDRV_UP2_2ND_G2
   	SetJamram(XXXX,0x48E150);  // TMRS_TMMT_G2
   	SetJamram(XXXX,0x48E170);  // TMRSF_PLAS1_OR_EBS_SEL_G2
   	SetJamram(XXXX,0x48E190);  // TMRSF_PLAS2_SEL1_G2
   	SetJamram(XXXX,0x48E1B0);  // TMRSF_REF_PNS2_OFF_G2
   	SetJamram(XXXX,0x48E1D0);  // TMRSF_ROWOPEN_P0_G2
   	SetJamram(XXXX,0x48E1F0);  // TMRS_AP2_EN_G2
   	SetJamram(XXXX,0x48E111);  // TMRSF_BSG_POV_M0_G2
   	SetJamram(XXXX,0x48E131);  // TMRSF_BSG_PSDD_G2
   	SetJamram(XXXX,0x48E151);  // TMRSF_PCLKWC4_MAST_M1_G2_AC
   	SetJamram(XXXX,0x48E171);  // TMRSF_PCLKWC3_ONLY_G2_AC_DLY_M1
   	SetJamram(XXXX,0x48E191);  // TMRSF_FRPD_F_P1_G2_AC_0B
   	SetJamram(XXXX,0x48E1B1);  // TMRSF_FRPD_S_M2_G2_AC_1B
   	SetJamram(XXXX,0x48E1D1);  // TMRS_MARS_4PXI_RD_G2
   	SetJamram(XXXX,0x48E1F1);  // TMRSF_LSAEN_EN_M1D_G2
   	SetJamram(XXXX,0x4CE110);  // TMRS_RBLPBT_ON_G2
   	////  SetJamram(XXXX,0x4CE130);  // TMRSF_FRPD_ERR_M1_G2_BD
   	SetJamram(XXXX,0x4CE150);  // TMRSF_PCLKWC4_DEPTH_M1_G2_BD
   	SetJamram(XXXX,0x4CE170);  // TMRSF_PCLKWC4_DIS_DLY_P1_G2_BD
   	SetJamram(XXXX,0x4CE190);  // TMRS_IDD2PX2
   	SetJamram(XXXX,0x4CE1B0);  // TMRSF_WCSL_DIS_MAST_M2_G2_AC
// 	SetJamram(XXXX,0x4CE1D0);  // TMRSF_CSMR_P3_VINTY_G2
   	SetJamram(XXXX,0x4CE1F0);  // TMRSF_FREF_LTRAS_OSC_FAST_G2
   	SetJamram(XXXX,0x4CE111);  // TMRS_MARS_G2
   	SetJamram(XXXX,0x4CE131);  // TMRSF_PDRAPB_M1_VINTY_G2
   	SetJamram(XXXX,0x4CE151);  // TMRSF_OCSA_P1M_M2_VINTY_G2
   	SetJamram(XXXX,0x4CE171);  // TMRSF_OCSA_P2PRE_M_VINTY_G2
   	SetJamram(XXXX,0x4CE191);  // TMRS_CBR_SENDIS_PRE_G2
   	SetJamram(XXXX,0x4CE1B1);  // TMRSF_LAPG_OC_2ND_G2
   	SetJamram(XXXX,0x4CE1D1);  // TMRSF_PDRAPB_M3_VINTY_G2
   	SetJamram(XXXX,0x4CE1F1);  // TMRSF_ICC3NOFF_G2
   	SetJamram(XXXX,0x40F110);  // TMRSF_PTC_UP1_G2
// 	SetJamram(XXXX,0x40F130);  // TMRSF_PNS1_SEL1_G2
// 	SetJamram(XXXX,0x40F150);  // TMRSF_CSMR_P0_VINTY_G2
// 	SetJamram(XXXX,0x40F170);  // TMRSF_PTCB3_P1_VINTY_G2
   	SetJamram(XXXX,0x40F190);  // TMRSF_NWEIB_VPP2_DIS_G2
   	SetJamram(XXXX,0x40F1B0);  // TMRSF_P2_BETA3_M1_G2
   	SetJamram(XXXX,0x40F1D0);  // TMRS_DWL_ODD_34_G2
   	SetJamram(XXXX,0x40F1F0);  // TMRSF_ONE_CARE_3_4TH_CODE0_G2
   	SetJamram(XXXX,0x40F111);  // TMRS_PBT_TGGL_G1
   	SetJamram(XXXX,0x40F131);  // TMRSF_VBSG_ALWAYS_ACTIVE_ON
// 	////  SetJamram(XXXX,0x40F151);  // TMRSF_OCSA_REFOFF0_VINTY_G1
   	SetJamram(XXXX,0x40F171);  // TMRSF_WRRPT_CEN_SET_ON_0B_P1_R
   	SetJamram(XXXX,0x40F191);  // TMRSF_MPDT_DIS_M1_G1
   	SetJamram(XXXX,0x40F1B1);  // TMRSF_VINT_FRP_P1_G1
   	SetJamram(XXXX,0x40F1D1);  // TMRS_PBT_DLR_EN_G1
   	SetJamram(XXXX,0x40F1F1);  // TMRS_IEPBT_D1_G1
   	SetJamram(XXXX,0x44F130);  // TMRSF_SGIO_SEL_G1
   	SetJamram(XXXX,0x44F150);  // TMRSF_PCLKWC4_DBIAC_M1_G1
   	SetJamram(XXXX,0x44F170);  // TMRSF_FRPD_DBI_M1_G1_BD
   	SetJamram(XXXX,0x44F190);  // TMRSF_PLSAE_DLY_CTRL_M1_G1
   	SetJamram(XXXX,0x44F1B0);  // TMRSF_RANDOM_F_CARE_ON_G1
   	SetJamram(XXXX,0x44F1D0);  // TMRSF_ERH_RATIO_MIX1_G1
   	SetJamram(XXXX,0x44F1F0);  // TMRSF_AIVCPG_IUP_G1
   	SetJamram(XXXX,0x44F111);  // TMRSF_ONE_ALWAYS_DRA_ON_G1
   	SetJamram(XXXX,0x44F131);  // TMRSF_OCDRV_UP2_2ND_G1
   	SetJamram(XXXX,0x44F151);  // TMRS_TMMT_G1
   	SetJamram(XXXX,0x44F171);  // TMRSF_PLAS1_OR_EBS_SEL_G1
   	SetJamram(XXXX,0x44F191);  // TMRSF_PLAS2_SEL1_G1
   	SetJamram(XXXX,0x44F1B1);  // TMRSF_REF_PNS2_OFF_G1
   	SetJamram(XXXX,0x44F1D1);  // TMRSF_ROWOPEN_P0_G1
   	SetJamram(XXXX,0x44F1F1);  // TMRS_AP2_EN_G1
   	SetJamram(XXXX,0x48F110);  // TMRSF_BSG_POV_M0_G1
   	SetJamram(XXXX,0x48F130);  // TMRSF_BSG_PSDD_G1
   	SetJamram(XXXX,0x48F150);  // TMRSF_PCLKWC4_MAST_M1_G1_AC
   	SetJamram(XXXX,0x48F170);  // TMRSF_PCLKWC3_ONLY_G1_AC_DLY_M1
   	SetJamram(XXXX,0x48F190);  // TMRSF_FRPD_F_P1_G1_AC_1B
   	SetJamram(XXXX,0x48F1B0);  // TMRSF_FRPD_F_M1_G1_AC_1B
   	SetJamram(XXXX,0x48F1D0);  // TMRS_MARS_4PXI_RD_G1
   	SetJamram(XXXX,0x48F1F0);  // TMRSF_LSAEN_EN_M1D_G1
   	SetJamram(XXXX,0x48F111);  // TMRS_RBLPBT_ON_G1
   	////  SetJamram(XXXX,0x48F131);  // TMRSF_FRPD_ERR_M1_G1_BD
   	SetJamram(XXXX,0x48F151);  // TMRSF_PCLKWC4_DEPTH_M1_G1_BD
   	SetJamram(XXXX,0x48F171);  // TMRSF_PCLKWC4_DIS_DLY_P1_G1_BD
   	SetJamram(XXXX,0x48F191);  // TMRSF_SIVCLANG_IUP_G1
// 	SetJamram(XXXX,0x48F1D1);  // TMRSF_CSMR_P3_VINTY_G1
   	SetJamram(XXXX,0x48F1F1);  // TMRSF_FREF_LTRAS_OSC_FAST_G1
   	SetJamram(XXXX,0x4CF110);  // TMRS_MARS_G1
   	SetJamram(XXXX,0x4CF130);  // TMRSF_PDRAPB_M1_VINTY_G1
   	SetJamram(XXXX,0x4CF150);  // TMRSF_OCSA_P1M_M2_VINTY_G1
   	SetJamram(XXXX,0x4CF170);  // TMRSF_OCSA_P2PRE_M_VINTY_G1
   	SetJamram(XXXX,0x4CF190);  // TMRS_CBR_SENDIS_PRE_G1
   	SetJamram(XXXX,0x4CF1B0);  // TMRSF_LAPG_OC_2ND_G1
   	SetJamram(XXXX,0x4CF1D0);  // TMRSF_PDRAPB_M3_VINTY_G1
   	SetJamram(XXXX,0x4CF1F0);  // TMRSF_ICC3NOFF_G1
   	SetJamram(XXXX,0x4CF111);  // TMRSF_PTC_UP1_G1
// 	SetJamram(XXXX,0x4CF131);  // TMRSF_PNS1_SEL1_G1
// 	SetJamram(XXXX,0x4CF151);  // TMRSF_CSMR_P0_VINTY_G1
   	SetJamram(XXXX,0x4CF171);  // TMRSF_PTCB3_P1_VINTY_G1
   	SetJamram(XXXX,0x4CF191);  // TMRSF_NWEIB_VPP2_DIS_G1
   	SetJamram(XXXX,0x4CF1B1);  // TMRSF_P2_BETA3_M1_G1
   	SetJamram(XXXX,0x4CF1D1);  // TMRS_DWL_ODD_34_G1
   	SetJamram(XXXX,0x4CF1F1);  // TMRSF_ONE_CARE_3_4TH_CODE0_G1
   	SetJamram(XXXX,0x600111);  // TMRSF_MASTER_NBTI_OFF
   	SetJamram(XXXX,0x600131);  // TMRSF_CA_0
   	SetJamram(XXXX,0x600151);  // TMRSF_MRR7_OP3
   	SetJamram(XXXX,0x600171);  // TMRSF_EPBT_M1
   	SetJamram(XXXX,0x600191);  // TMRSF_ROWOPEN_M1_DLR_G2C
   	SetJamram(XXXX,0x6001B1);  // TMRSF_ERRCNT_PCKE
   	SetJamram(XXXX,0x6001D1);  // TMRSF_ROWOPEN_P1_DLR_G3D
   	SetJamram(XXXX,0x6001F1);  // TMRSF_CLK_BUF_PCURRENT_UP1
   	SetJamram(XXXX,0x640110);  // TMRSF_CS_TCMD4
   	SetJamram(XXXX,0x640130);  // TMRSF_WCSLE_DIS_M1
   	SetJamram(XXXX,0x640150);  // TMRSF_CA_UNTERM_BUF_ON
   	SetJamram(XXXX,0x640170);  // TMRSF_ROWOPEN_M2_DLR_G0D
   	SetJamram(XXXX,0x640190);  // TMRSF_ROWOPEN_P1_DLR_G2C
   	SetJamram(XXXX,0x6401B0);  // TMRSF_VREFCS_OFF_DIS
   	SetJamram(XXXX,0x6401D0);  // TMRSF_CS_4
   	SetJamram(XXXX,0x640111);  // TMRSF_RFM_MRR_ALWAYS_ON
   	SetJamram(XXXX,0x640131);  // TMRSF_MBWL_SENDIS_PRE
   	SetJamram(XXXX,0x640151);  // TMRSF_ROWOPEN_M2_DLR_G3B
   	SetJamram(XXXX,0x640171);  // TMRSF_ROWOPEN_M2_DLR_G2B
   	SetJamram(XXXX,0x640191);  // TMRSF_TREF_TCR_SEL1
   	SetJamram(XXXX,0x6401B1);  // TMRSF_RDBI_AC_OFF
   	SetJamram(XXXX,0x6401D1);  // TMRSF_CMDBUF_RON_DIS
   	SetJamram(XXXX,0x6401F1);  // TMRSF_AIVCPG_SADRV
   	SetJamram(XXXX,0x680110);  // TMRSF_FREF_ARC
   	SetJamram(XXXX,0x680130);  // TMRSF_TREF_TCR_SEL2
   	SetJamram(XXXX,0x680150);  // TMRSF_SINGLE_RANK_WCKODT_L
   	SetJamram(XXXX,0x680170);  // TMRSF_FREF_12_TO_16_RATIO
   	////  SetJamram(XXXX,0x680190);  // TMRSF_RAAIMT_INIT4
   	SetJamram(XXXX,0x6801B0);  // TMRSF_RAAIMT_INIT2
   	////  SetJamram(XXXX,0x6801D0);  // TMRSF_ZQUF_RESET_DISABLE
   	SetJamram(XXXX,0x6801F0);  // TMRSF_CMD_BASE_PG
   	SetJamram(XXXX,0x680111);  // TMRSF_ADDCODEDN_PD<1>
   	SetJamram(XXXX,0x680131);  // TMRSF_REF_RED_DIS_C
   	SetJamram(XXXX,0x680151);  // TMRSF_REF_PAR_BANKDIST
   	SetJamram(XXXX,0x680171);  // TMRSF_ROS_KEY_USE
   	SetJamram(XXXX,0x680191);  // TMRSF_MID_PGOFF
   	SetJamram(XXXX,0x6801B1);  // TMRSF_VREFZQ_MON_EN_PD
   	SetJamram(XXXX,0x6801D1);  // TMRSF_FSP_ZQ_LATCH_BLOCK
   	SetJamram(XXXX,0x6801F1);  // TMRSF_ZQSTOP_LATCH_BLOCK_DIS
   	SetJamram(XXXX,0x6C0110);  // TMRSF_RD_C2C_PREAMP0_CUR_UP_0B
   	SetJamram(XXXX,0x6C0130);  // TMRSF_SIGX2_NEW
   	SetJamram(XXXX,0x6C0150);  // TMRSF_DEF_PD_CODE_CON<0>
   	SetJamram(XXXX,0x6C0170);  // TMRSF_PU_DUTY_DN_0B
   	SetJamram(XXXX,0x6C0190);  // TMRSF_DINA_1ST_WCK_270_DN_0B
   	SetJamram(XXXX,0x6C01B0);  // TMRSF_ZQVREFDN_UP0
   	SetJamram(XXXX,0x6C01D0);  // TMRSF_ADDCODEDN_CA<1>
   	SetJamram(XXXX,0x6C01F0);  // TMRSF_ZQVREFDN_UP3
   	SetJamram(XXXX,0x6C0111);  // TMRSF_SAFF_ANTI_1_0B
   	SetJamram(XXXX,0x6C0131);  // TMRSF_SAFF_ANTI_0_0B
   	SetJamram(XXXX,0x6C0151);  // TMRSF_FREF_RATIO_SEL3
   	SetJamram(XXXX,0x6C0171);  // TMRSF_ADDCODEUP_PU<1>
   	SetJamram(XXXX,0x6C0191);  // TMRSF_ADDCODEUP_PU<3>
// 	////  SetJamram(XXXX,0x6C01B1);  // TMRSF_LP5X
   	SetJamram(XXXX,0x6C01D1);  // TMRSF_IOH_DN2
   	SetJamram(XXXX,0x6C01F1);  // TMRSF_DFE_W0_0B
   	SetJamram(XXXX,0x601110);  // TMRSF_TOFFSET_HOC
   	SetJamram(XXXX,0x601130);  // TMRSF_S5_SRR
   	SetJamram(XXXX,0x601150);  // TMRSF_RT_CLAMP_DN
   	SetJamram(XXXX,0x601170);  // TMRSF_DTOS_2
   	SetJamram(XXXX,0x601190);  // TMRS_PTTESTSO
   	SetJamram(XXXX,0x6011B0);  // TMRSF_IO_AIVC_WR_ENB_2N_ON_0B
   	SetJamram(XXXX,0x6011D0);  // TMRSF_TOFFSET_X6_X4<2>
   	SetJamram(XXXX,0x6011F0);  // TMRSF_ERR_CNT_SET1
   	SetJamram(XXXX,0x601111);  // TMRSF_OFFSET_PDIFF4
   	SetJamram(XXXX,0x601131);  // TMRSF_DZ_MODE2
   	SetJamram(XXXX,0x601151);  // TMRSF_VBL_OFFSET_DIFF4
   	SetJamram(XXXX,0x601171);  // TMRSF_VBL_OFFSET_SHIFT1
   	SetJamram(XXXX,0x601191);  // TMRSF_VP_IUP1
   	SetJamram(XXXX,0x6011B1);  // TMRSF_VP_DN2
   	SetJamram(XXXX,0x6011D1);  // TMRSF_VP_OFFSET_NDIFF1
   	SetJamram(XXXX,0x6011F1);  // TMRSF_TOFFSET_X6_X4<0>
   	SetJamram(XXXX,0x641110);  // TMRSF_SA_OFFSETCAL_EN
   	SetJamram(XXXX,0x641150);  // TMRSF_RD_DCA_OFFSET_B0_R_PHASE270<0>
   	SetJamram(XXXX,0x641170);  // TMRSF_WR_TMMT_B0_R_270
   	SetJamram(XXXX,0x641190);  // TMRSF_PCLKWC4_LINK_MUX_OUT_EN_0B
   	SetJamram(XXXX,0x6411B0);  // TMRSF_PREAMP_BUF_CM_DN3_0B
   	SetJamram(XXXX,0x6411D0);  // TMRSF_DCM_BIAS1
   	SetJamram(XXXX,0x6411F0);  // TMRSF_RD_DCA_OFFSET_B0_L_PHASE90<0>
   	SetJamram(XXXX,0x641111);  // TMRSF_TOFFSET_X1P3_X1<0>
   	SetJamram(XXXX,0x641131);  // TMRSF_TOFFSET_X1P7_X1P3<1>
   	SetJamram(XXXX,0x641151);  // TMRSF_PVPP2AKDIS_L
   	SetJamram(XXXX,0x641171);  // TMRSF_VPP2_CLAMPDIS_1
   	SetJamram(XXXX,0x641191);  // TMRSF_WR_TMMT_B0_L_270
   	SetJamram(XXXX,0x6411B1);  // TMRSF_SIVCABSN_IDN_L
   	SetJamram(XXXX,0x6411D1);  // TMRSF_CMOSBUF_BIAS_DN_0B
   	SetJamram(XXXX,0x6411F1);  // TMRSF_VBB2_PUMP_OPT_ON1
   	SetJamram(XXXX,0x681110);  // TMRSF_VREFLP_UP3
   	SetJamram(XXXX,0x681130);  // TMRSF_VREFA_UP2
   	SetJamram(XXXX,0x681150);  // TMRSF_EVCDET_TRIM_UP1
   	SetJamram(XXXX,0x681170);  // TMRSF_TOFFSET_X2P5_X2<0>
   	SetJamram(XXXX,0x681190);  // TMRSF_TOFFSET_X0P5_X0P25<0>
   	SetJamram(XXXX,0x6811B0);  // TMRSF_TOFFSET_X0P25WD_X0P125<0>
   	SetJamram(XXXX,0x6811D0);  // TMRSF_TOFFSET_X2_X1P7<1>
   	SetJamram(XXXX,0x6811F0);  // TMRSF_DINA_1ST_WCK_90_UP_0B
   	SetJamram(XXXX,0x681111);  // TMRSF_VREFWCK_OFFSET0
   	SetJamram(XXXX,0x681131);  // TMRSF_WCK4_TO_DQ_DELAY_UP_0B
   	SetJamram(XXXX,0x681151);  // TMRSF_SIVC_IO_DD1_SINK_UP_0B
   	SetJamram(XXXX,0x681171);  // TMRSF_VREFWCK_CURRENT_SW3
   	SetJamram(XXXX,0x681191);  // TMRSF_IO_AIVC_DC_CUR_UP2_0B
   	SetJamram(XXXX,0x6811B1);  // TMRSF_WRX_0CLK_FF_0B
   	SetJamram(XXXX,0x6811D1);  // TMRSF_WR_WCK_CCL_OFF_L
   	SetJamram(XXXX,0x6811F1);  // TMRSF_IO_AIVC_DC_CUR_UP1_0B
   	SetJamram(XXXX,0x6C1110);  // TMRSF_PD_CONT_SIGN_DQ<0>
   	SetJamram(XXXX,0x6C1130);  // TMRSF_PD_CONT_SIGN_DMI0
   	SetJamram(XXXX,0x6C1150);  // TMRSF_PCLKWC2_P1
   	SetJamram(XXXX,0x6C1170);  // TMRSF_COLD25_SHIFT_0B<2>
   	SetJamram(XXXX,0x6C1190);  // TMRSF_COLD0_SHIFT_0B<0>
   	SetJamram(XXXX,0x6C11B0);  // TMRSF_DCC_MRS_DISABLE_0B
   	////  SetJamram(XXXX,0x6C11D0);  // TMRSF_WCK_BIAS_VREF_DN0_0B
   	SetJamram(XXXX,0x6C11F0);  // TMRSF_ORD_UP1_0B
   	////  SetJamram(XXXX,0x6C1111);  // TMRSF_WR_C2C_PREAMP_CUR_UP1_0B
   	SetJamram(XXXX,0x6C1131);  // TMRSF_PCLKWC_P1
   	SetJamram(XXXX,0x6C1151);  // TMRSF_DCC_1_0B
   	////  SetJamram(XXXX,0x6C1171);  // TMRSF_CURRENT_UP11_L
   	SetJamram(XXXX,0x6C1191);  // TMRSF_DCC_3_0B
   	SetJamram(XXXX,0x6C11B1);  // TMRSF_FRPD_DQ_X16_M2_0B
   	SetJamram(XXXX,0x6C11D1);  // TMRSF_PCLKWC_0B_PULSE_P2
   	////  SetJamram(XXXX,0x6C11F1);  // TMRSF_PCURRENT_BUF1_0B
   	SetJamram(XXXX,0x602111);  // TMRSF_RON_DIS
   	SetJamram(XXXX,0x602131);  // TMRSF_CA_1
   	SetJamram(XXXX,0x602151);  // TMRSF_MRR7_OP2
   	SetJamram(XXXX,0x602171);  // TMRSF_IRCSLE_UP
   	SetJamram(XXXX,0x602191);  // TMRSF_ROWOPEN_M2_DLR_G2D
   	SetJamram(XXXX,0x6021D1);  // TMRSF_ROWOPEN_M1_DLR_G1D
   	SetJamram(XXXX,0x6021F1);  // TMRSF_CLK_BUF_CURRENT_DN1
   	SetJamram(XXXX,0x642110);  // TMRSF_CS_TCMD3
   	SetJamram(XXXX,0x642130);  // TMRSF_RFM_TO_REF
   	SetJamram(XXXX,0x642150);  // TMRSF_CA_TERM_BUF_ON
   	SetJamram(XXXX,0x642170);  // TMRSF_ROWOPEN_M1_DLR_G0D
   	SetJamram(XXXX,0x642190);  // TMRSF_TIMERON
   	SetJamram(XXXX,0x6421B0);  // TMRSF_ROWOPEN_M2_DLR_G2C
   	SetJamram(XXXX,0x6421D0);  // TMRSF_CS_5
   	SetJamram(XXXX,0x6421F0);  // TMRSF_ROWOPEN_M1_DLR_G1C
   	SetJamram(XXXX,0x642111);  // TMRSF_WRRPT_SET_ON_P1
   	SetJamram(XXXX,0x642131);  // TMRSF_DSM_ENTER
   	SetJamram(XXXX,0x642151);  // TMRSF_NOR_CNT_HALF
   	SetJamram(XXXX,0x642171);  // TMRSF_T95_FLAG
   	SetJamram(XXXX,0x642191);  // TMRSF_ROWOPEN_P1_DLR_G0B
   	SetJamram(XXXX,0x6421B1);  // TMRSF_ROWOPEN_M1_DLR_G1A
   	SetJamram(XXXX,0x6421D1);  // TMRSF_CLK_TERM_BUF_ON
   	SetJamram(XXXX,0x6421F1);  // TMRSF_NOR_2X_REF
   	SetJamram(XXXX,0x682110);  // TMRSF_RL_CHG
   	SetJamram(XXXX,0x682130);  // TMRSF_DVFSC_OFF_INTERNAL
   	SetJamram(XXXX,0x682150);  // TMRSF_WCKSYNC_RD_FAST_EN
   	SetJamram(XXXX,0x682170);  // TMRSF_DUMMY_BIAS_VINTA
   	SetJamram(XXXX,0x682190);  // TMRSF_RED_CNT_HALF
   	SetJamram(XXXX,0x6821B0);  // TMRSF_RAAIMT_INIT1
   	SetJamram(XXXX,0x6821D0);  // TMRSF_SRE_CTRL_PREB
   	SetJamram(XXXX,0x6821F0);  // TMRSF_REF_SKIP_ON
   	SetJamram(XXXX,0x682111);  // TMRSF_DSM_DIS
   	SetJamram(XXXX,0x682131);  // TMRSF_SADRV_PG_CTRL
   	SetJamram(XXXX,0x682151);  // TMRSF_MABRSKEW_DOUBLE_UP1
   	SetJamram(XXXX,0x682171);  // TRMSF_VINT_FRP_P2
   	SetJamram(XXXX,0x682191);  // TMRSF_BUS_MUX_LAT_ON
   	SetJamram(XXXX,0x6821B1);  // TMRSF_RSP_LATCH_BYPASS
   	SetJamram(XXXX,0x6821D1);  // TMRSF_ADDB_SUB_DN_PD
   	SetJamram(XXXX,0x6821F1);  // TMRSF_PD_DUTY_DN_0B
   	SetJamram(XXXX,0x6C2110);  // TMRSF_PU_CODE_MIN_RESET
   	SetJamram(XXXX,0x6C2130);  // TMRSF_SELF_RATIO_FIX
   	SetJamram(XXXX,0x6C2150);  // TMRSF_DEF_PD_CODE_CON<3>
   	SetJamram(XXXX,0x6C2170);  // TMRSF_SAFF_OFFSET_VREF_0B
   	SetJamram(XXXX,0x6C2190);  // TMRSF_PREEMP_EN_0B
   	SetJamram(XXXX,0x6C21B0);  // TMRSF_DEF_PU_CODE_CON<2>
   	SetJamram(XXXX,0x6C21D0);  // TMRSF_ADDCODEDN_CA<2>
   	SetJamram(XXXX,0x6C21F0);  // TMRSF_ZQVREFDN_DN2
   	SetJamram(XXXX,0x6C2111);  // TMRSF_UNTERM_0B
   	SetJamram(XXXX,0x6C2131);  // TMRSF_BUS_PG_TO_MID
   	SetJamram(XXXX,0x6C2151);  // TMRSF_FREF_RATIO_SEL2
   	SetJamram(XXXX,0x6C2171);  // TMRSF_DRV_PWR_ON_ZQ_L
   	SetJamram(XXXX,0x6C2191);  // TMRSF_MR62_EN_C
   	SetJamram(XXXX,0x6C21B1);  // TMRSF_DFE_W2_1B
   	SetJamram(XXXX,0x6C21D1);  // TMRSF_ZQVREFDN_DN4
   	SetJamram(XXXX,0x6C21F1);  // TMRSF_VINTLP_ORG
   	SetJamram(XXXX,0x603110);  // TMRSF_TSHIFT_MRR_AOS
   	SetJamram(XXXX,0x603130);  // TMRSF_S4_SRR
   	SetJamram(XXXX,0x603150);  // TMRSF_PTENB_INC
   	SetJamram(XXXX,0x603170);  // TMRSF_MR62_EN
   	SetJamram(XXXX,0x603190);  // TMRS_PTTESTUDCS
   	SetJamram(XXXX,0x6031B0);  // TMRSF_TOFFSET_X6_X4<1>
   	SetJamram(XXXX,0x6031D0);  // TMRSF_VDD2L_DVFSC_SINK_2
   	SetJamram(XXXX,0x6031F0);  // TMRSF_OCOSC_SPEED_UP_L
   	SetJamram(XXXX,0x603111);  // TMRSF_OFFSET_NDIFF2
   	SetJamram(XXXX,0x603131);  // TMRSF_DS_MODE_DIS
   	SetJamram(XXXX,0x603151);  // TMRSF_VBL_OFFSET_SHIFT4
   	SetJamram(XXXX,0x603171);  // TMRSF_VBL_OFFSET_SHIFT2
   	SetJamram(XXXX,0x603191);  // TMRSF_VP_IUP2
   	SetJamram(XXXX,0x6031B1);  // TMRSF_VP_ORG
   	SetJamram(XXXX,0x6031D1);  // TMRSF_VP_OFFSET_NDIFF4
   	SetJamram(XXXX,0x6031F1);  // TMRSF_DSM_SRPD_VDD2L_DIS
   	SetJamram(XXXX,0x643110);  // TMRSF_SA_OFFSETCAL_TMRS_CONT
   	SetJamram(XXXX,0x643150);  // TMRSF_RD_DCA_OFFSET_B0_R_PHASE270<1>
   	SetJamram(XXXX,0x643170);  // TMRSF_WR_TMMT_B0_R_180
   	SetJamram(XXXX,0x643190);  // TMRSF_LOCK_CONT_ST
   	SetJamram(XXXX,0x6431B0);  // TMRSF_PREAMP_BUF_CM_DN2_0B
   	SetJamram(XXXX,0x6431D0);  // TMRSF_DCM_BIAS3
   	SetJamram(XXXX,0x6431F0);  // TMRSF_RD_DCA_OFFSET_B0_L_PHASE90<1>
   	SetJamram(XXXX,0x643111);  // TMRSF_MR4_SUB_X1_X0P7
   	SetJamram(XXXX,0x643131);  // TMRSF_SIVCBB2_IDN_L
   	SetJamram(XXXX,0x643151);  // TMRSF_PVPPAKDIS_1
   	SetJamram(XXXX,0x643171);  // TMRSF_O123_WIDTH_CTRL1_L
   	SetJamram(XXXX,0x643191);  // TMRSF_WR_TMMT_B0_L_180
   	SetJamram(XXXX,0x6431B1);  // TMRSF_SIVCABSN_IUP_L
   	SetJamram(XXXX,0x6431D1);  // TMRSF_VGNLA2_PCHG_SKIP_L
   	SetJamram(XXXX,0x6431F1);  // TMRSF_AIVCA_FB_STBY_ON_IN_L_PRE
   	SetJamram(XXXX,0x683110);  // TMRSF_VREFAH_IDD_DN
   	SetJamram(XXXX,0x683130);  // TMRSF_VREFA_DN1
   	SetJamram(XXXX,0x683150);  // TMRSF_EVCDET_TRIM_DN1
   	SetJamram(XXXX,0x683170);  // TMRSF_MR4_SUB_X2_X1P7
   	SetJamram(XXXX,0x683190);  // TMRSF_MR4_SUB_X0P25_X0P25WD
   	SetJamram(XXXX,0x6831B0);  // TMRSF_TOFFSET_X0P125_X0P125WD<2>
   	SetJamram(XXXX,0x6831D0);  // TMRSF_TOFFSET_X2_X1P7<0>
   	SetJamram(XXXX,0x6831F0);  // TMRSF_MR4_SUB_X1P7_X1P3
   	////  SetJamram(XXXX,0x683111);  // TMRSF_DEEMP_RL_ON_0B
   	SetJamram(XXXX,0x683131);  // TMRSF_PU_DUTY_DN_DQS_T_0B
   	SetJamram(XXXX,0x683151);  // TMRSF_IO_AIVC_DC_CUR_UP3_0B
   	SetJamram(XXXX,0x683171);  // TMRSF_VREFWCK_CURRENT_SW2
   	SetJamram(XXXX,0x683191);  // TMRSF_IO_AIVC_I_33PER_DOWN_0B
   	SetJamram(XXXX,0x6831B1);  // TMRSF_CMOSBUF_3733_ON_0B_L
   	SetJamram(XXXX,0x6831D1);  // TMRSF_RD_WCK_CCL_OFF_L
   	SetJamram(XXXX,0x6831F1);  // TMRSF_MRS_WCK_BUF_DIS_L
   	SetJamram(XXXX,0x6C3110);  // TMRSF_WCK_BIAS_CAL_DIS_B0
   	SetJamram(XXXX,0x6C3130);  // TMRSF_PD_CONT_C1_DQ<0>

}
#endif



#if 1
	{
		SetJamram(OOOO, 0x64F011)	// FUSE_DESC="SIG0     C    OK                   "; RCCMRD(1);  
		SetJamram(XXXX, 0x64D011)	// FUSE_DESC="SIG0          OK                   "; RCCMRD(1);  
		SetJamram(XXXX, 0x64B011)	// FUSE_DESC="SIG0          OK                   "; RCCMRD(1);  
		SetJamram(OOOO, 0x645011)	// FUSE_DESC="SIG0     C    OK                   "; RCCMRD(1);  
		SetJamram(OOOO, 0x647011)	// FUSE_DESC="SIG0     C    OK                   "; RCCMRD(1);  
		SetJamram(XXXX, 0x649011)	// FUSE_DESC="SIG0          OK                   "; RCCMRD(1);  
		SetJamram(XXXX, 0x643011)	// FUSE_DESC="SIG1                               "; RCCMRD(1);
		SetJamram(OOOO, 0x641011)	// FUSE_DESC="SIG1     C                         "; RCCMRD(1);
		SetJamram(OOOO, 0x64F031)	// FUSE_DESC="SIG1     C                         "; RCCMRD(1);
		SetJamram(XXXX, 0x64D031)	// FUSE_DESC="SIG1                               "; RCCMRD(1);
		SetJamram(XXXX, 0x64B031)	// FUSE_DESC="SIG1                               "; RCCMRD(1);

	}
#endif

	//output("<h1>JamramPtr/2=%d,  JamramPtr=%d</h1>", (int)(JamramPtr / 2), JamramPtr); 
	//JamramPtr/2=435,  JamramPtr=870

	count(9, 1);
	count(10, (int)(JamramPtr/2)-1);


	@}
%               JSR(POWERUP)						Ca(CYP8_DD_)	
%				JSR(SAFETYDDR_TOF)			  		Ca(CYP8_DD_)
%               JSR(D_LOCK)             			Ca(CYP8_DD_)

				//;  JSR DSPBTRANK       I  CYP8  
//%               JSR(D_DSPBTCS1)             		Ca(CYP8_DD_)	//20191118

//%               JSR(D_DSPBT1A)             		Ca(CYP8_DD_)	//20191118
//%			    JSR(D_PHASE1)                      Ca(CYP8_DD_)													SCROFF//;TMRS_PSDR(1021)
//%               JSR(D_DSPBT_CS1)             		Ca(CYP8_DD_)	//20191118

                IDXI8(0x17FE)  		 
%               JSR(D_AFDQX1)             			Ca(CYP8_DD_)
%               JSR(D_PGMVRFY)            			Ca(CYP8_DD_)
%               JSR(D_AFDQPAD)            			Ca(CYP8_DD_)
%               JSR(D_ANTIRUP)            			Ca(CYP8_DD_)
%               STI(8, 0x17FE)             			Ca(CYP8_DD_)
%               IDXI(8, BranchSelf)  				Ca(CYP8_DD_)
%				JSR(D_PSDR)							Ca(CYP8_DD_)	SetJamramPtr0
%               JSR(RCCMRT)               			Ca(CYP8_DD_)	SetJamramToDmain
%               STPS								Ca(CYP8_DD_)

//; ------------------------------------------------------------------------
//; **********				A / B / C / D BANK                   **********
//; ------------------------------------------------------------------------
#if 1
%RCCMRT:			                        XYCLD  Ca(CYP8_DD_)			INIT
%			STI(8, 0x1FE)					XYCLD  Ca(CYP8_DD_)
%			IDXI(8, BranchSelf)				XYCLD  Ca(CYP8_DD_)
%											XYCLD  Ca(CYP8_DD_)			/*SetAux(XC_, D1_)*/					 //TPAauxD(_TP,_TPH,HoldDr)//TP<TPH   SetTP?
%											XYCLD  Ca(CYP8_DD_)			/*SetAux(YC_, D2_)*/                 	  						//TP2<TPH2
%											XYCLD  Ca(CYP8_DD_)                                                
%										    XYCLD  Ca(AACT_DD_)													//SCROFF//;  5 x0
%		    STI(8, 0xA)						XYCLD  Ca(CYP8_DD_)													/*TPAauxD(_TP, 42, HoldDr)*/
%			IDXI(8, BranchSelf)				XYCLD  Ca(CYP8_DD_)				
%					                        XYCLD  Ca(CYP8_DD_)		 
%					                        XYCLD  Cax(CYP8_DD_) //bspark ????

%X8_Label:		NOP_                        XYCLD  Ca_WR(AWR1_DD_)			/*TPAauxD(_TP, 19, HoldDr)*/	X8_		SCROFF//;  1 x8	CYP1	<X8,X9>,<X10,X11>,<X4,X5>,<X6,X7>,<X0,X1>,<X2,X3> 		
%				NOP_                        XYCLD  Ca_WR(CYP2_DD_)			/*TPAauxD(_TP, 21, HoldDr)*/	X10_	SCROFF//;  2 x10		19,20   21,22	   15,16   17,18   11,12   13,14
%		        NOP_                        XYCLD  Ca_WR(AWR3_DD_)			/*TPAauxD(_TP, 15, HoldDr)*/	X4_		SCROFF//;  3 x4	
%				NOP_                        XYCLD  Ca_WR(CYP4_DD_)			/*TPAauxD(_TP, 17, HoldDr)*/	X6_		SCROFF//;  4 x6	
%		        NOP_                        XYCLD  Ca_WR(AWR5_DD_)			/*TPAauxD(_TP, 11, HoldDr)*/	X0_		SCROFF//;  5 x0	
%				NOP_                        XYCLD  Ca_WR(CYP6_DD_)			/*TPAauxD(_TP, 13, HoldDr)*/	X2_		SCROFF//;  6 x2			
%Y8_Label:		NOP_						XYCLD  Ca_WR(AWR11_DD_)			/*TPAauxD(_TP, 31, HoldDr)*/	Y8_		SCROFF//;  7 y8	CYP11	<Y8,Y9>,<Y10,Y11>,<Y4,Y5>,<Y6,Y7>,<Y0,Y1>,<Y2,Y3>	
%		        NOP_                        XYCLD  Ca_WR(CYP12_DD_)			/*TPAauxD(_TP, 33, HoldDr)*/	Y10_	SCROFF//;  8 y10		31,32   33,34     27,28   29,30    23,24  25,26
%				NOP_                        XYCLD  Ca_WR(AWR13_DD_)			/*TPAauxD(_TP, 27, HoldDr)*/	Y4_		SCROFF//;  9 y4	
%		        NOP_                        XYCLD  Ca_WR(CYP14_DD_)			/*TPAauxD(_TP, 29, HoldDr)*/	Y6_		SCROFF//;  10 y6	
%		        NOP_                        XYCLD  Ca_WR(AWR15_DD_)			/*TPAauxD(_TP, 23, HoldDr)*/	Y0_		SCROFF//;  11 y0	
%		        NOP_                        XYCLD  Ca_WR(CYP16_DD_)			/*TPAauxD(_TP, 25, HoldDr)*/	Y2_		SCROFF//;  12 y2	
%		                                    XYCLD  Ca_WR(CYP8_DD_)			/*TPAauxD(_TP, 41, HoldDr)	*/ 
%						                    XYCLD  Ca(CYP8_DD_)	
%			IDXI(8, BranchSelf)				XYCLD  Ca(CYP8_DD_)				
%		                                    XYCLD  Ca(CYP8_DD_)             /*PEauxD(main, D5_, HoldDr)*/  	//SetTP(main,0x00)		//TPEauxD(_TP,D5_,HoldDr)//TP<D5
%		                                    XYCLD  Ca(CYP8_DD_)             /*POauxD(main, D6_, HoldDr)*/
%		                                    XYCLD  Ca(ARD_DD_)			 								//TPAauxD(_TP, D5_, HoldDr)	SCROFF//;  5 x0

%CPE_Label:		                            XYCLD  Ca_CPE(CYP8_DD_)			CPE							//DQ1 read	    
%						                    XYCLD  Ca(ARD_DD_)  										//TPAauxD(_TP, D5_, HoldDr)	SCROFF//;  5 x0
%		                                    XYCLD  Ca(CYP8_DD_)				 
%		    STI(8, 0x6)						XYCLD  Ca(CYP8_DD_)				 	
%			IDXI(8, BranchSelf)				XYCLD  Ca(CYP8_DD_)				 			  		
%		        NOP_                        XYCLD  Ca(APRE_DD_)							
%			IDXI(8, BranchSelf)				XYCLD  Ca(CYP8_DD_)				
%	JNI(9,RCCMRT)							XYCLD  Ca(CYP8_DD_)				ShiftRightDmain_
%		        NOP_                        XYCLD  Ca(APRE_DD_)				IncJamramPtr
%	JNI(10,RCCMRT)							XYCLD  Ca(CYP8_DD_)				SetJamramToDmain
%               RTN                         XYCLD  Ca(CYP8_DD_)
#endif
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

#if 1
//confirmed.
%POWERUP:       NOP                         XYCLD  Ca(RESET_DD_) xSetZero(XT_)  ySetZero(YT_)						SCROFF//;
%               NOP                         XYCLD  Ca(RESET_DD_) INIT												SCROFF//;
%               STI(8, 0x100)               XT YT  Ca(RESET_DD_)													SCROFF//;POWER RAMP
%				IDXI(8, BranchSelf)			XT YT  Ca(RESET_DD_)													SCROFF//;	
%               STI(8, 0x9C40)              XT YT  Ca(RESET_DD_)													SCROFF//;tINIT0=1ms / 20ms(max)     
%				IDXI(8, BranchSelf)			XT YT  Ca(RESET_DD_)													SCROFF//;
%               STI(8, 0x1F40)              XT YT  Ca(RESET_DD_)													SCROFF//;tINIT1=200us(min)
%				IDXI(8, BranchSelf)			XT YT  Ca(RESET_DD_)													SCROFF//;
%				STI(8, 0x13880)             XT YT  Ca(CYP8_DD_)														SCROFF//;tINIT3=2ms(min),tINIT4=5tCK(min)
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)														SCROFF//;
%               NOP                         XT YT  Ca(CYP8_DD_)														SCROFF//;Exit PD
%               NOP                         XT YT  Ca(CYP8_DD_)														SCROFF//;Exit PD
%               STI(8, 0x50)                XT YT  Ca(CYP8_DD_)        xSetUDAll(XT_, 0x00) ySetUDAll(YT_,0x20)		SCROFF//;tINIT5=2us(min)
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)														SCROFF//;
%               NOP                         XT YT  Ca(MRW1A_DD_)													SCROFF//;MRW32 (any MRW/MRR)
%               NOP                         XT YT  Ca(MRW2A_DD_)													SCROFF//;
%				STI(8, 0xE)			        XT YT  Ca(CYP8_DD_)        xSetUDAll(XT_, 0x85)							SCROFF//;
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)														SCROFF//;
%               NOP                         XT YT  Ca(MPCA_DD_)														SCROFF//;MPC ZQCAL START
%				STI(8, 0x28)			    XT YT  Ca(CYP8_DD_)        xSetUDAll(XT_, 0x86)							SCROFF//;tZQCAL=1us(min)
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)														SCROFF//;
%               NOP                         XT YT  Ca(MPCA_DD_)														SCROFF//;MPC ZQCAL LATCH
%               STI(8, 0x1E)                XT YT  Ca(CYP8_DD_)														SCROFF//;tZQLAT=max(30ns,8tCK)
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)														SCROFF//;
%               NOP                         XT YT  Ca(PDNT_DD_)														SCROFF//;tZQLAT=max(30ns,8tCK)
%               STI(8, 0x1E)                XT YT  Ca(CYP8_DD_)														SCROFF//;tZQLAT=max(30ns,8tCK)
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)														SCROFF//;
%               RTN                         XT YT  Ca(CYP8_DD_)														SCROFF//;

//confirmed.
%SAFETYDDR_TOF:	STI(8, 0x4)					XT YT  Ca(CYP8_DD_)       xSetUDAll(XT_, 0x00)							SCROFF//;
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)       ySetUDAll(YT_, 0x20)							SCROFF//;
%				NOP                         XT YT  Ca(MRW1_DD_)														SCROFF//;MRW32 (any MRW/MRR)
%               NOP                         XT YT  Ca(MRW2_DD_)														SCROFF//;
%               STI(8, 0x4)                 XT YT  Ca(CYP8_DD_)														SCROFF//;
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)														SCROFF//;
%               JSR(SAFETY_TOF)             XT YT  Ca(CYP8_DD_)														SCROFF//;
//;%            JSR D_PSDR                  XT YT  Ca(CYP8_DD_)														SCROFF//;
%               RTN                         XT YT  Ca(CYP8_DD_)														SCROFF//;

//confirmed.
%SAFETY_TOF:	STI(8, 0xE)					XT YT  Ca(CYP8_DD_)		xSetUDAll(XT_, 0x20)							SCROFF//;
%               IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)		ySetUDAll(YT_, 0x9)								SCROFF//;
%               NOP                         XT YT  Ca(MRW1_DD_)														SCROFF//;      
%               NOP                         XT YT  Ca(MRW2_DD_)														SCROFF//;
%               STI(8, 0xE)                 XT YT  Ca(CYP8_DD_)														SCROFF//;
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)														SCROFF//;
%               NOP                         XT YT  Ca(MRW1_DD_)														SCROFF//;      
%               NOP                         XT YT  Ca(MRW2_DD_)														SCROFF//;
%               STI(8, 0xE)                 XT YT  Ca(CYP8_DD_)														SCROFF//;
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)														SCROFF//;
%               NOP                         XT YT  Ca(MRW1_DD_)														SCROFF//;      
%               NOP                         XT YT  Ca(MRW2_DD_)														SCROFF//;
%			    STI(8, 0xE)                 XT YT  Ca(CYP8_DD_)   xSetUDAll(XT_, 0x7f)								SCROFF//; //20190926 ( was 0xff -> 0x7f )
%               IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)   ySetUDAll(YT_, 0x09)								SCROFF//;
%               NOP                         XT YT  Ca(MRW1_DD_)														SCROFF//;      
%               NOP                         XT YT  Ca(MRW2_DD_)														SCROFF//;
%               STI(8, 0xE)                 XT YT  Ca(CYP8_DD_)														SCROFF//;
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)														SCROFF//;
%               RTN                         XT YT  Ca(CYP8_DD_)														SCROFF//;


%D_LOCK:		 JSR(D_PHASE1)						Ca(CYP8_DD_)													SCROFF //;TMRD_AF_DQ_X1 2175       
%                JSR(DDRTMRS3)						Ca(CYP8_DD_)													SCROFF //; 
%                JSR(DDRTMRS9)						Ca(CYP8_DD_)													SCROFF //;     
%                JSR(DDRTMRS0)						Ca(CYP8_DD_)													SCROFF //;
%                JSR(DDRLATCH)						Ca(CYP8_DD_)													SCROFF //;
%                RTN								Ca(CYP8_DD_)													SCROFF //;


//confirmed
%D_AFDQX1:		 JSR(D_PHASE2)						Ca(CYP8_DD_)													SCROFF //;TMRD_AF_DQ_X1 2175       
%                JSR(DDRTMRS1)						Ca(CYP8_DD_)													SCROFF //; 
%                JSR(DDRTMRS7)						Ca(CYP8_DD_)													SCROFF //;     
%                JSR(DDRTMRS5)						Ca(CYP8_DD_)													SCROFF //;
%                JSR(DDRLATCH)						Ca(CYP8_DD_)													SCROFF //;
%                RTN								Ca(CYP8_DD_)													SCROFF //;

//confirmed
%D_PGMVRFY:      JSR(D_PHASE1)                      Ca(CYP8_DD_)													SCROFF //;TMRD_PGM_VRFY 1A25       
%                JSR(DDRTMRSA)						Ca(CYP8_DD_)													SCROFF //; 
%                JSR(DDRTMRS2)						Ca(CYP8_DD_)													SCROFF //;     
%                JSR(DDRTMRS5)						Ca(CYP8_DD_)													SCROFF //;
%                JSR(DDRLATCH)						Ca(CYP8_DD_)													SCROFF //;
%                RTN								Ca(CYP8_DD_)													SCROFF //;

//confirmed
%D_AFDQPAD:      JSR(D_PHASE1)                      Ca(CYP8_DD_)                                                    SCROFF //;TMRD_AF_DQPAD 1010       
%                JSR(DDRTMRS0)						Ca(CYP8_DD_)                                                    SCROFF //; 
%                JSR(DDRTMRS1)						Ca(CYP8_DD_)                                                    SCROFF //;     
%                JSR(DDRTMRS0)						Ca(CYP8_DD_)                                                    SCROFF //;
%                JSR(DDRLATCH)						Ca(CYP8_DD_)                                                    SCROFF //;
%                RTN								Ca(CYP8_DD_)													SCROFF //;

//confirmed
%D_ANTIRUP:      JSR(D_PHASE1)                      Ca(CYP8_DD_)                                                    SCROFF //;TMRD_ANTI_RUP 1034       
%                JSR(DDRTMRS0)						Ca(CYP8_DD_)                                                    SCROFF //; 
%                JSR(DDRTMRS3)						Ca(CYP8_DD_)                                                    SCROFF //;     
%                JSR(DDRTMRS4)						Ca(CYP8_DD_)                                                    SCROFF //;
%                JSR(DDRLATCH)						Ca(CYP8_DD_)                                                    SCROFF //;
%                RTN								Ca(CYP8_DD_)                                                    SCROFF //;

//confirmed
%D_PSDR:         JSR(D_PHASE1)                      Ca(CYP8_DD_)													SCROFF//;TMRS_PSDR(1021)
%                JSR(DDRTMRS0)						Ca(CYP8_DD_)													SCROFF//;      
%                JSR(DDRTMRS2)						Ca(CYP8_DD_)													SCROFF//;      
%                JSR(DDRTMRS1)						Ca(CYP8_DD_)													SCROFF//;
%                JSR(DDRTMRS)						Ca(CYP8_DD_)													SCROFF//;TMRS LATCH (LAST DDR CMD)
%                STI(8, 0xE)						Ca(CYP8_DD_)													SCROFF//;
%				 IDXI(8, BranchSelf)				Ca(CYP8_DD_)													SCROFF//;
%                JSR(SDRTMRS)						Ca(CYP8_DD_)													SCROFF//;TNRS LATCH_EXIT (FIRST SDR CMD)
%                RTN								Ca(CYP8_DD_)													SCROFF//;

//confirmed
%D_PHASE1:       JSR(DDRTMRS0)                      Ca(CYP8_DD_)													SCROFF//; PHASE1 (000)
%                JSR(DDRTMRS0)						Ca(CYP8_DD_)													SCROFF//;      
%                JSR(DDRTMRS0)						Ca(CYP8_DD_)													SCROFF//;
%                JSR(DDRLATCH)						Ca(CYP8_DD_)													SCROFF//;
%                RTN								Ca(CYP8_DD_)													SCROFF//;

//confirmed
%D_PHASE2:       JSR(DDRTMRS1)						Ca(CYP8_DD_)													SCROFF//; PHASE2 (120)
%                JSR(DDRTMRS2)						Ca(CYP8_DD_)													SCROFF//;      
%                JSR(DDRTMRS0)						Ca(CYP8_DD_)													SCROFF//;
%                JSR(DDRLATCH)						Ca(CYP8_DD_)													SCROFF//;
%                RTN								Ca(CYP8_DD_)													SCROFF//; 

%D_PHASE3:       JSR(DDRTMRS3)						Ca(CYP8_DD_)													SCROFF//; PHASE3 (314)
%                JSR(DDRTMRS1)						Ca(CYP8_DD_)													SCROFF//;      
%                JSR(DDRTMRS4)						Ca(CYP8_DD_)													SCROFF//;
%                JSR(DDRLATCH)						Ca(CYP8_DD_)													SCROFF//;
%                RTN								Ca(CYP8_DD_)													SCROFF//; 

%D_DSPBT1A:      JSR(D_PHASE1)                      Ca(CYP8_DD_)													SCROFF//;TMRS_PSDR(1021)
%                JSR(DDRTMRS1)						Ca(CYP8_DD_)													SCROFF//; PHASE2 (120)
%                JSR(DDRTMRS2)						Ca(CYP8_DD_)													SCROFF//;      
%                JSR(DDRTMRS7)						Ca(CYP8_DD_)													SCROFF//;
%                JSR(DDRLATCH)						Ca(CYP8_DD_)													SCROFF//;
%                RTN								Ca(CYP8_DD_)													SCROFF//; 

#endif


//;  -----------------------------------------------------------------------
//;  -----------------------------------------------------------------------
%SDRTMRS:       STI(8, 0xE)                 XT YT  Ca(CYP8_DD_)   xSetUDAll(XT_, 0x00)								SCROFF//; TMRS LATCH
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)   ySetUDAll(YT_, 0x09)								SCROFF//;
%											XT YT  Ca(MRW_DD_)														SCROFF//;       
%               STI(8, 0xE)  /*2*/          XT YT  Ca(CYP8_DD_)														SCROFF//; 
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)														SCROFF//;
%               RTN                         XT YT  Ca(CYP8_DD_)														SCROFF//; 

%DDRTMRS:       STI(8, 0x0)                  XT YT  Ca(CYP8_DD_)   xSetUDAll(XT_, 0x00)								SCROFF//;TMRS LATCH
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)   ySetUDAll(YT_, 0x09)								SCROFF//;
%                                           XT YT  Ca(MRW1_DD_)														SCROFF//;      
%                                           XT YT  Ca(MRW2_DD_)														SCROFF//;
%               STI(8, 0x2)                 XT YT  Ca(CYP8_DD_)														SCROFF//;
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)														SCROFF//;
%               RTN                         XT YT  Ca(CYP8_DD_)														SCROFF//;

%DDRLATCH:                                  XT YT  Ca(CYP8_DD_)   xSetUDAll(XT_, 0x00)								SCROFF//;
%											XT YT  Ca(CYP8_DD_)   ySetUDAll(YT_, 0x09)								SCROFF//;
%                                           XT YT  Ca(MRW1_DD_)														SCROFF//;TMRS LATCH     
%                                           XT YT  Ca(MRW2_DD_)														SCROFF//;
%               STI(8, 0x1)  /*4*/          XT YT  Ca(CYP8_DD_)														SCROFF//;
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)														SCROFF//;
%                                           XT YT  Ca(MRW1_DD_)														SCROFF//;TMRS LATCH EXIT     
%                                           XT YT  Ca(MRW2_DD_)														SCROFF//;
%               STI(8, 0x2)                 XT YT  Ca(CYP8_DD_)														SCROFF//;
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)														SCROFF//;
%               RTN                         XT YT  Ca(CYP8_DD_)														SCROFF//;

%DDRTMRS0:      STI(8, 0x0)                 XT YT  Ca(CYP8_DD_)   xSetUDAll(XT_, 0x00)								SCROFF//; TMRS 0  MR9  OP0 H , 20190926 (changed 1 to 0 for XT)
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)   ySetUDAll(YT_, 0x09)								SCROFF//;
%                                           XT YT  Ca(MRW1_DD_)														SCROFF//;       
%                                           XT YT  Ca(MRW2_DD_)														SCROFF//; 
%               STI(8, 0x2)                 XT YT  Ca(CYP8_DD_)														SCROFF//; 
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)														SCROFF//;
%               RTN                         XT YT  Ca(CYP8_DD_)														SCROFF//; 
%DDRTMRS1:      STI(8, 0x0)                 XT YT  Ca(CYP8_DD_)   xSetUDAll(XT_, 0x01)								SCROFF//; TMRS 1  MR9  OP1 H , 20190926 (changed 2 to 1 for XT)
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)   ySetUDAll(YT_, 0x09)								SCROFF//;
%                                           XT YT  Ca(MRW1_DD_)														SCROFF//;       
%                                           XT YT  Ca(MRW2_DD_)														SCROFF//; 
%               STI(8, 0x2)                 XT YT  Ca(CYP8_DD_)														SCROFF//; 
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)														SCROFF//;
%               RTN                         XT YT  Ca(CYP8_DD_)														SCROFF//; 
%DDRTMRS2:      STI(8, 0x0)                 XT YT  Ca(CYP8_DD_)   xSetUDAll(XT_, 0x02)								SCROFF//; TMRS 2  MR9  OP2 H , 20190926 (changed 4 to 2 for XT)
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)   ySetUDAll(YT_, 0x09)								SCROFF//;
%                                           XT YT  Ca(MRW1_DD_)														SCROFF//;       
%                                           XT YT  Ca(MRW2_DD_)														SCROFF//; 
%               STI(8, 0x2)                 XT YT  Ca(CYP8_DD_)														SCROFF//;
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)														SCROFF//;
%               RTN                         XT YT  Ca(CYP8_DD_)														SCROFF//; 
%DDRTMRS3:      STI(8, 0x0)					XT YT  Ca(CYP8_DD_)   xSetUDAll(XT_, 0x03)								SCROFF//; TMRS 3  MR9  OP3 H, 20190926 (changed 8 to 3 for XT)------------
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)   ySetUDAll(YT_, 0x09)								SCROFF//;
%                                           XT YT  Ca(MRW1_DD_)														SCROFF//;       
%                                           XT YT  Ca(MRW2_DD_)														SCROFF//; 
%               STI(8, 0x2)                 XT YT  Ca(CYP8_DD_)														SCROFF//;
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)														SCROFF//;
%               RTN                         XT YT  Ca(CYP8_DD_)														SCROFF//; 
%DDRTMRS4:      STI(8, 0x0)                 XT YT  Ca(CYP8_DD_)   xSetUDAll(XT_, 0x04)								SCROFF//; TMRS 4  MR9  OP4 H, 20190926 (changed 10 to 4 for XT)
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)   ySetUDAll(YT_, 0x09)								SCROFF//;
%                                           XT YT  Ca(MRW1_DD_)														SCROFF//;       
%                                           XT YT  Ca(MRW2_DD_)														SCROFF//; 
%               STI(8, 0x2)                 XT YT  Ca(CYP8_DD_)														SCROFF//;
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)														SCROFF//;
%               RTN                         XT YT  Ca(CYP8_DD_)														SCROFF//; 
%DDRTMRS5:      STI(8, 0x0)                 XT YT  Ca(CYP8_DD_)   xSetUDAll(XT_, 0x05)								SCROFF//; TMRS 5  MR9  OP5 H, 20190926 (changed 20 to 5 for XT)
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)   ySetUDAll(YT_, 0x09)								SCROFF//;
%                                           XT YT  Ca(MRW1_DD_)														SCROFF//;       
%                                           XT YT  Ca(MRW2_DD_)														SCROFF//; 
%               STI(8, 0x2)                 XT YT  Ca(CYP8_DD_)														SCROFF//;
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)														SCROFF//;
%               RTN                         XT YT  Ca(CYP8_DD_)														SCROFF//; 
%DDRTMRS6:      STI(8, 0x0)                 XT YT  Ca(CYP8_DD_)   xSetUDAll(XT_, 0x06)								SCROFF//; TMRS 6  MR9  OP6 H, 20190926 (changed 40 to 6 for XT)
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)   ySetUDAll(YT_, 0x09)								SCROFF//;
%                                           XT YT  Ca(MRW1_DD_)														SCROFF//;       
%                                           XT YT  Ca(MRW2_DD_)														SCROFF//; 
%               STI(8, 0x2)                 XT YT  Ca(CYP8_DD_)														SCROFF//;
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)														SCROFF//;
%               RTN                         XT YT  Ca(CYP8_DD_)														SCROFF//; 
%DDRTMRS7:      STI(8, 0x0)					XT YT  Ca(CYP8_DD_)   xSetUDAll(XT_, 0x07)								SCROFF//; TMRS 7  MR9  OP7 H, 20190926 (changed 80 to 7 for XT)
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)   ySetUDAll(YT_, 0x09)								SCROFF//;
%                                           XT YT  Ca(MRW1_DD_)														SCROFF//;       
%                                           XT YT  Ca(MRW2_DD_)														SCROFF//; 
%               STI(8, 0x2)                 XT YT  Ca(CYP8_DD_)														SCROFF//;
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)														SCROFF//;
%               RTN                         XT YT  Ca(CYP8_DD_)														SCROFF//; 
%DDRTMRS8:      STI(8, 0x0)                 XT YT  Ca(CYP8_DD_)   xSetUDAll(XT_, 0x08)								SCROFF//; TMRS 8  MR73, 20190926 (changed 0 to 8 for XT)
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)   ySetUDAll(YT_, 0x09)								SCROFF//;
%                                           XT YT  Ca(MRW1_DD_)														SCROFF//;       
%                                           XT YT  Ca(MRW2_DD_)														SCROFF//; 
%               STI(8, 0x2)                 XT YT  Ca(CYP8_DD_)														SCROFF//;
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)														SCROFF//;
%               RTN                         XT YT  Ca(CYP8_DD_)														SCROFF//; 
%DDRTMRS9:      STI(8, 0x0)                 XT YT  Ca(CYP8_DD_)   xSetUDAll(XT_, 0x09)								SCROFF//; TMRS 9  MR57, 20190926 (changed 0 to 9 for XT)
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)   ySetUDAll(YT_, 0x09)								SCROFF//;
%                                           XT YT  Ca(MRW1_DD_)														SCROFF//;       
%                                           XT YT  Ca(MRW2_DD_)														SCROFF//; 
%               STI(8, 0x2)                 XT YT  Ca(CYP8_DD_)														SCROFF//;
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)														SCROFF//;
%               RTN                         XT YT  Ca(CYP8_DD_)														SCROFF//; 
%DDRTMRSA:      STI(8, 0x0)                 XT YT  Ca(CYP8_DD_)   xSetUDAll(XT_, 0x0a)								SCROFF//; TMRS 10 MR59, 20190926 (changed 0 to a for XT)
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)   ySetUDAll(YT_, 0x09)								SCROFF//;
%                                           XT YT  Ca(MRW1_DD_)														SCROFF//;       
%                                           XT YT  Ca(MRW2_DD_)														SCROFF//; 
%               STI(8, 0x2)                 XT YT  Ca(CYP8_DD_)														SCROFF//;
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)														SCROFF//;
%               RTN                         XT YT  Ca(CYP8_DD_)														SCROFF//; 
//;  ------------------------------------------------------------------------





//added 20191118
%D_DSPBTCS1:    JSR(D_PHASE1)       XT YT  Ca(CYP8_DD_)								SCROFF	//; TMRS_DSPBT(1127)
%									XT YT  Ca(CYP8_DD_)		xSetUDAll(XT_, 0x01)
%				JSR(D_MRW_R1)       XT YT  Ca(CYP8_DD_)		ySetUDAll(YT_, 0x09)	SCROFF	//XT<#0002 YT<#0009 / T12   ; TMRS 1
%									XT YT  Ca(CYP8_DD_)		xSetUDAll(XT_, 0x02)
%				JSR(D_MRW_R1)       XT YT  Ca(CYP8_DD_)		ySetUDAll(YT_, 0x09)	SCROFF	//XT<#0004 YT<#0009 / T12   ; TMRS 2
%									XT YT  Ca(CYP8_DD_)		xSetUDAll(XT_, 0x07)
%				JSR(D_MRW_R1)       XT YT  Ca(CYP8_DD_)		ySetUDAll(YT_, 0x09)	SCROFF	//XT<#0080 YT<#0009 / T12   ; TMRS 7
%									XT YT  Ca(CYP8_DD_)		xSetUDAll(XT_, 0x00)
%				JSR(D_MRW_R1)       XT YT  Ca(CYP8_DD_)		ySetUDAll(YT_, 0x09)	SCROFF	//XT<#0000 YT<#0009 / T12   ; TMRS LATCH
%									XT YT  Ca(CYP8_DD_)		xSetUDAll(XT_, 0x00)
%				JSR(D_MRW_R1)       XT YT  Ca(CYP8_DD_)		ySetUDAll(YT_, 0x09)	SCROFF	//XT<#0000 YT<#0009 / T12   ; TMRS LATCH_EXIT
%               STI(8, 0x6)         XT YT  Ca(CYP8_DD_)								SCROFF	//;
%				IDXI(8, BranchSelf)	XT YT  Ca(CYP8_DD_)								SCROFF	//;
%RTN								XT YT  Ca(CYP8_DD_)								SCROFF
%D_MRW_R1:      STI(8, 0x2)                 XT YT  Ca(CYP8_DD_)														SCROFF//;  
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)														SCROFF//;
//%                                           XT YT  Ca(MRW1_DD_)														SCROFF//;DDR MRW Y(MA) X(OP)       
//%                                           XT YT  Ca(MRW2_DD_)														SCROFF//; 
%                                           XT YT  Ca(MRW1R1_DD_)														SCROFF//;DDR MRW Y(MA) X(OP)       
%                                           XT YT  Ca(MRW2R1_DD_)														SCROFF//; 
%               STI(8, 0x2)                 XT YT  Ca(CYP8_DD_)														SCROFF//;
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)														SCROFF//;
%               RTN                         XT YT  Ca(CYP8_DD_)														SCROFF//; 

																														  
%D_DSPBT1_CS1:  STI(8, 0x0)                 XT YT  Ca(CYP8_DD_)   xSetUDAll(XT_, 0x01)								SCROFF//; TMRS 1  MR9  OP1 H , 20190926 (changed 2 to 1 for XT)
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)   ySetUDAll(YT_, 0x09)								SCROFF//;
%                                           XT YT  Ca(MRW1R1_DD_)														SCROFF//;       
%                                           XT YT  Ca(MRW2R1_DD_)														SCROFF//; 
%				STI(8, 0x5)                 XT YT  Ca(CYP8_DD_)   xSetUDAll(XT_, 0x02)								SCROFF//; TMRS 2  MR9  OP2 H , 20190926 (changed 4 to 2 for XT)
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)   ySetUDAll(YT_, 0x09)								SCROFF//;
%                                           XT YT  Ca(MRW1R1_DD_)														SCROFF//;       
%                                           XT YT  Ca(MRW2R1_DD_)														SCROFF//; 
%				STI(8, 0x5)                 XT YT  Ca(CYP8_DD_)   xSetUDAll(XT_, 0x04)								SCROFF//; TMRS 2  MR9  OP2 H , 20190926 (changed 4 to 2 for XT)
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)   ySetUDAll(YT_, 0x09)								SCROFF//;
%                                           XT YT  Ca(MRW1R1_DD_)														SCROFF//;       
%                                           XT YT  Ca(MRW2R1_DD_)														SCROFF//; 
%				STI(8, 0x5)                 XT YT  Ca(CYP8_DD_)   xSetUDAll(XT_, 0x00)								SCROFF//; TMRS 2  MR9  OP2 H , 20190926 (changed 4 to 2 for XT)
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)   ySetUDAll(YT_, 0x09)								SCROFF//;
%                                           XT YT  Ca(MRW1R1_DD_)														SCROFF//;       
%                                           XT YT  Ca(MRW2R1_DD_)														SCROFF//; 
%				STI(8, 0x5)                 XT YT  Ca(CYP8_DD_)   xSetUDAll(XT_, 0x00)								SCROFF//; TMRS 2  MR9  OP2 H , 20190926 (changed 4 to 2 for XT)
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)   ySetUDAll(YT_, 0x09)								SCROFF//;
%                                           XT YT  Ca(MRW1R1_DD_)														SCROFF//;       
%                                           XT YT  Ca(MRW2R1_DD_)														SCROFF//; 
%               RTN                         XT YT  Ca(CYP8_DD_)														SCROFF//; 

%D_DSPBT_CS1:  STI(8, 0x0)                 XT YT  Ca(CYP8_DD_)   xSetUDAll(XT_, 0x01)								SCROFF//; TMRS 1  MR9  OP1 H , 20190926 (changed 2 to 1 for XT)
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)   ySetUDAll(YT_, 0x09)								SCROFF//;
%                                           XT YT  Ca(MRW1R1_DD_)														SCROFF//;       
%                                           XT YT  Ca(MRW2R1_DD_)														SCROFF//; 
%				STI(8, 0x5)                 XT YT  Ca(CYP8_DD_)   xSetUDAll(XT_, 0x02)								SCROFF//; TMRS 2  MR9  OP2 H , 20190926 (changed 4 to 2 for XT)
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)   ySetUDAll(YT_, 0x09)								SCROFF//;
%                                           XT YT  Ca(MRW1R1_DD_)														SCROFF//;       
%                                           XT YT  Ca(MRW2R1_DD_)														SCROFF//; 
%				STI(8, 0x5)                 XT YT  Ca(CYP8_DD_)   xSetUDAll(XT_, 0x04)								SCROFF//; TMRS 2  MR9  OP2 H , 20190926 (changed 4 to 2 for XT)
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)   ySetUDAll(YT_, 0x09)								SCROFF//;
%                                           XT YT  Ca(MRW1R1_DD_)														SCROFF//;       
%                                           XT YT  Ca(MRW2R1_DD_)														SCROFF//; 
%				STI(8, 0x5)                 XT YT  Ca(CYP8_DD_)   xSetUDAll(XT_, 0x00)								SCROFF//; TMRS 2  MR9  OP2 H , 20190926 (changed 4 to 2 for XT)
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)   ySetUDAll(YT_, 0x09)								SCROFF//;
%                                           XT YT  Ca(MRW1R1_DD_)														SCROFF//;       
%                                           XT YT  Ca(MRW2R1_DD_)														SCROFF//; 
%				STI(8, 0x5)                 XT YT  Ca(CYP8_DD_)   xSetUDAll(XT_, 0x00)								SCROFF//; TMRS 2  MR9  OP2 H , 20190926 (changed 4 to 2 for XT)
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)   ySetUDAll(YT_, 0x09)								SCROFF//;
%                                           XT YT  Ca(MRW1R1_DD_)														SCROFF//;       
%                                           XT YT  Ca(MRW2R1_DD_)														SCROFF//; 
%               RTN                         XT YT  Ca(CYP8_DD_)														SCROFF//; 
%D_DSPBT_CS0:  STI(8, 0x0)                 XT YT  Ca(CYP8_DD_)   xSetUDAll(XT_, 0x01)								SCROFF//; TMRS 1  MR9  OP1 H , 20190926 (changed 2 to 1 for XT)
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)   ySetUDAll(YT_, 0x09)								SCROFF//;
%                                           XT YT  Ca(MRW1R1_DD_)														SCROFF//;       
%                                           XT YT  Ca(MRW2R1_DD_)														SCROFF//; 
%				STI(8, 0x5)                 XT YT  Ca(CYP8_DD_)   xSetUDAll(XT_, 0x02)								SCROFF//; TMRS 2  MR9  OP2 H , 20190926 (changed 4 to 2 for XT)
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)   ySetUDAll(YT_, 0x09)								SCROFF//;
%                                           XT YT  Ca(MRW1R1_DD_)														SCROFF//;       
%                                           XT YT  Ca(MRW2R1_DD_)														SCROFF//; 
%				STI(8, 0x5)                 XT YT  Ca(CYP8_DD_)   xSetUDAll(XT_, 0x04)								SCROFF//; TMRS 2  MR9  OP2 H , 20190926 (changed 4 to 2 for XT)
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)   ySetUDAll(YT_, 0x09)								SCROFF//;
%                                           XT YT  Ca(MRW1R1_DD_)														SCROFF//;       
%                                           XT YT  Ca(MRW2R1_DD_)														SCROFF//; 
%				STI(8, 0x5)                 XT YT  Ca(CYP8_DD_)   xSetUDAll(XT_, 0x00)								SCROFF//; TMRS 2  MR9  OP2 H , 20190926 (changed 4 to 2 for XT)
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)   ySetUDAll(YT_, 0x09)								SCROFF//;
%                                           XT YT  Ca(MRW1R1_DD_)														SCROFF//;       
%                                           XT YT  Ca(MRW2R1_DD_)														SCROFF//; 
%				STI(8, 0x5)                 XT YT  Ca(CYP8_DD_)   xSetUDAll(XT_, 0x00)								SCROFF//; TMRS 2  MR9  OP2 H , 20190926 (changed 4 to 2 for XT)
%				IDXI(8, BranchSelf)			XT YT  Ca(CYP8_DD_)   ySetUDAll(YT_, 0x09)								SCROFF//;
%                                           XT YT  Ca(MRW1R1_DD_)														SCROFF//;       
%                                           XT YT  Ca(MRW2R1_DD_)														SCROFF//; 
%               RTN                         XT YT  Ca(CYP8_DD_)														SCROFF//; 
																														  
//;  ------------------------------------------------------------------------





